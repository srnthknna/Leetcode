{"id":487962767,"lang":"java","time":"10Â months","timestamp":1619978048,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/487962767/","is_pending":"Not Pending","title":"3Sum Closest","memory":"38.4 MB","code":"class Solution {\n    public int threeSumClosest(int[] nums, int target) {\n        int diff = Integer.MAX_VALUE, length = nums.length;\n        Arrays.sort(nums);\n        for (int  i = 0; i < length && diff != 0; i++) {\n            int low = i + 1, high = length  - 1;\n            while (low < high) {\n                int sum = nums[i] + nums[low] + nums[high];\n                if (Math.abs(target - sum) < Math.abs(diff)) {\n                    diff = target - sum;\n                } else if (sum < target) {\n                    low++;\n                } else {\n                    high--;\n                }\n            }\n        }\n        return target - diff;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-closest"}