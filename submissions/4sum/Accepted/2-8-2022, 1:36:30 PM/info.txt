{"id":637430787,"lang":"java","time":"2 weeks, 5 days","timestamp":1644356190,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/637430787/","is_pending":"Not Pending","title":"4Sum","memory":"44.8 MB","code":"class Solution {\n    //https://www.youtube.com/watch?v=4ggF3tXIAp0\n    // Sort the array and then use n-2 looks plus 2 pointer to do the remaining \n    public List<List<Integer>> fourSum(int[] nums, int target) {\n        List<List<Integer>> result = new ArrayList<>();\n        if (nums == null || nums.length == 0)\n            return result;\n        Arrays.sort(nums);\n        int n = nums.length;\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                int target2 = target - nums[i] - nums[j];\n                int left = j + 1;\n                int right = n - 1;\n                \n                while (left < right) {\n                    int twoSum = nums[left] + nums[right];\n                    if (twoSum < target2) {\n                        left++;\n                    } else if (twoSum > target2) {\n                        right--;\n                    }\n                    else {\n                        List<Integer> quad = Arrays.asList(nums[i], nums[j], nums[left], nums[right]);\n                        result.add(quad);\n                        while (left < right && nums[left] == quad.get(2)) left++;\n                        while (left < right && nums[right] == quad.get(2)) right--;\n                    }\n                }\n                while (j + 1 < n && nums[j + 1] == nums[j]) j++;\n            }\n            while (i + 1 < n && nums[i + 1] == nums[i]) i++;\n        }\n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum"}