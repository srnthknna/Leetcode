{"id":498605462,"lang":"java","time":"9 months, 1 week","timestamp":1622045797,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/498605462/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"39.6 MB","code":"class Solution {\n    public int[] asteroidCollision(int[] asteroids) {\n        Stack<Integer> stack = new Stack<>();\n        for (int asteroid : asteroids) {\n            if (asteroid > 0) {\n                stack.push(asteroid);\n            } else {\n                while (!stack.isEmpty() && stack.peek() > 0 && stack.peek() < Math.abs(asteroid)) {\n                    stack.pop();\n                } \n                if (stack.isEmpty() || stack.peek() < 0) {\n                    stack.push(asteroid);\n                } else if (stack.peek() == Math.abs(asteroid)) {\n                    stack.pop();\n                }\n            }\n        }\n        int[] ret = new int[stack.size()];\n        for (int i = stack.size() - 1; i >= 0; i--) {\n            ret[i] = stack.pop();\n        }\n        return ret;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"asteroid-collision"}