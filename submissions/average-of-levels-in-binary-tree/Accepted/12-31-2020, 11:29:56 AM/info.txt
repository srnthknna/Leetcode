{"id":436890673,"lang":"java","time":"1 year, 1 month","timestamp":1609442996,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/436890673/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"40.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Double> averageOfLevels(TreeNode root) {\n        List<Double> averages = new ArrayList<>();\n        List<TreeNode> curr = new ArrayList<>(), next = new ArrayList<>();;\n        curr.add(root);\n        while(!curr.isEmpty()) {\n            next = new ArrayList();\n            double avg = 0;\n            int count = 0;\n            for (TreeNode n : curr) {\n                if (n != null) {\n                    avg = avg + n.val;\n                    count++;\n                    next.add(n.left);\n                    next.add(n.right);\n                }\n            }\n            \n            if (count != 0) averages.add(avg / count);   \n            curr = next;\n        }\n        return averages;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree"}