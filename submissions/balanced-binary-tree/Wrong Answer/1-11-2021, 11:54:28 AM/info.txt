{"id":441714095,"lang":"java","time":"1 year, 1 month","timestamp":1610394868,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/441714095/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n        if (root == null) return true;\n        if (root.left == null && root.right == null) return true;\n        if (root.left == null || root.left == null) return false;\n        return isBalanced(root.left) && isBalanced(root.right);\n    }\n}","compare_result":"101110111110110111011111111010111010111111111111111111000011111011111101011010111111111111111111111111111111111111111111111111010110101101111110111101111011111101011010111111111111111101011101101011111101011010000111111000001110","title_slug":"balanced-binary-tree"}