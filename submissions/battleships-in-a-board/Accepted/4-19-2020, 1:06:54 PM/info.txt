{"id":327315904,"lang":"java","time":"1 year, 10 months","timestamp":1587326814,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/327315904/","is_pending":"Not Pending","title":"Battleships in a Board","memory":"41.2 MB","code":"class Solution {\n    public int countBattleships(char[][] board) {\n        if (board == null || board.length == 0) {\n            return 0;\n        }\n        \n        int ships = 0;\n        for (int i = 0; i < board.length; i++) {\n            for (int j = 0; j < board[i].length; j++) {\n                if (board[i][j] == 'X') {\n                    ships += dfs(board, i, j);\n                }\n            }\n        }\n        return ships;\n    }\n    \n    private int dfs(char[][] board, int i, int j) {\n        if (i < 0 || i >= board.length || j < 0 || j >= board[i].length || board[i][j] == '.') {\n            return 0;\n        }\n        board[i][j] = '.';\n        dfs(board, i - 1, j);\n        dfs(board, i + 1, j);\n        dfs(board, i, j + 1);\n        dfs(board, i, j - 1);\n        return 1;\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"battleships-in-a-board"}