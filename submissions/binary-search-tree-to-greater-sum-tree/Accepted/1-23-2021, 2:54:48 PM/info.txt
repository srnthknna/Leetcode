{"id":446896745,"lang":"java","time":"1 year, 1 month","timestamp":1611442488,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/446896745/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"36.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode bstToGst(TreeNode root) {\n        bst(root, 0);\n        return root;\n    }\n    \n    private void bst(TreeNode root, int parentSum) {\n        if (root == null) return;\n        root.val = root.val + parentSum + childSum(root.right);\n        bst(root.left, root.val);\n        bst(root.right, parentSum);\n    }\n    \n    private int childSum(TreeNode root) {\n        if (root == null) return 0;\n        return root.val + childSum(root.left) + childSum(root.right);\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree"}