{"id":625659377,"lang":"java","time":"1Â month","timestamp":1642901765,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/625659377/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"48.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int max = 0;\n    public int longestConsecutive(TreeNode root) {\n        helper(root, null, 0);\n        return max;\n    }\n    \n    private void helper(TreeNode root, TreeNode parent, int length) {\n        if (root == null) return;\n        length = (parent != null && root.val == parent.val + 1) ? length + 1 : 1;\n        max = Math.max(max, length);\n        helper(root.left, root, length);\n        helper(root.right, root, length);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence"}