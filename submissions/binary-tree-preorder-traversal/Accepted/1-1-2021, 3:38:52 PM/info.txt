{"id":437293118,"lang":"java","time":"1 year, 1 month","timestamp":1609544332,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/437293118/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"37.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> preorderTraversal(TreeNode root) {\n        List<Integer> output = new ArrayList<>();\n        \n        helper(root, output);\n        \n        return output;\n    }\n    \n    private void helper(TreeNode root, List output) {\n        if (root == null) return;\n        output.add(root.val);\n        helper(root.left, output);\n        helper(root.right, output);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}