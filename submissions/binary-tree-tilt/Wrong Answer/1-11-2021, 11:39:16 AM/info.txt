{"id":441708562,"lang":"java","time":"1 year, 1 month","timestamp":1610393956,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/441708562/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int findTilt(TreeNode root) {\n        if (root == null) return 0;\n        \n        //System.out.println(\"\\n\\n\\n\" + root.val);\n        if (root.left == null && root.right == null) {\n            return 0;\n        }\n        \n        int left = 0, right = 0;\n        if (root.left != null) {\n            left = findTilt(root.left);\n        }\n        if (root.right != null) {\n            right = findTilt(root.right);\n        }\n\n        return root.val + left + right;\n    }\n    \n}","compare_result":"11000000011001000001000000000001000000000000001000000000000000000000000000000","title_slug":"binary-tree-tilt"}