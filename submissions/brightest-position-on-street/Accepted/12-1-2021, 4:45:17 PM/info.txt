{"id":595666824,"lang":"java","time":"2 months, 3 weeks","timestamp":1638405917,"status_display":"Accepted","runtime":"304 ms","url":"/submissions/detail/595666824/","is_pending":"Not Pending","title":"Brightest Position on Street","memory":"94.9 MB","code":"class Solution {\n    public int brightestPosition(int[][] lights) {\n        TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>();\n        for (int[] ligth : lights) {\n            int s = ligth[0] - ligth[1];\n            int e = ligth[0] + ligth[1] + 1;\n            map.put(s, map.getOrDefault(s, 0) + 1);\n            map.put(e, map.getOrDefault(e, 0) - 1);\n        }\n        int curr = 0, max = 0, result = 0;\n        for (int num : map.keySet()) {\n            curr += map.get(num);\n            if (curr > max) {\n                max = curr;\n                result = num;\n            }\n        }\n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"brightest-position-on-street"}