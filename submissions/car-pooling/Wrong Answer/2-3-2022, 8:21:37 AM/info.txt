{"id":633765794,"lang":"java","time":"3 weeks, 3 days","timestamp":1643905297,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/633765794/","is_pending":"Not Pending","title":"Car Pooling","memory":"N/A","code":"class Solution {\n    //https://www.youtube.com/watch?v=nO95uYKB-lo&list=PL-Jc9J83PIiE-TR27GB7V5TBLQRT5RnSl&index=74&ab_channel=Pepcoding\n    public boolean carPooling(int[][] trips, int capacity) {\n        int lastDrop = -1;\n        for (int[] trip : trips) {\n            lastDrop = Math.max(lastDrop, trip[1]);\n        }\n        int[] highway = new int[lastDrop + 1];\n        \n        for (int[] trip: trips) {\n            highway[trip[0]] += trip[2];\n            highway[trip[1]] -= trip[2];\n        }\n        \n        for (int i = 1; i <= lastDrop; i++) {\n            if (highway[i] > capacity) return false;\n        }\n        return true;\n    }\n}","compare_result":"11000000000000000000000000000000000000000000000000000000000","title_slug":"car-pooling"}