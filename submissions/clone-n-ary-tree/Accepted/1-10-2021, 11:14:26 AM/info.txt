{"id":441244199,"lang":"java","time":"1 year, 1 month","timestamp":1610306066,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/441244199/","is_pending":"Not Pending","title":"Clone N-ary Tree","memory":"141.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    \n    public Node() {\n        children = new ArrayList<Node>();\n    }\n    \n    public Node(int _val) {\n        val = _val;\n        children = new ArrayList<Node>();\n    }\n    \n    public Node(int _val,ArrayList<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public Node cloneTree(Node root) {\n        // sanity check\n        if(root == null) return root;\n        \n        Map<Node, Node> map = new HashMap<>();\n        map.put(root, new Node(root.val));\n        \n        Stack<Node> stack = new Stack<>();\n        stack.push(root);\n        \n        while(!stack.isEmpty()){\n            Node cur = stack.pop();\n            \n            for(Node next : cur.children){\n                if(!map.containsKey(next)){\n                    map.put(next, new Node(next.val));\n                    stack.push(next);\n                }\n                \n                map.get(cur).children.add(map.get(next));\n            }\n        }\n        \n        return map.get(root);\n    }\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"clone-n-ary-tree"}