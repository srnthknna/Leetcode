{"id":438629018,"lang":"java","time":"1 year, 1 month","timestamp":1609802658,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/438629018/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"38.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int closestValue(TreeNode root, double target) {\n        int closest = root.val;\n        \n        while (root != null) {\n            closest = Math.abs(root.val - target) < Math.abs(closest - target) ? root.val : closest;\n            root = target < root.val ? root.left : root.right;\n        }\n        return closest;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value"}