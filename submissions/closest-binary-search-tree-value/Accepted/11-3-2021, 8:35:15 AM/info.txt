{"id":581538430,"lang":"java","time":"3 months, 3 weeks","timestamp":1635953715,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/581538430/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    double min;\n    int ans;\n    public int closestValue(TreeNode root, double target) {\n        min = Integer.MAX_VALUE;\n        inorder(root, target);\n        return ans;\n    }\n    \n    private void inorder(TreeNode root, double target) {\n        if (root == null) return;\n        \n        inorder(root.left, target);\n        \n        if (min > Math.abs(root.val - target)) {\n            ans = root.val;\n            min = Math.abs(root.val - target);\n        }\n        \n        inorder(root.right, target);\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value"}