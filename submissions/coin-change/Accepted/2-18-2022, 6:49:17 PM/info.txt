{"id":644248413,"lang":"java","time":"1 week, 1 day","timestamp":1645238957,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/644248413/","is_pending":"Not Pending","title":"Coin Change","memory":"58 MB","code":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n        int n = coins.length;\n        int[][] dp = new int[n + 1][amount + 1];\n        \n        for (int i = 0; i <= amount; i++) {\n            dp[0][i] = Integer.MAX_VALUE - 1;\n        }\n        \n        for (int i = 0; i <= amount; i++) {\n            if (i % coins[0] == 0) {\n                dp[1][i] = i / coins[0];\n            } else {\n                dp[1][i] = Integer.MAX_VALUE - 1;\n            }\n        }\n        for (int i = 2; i <= n; i++) {\n            for (int j = 1; j <= amount; j++) {\n                if (coins[i - 1] <= j) {\n                    dp[i][j] = Math.min(dp[i - 1][j], 1 + dp[i][j - coins[i - 1]]);\n                } else {\n                    dp[i][j] = dp[i - 1][j];\n                }\n            }\n        }\n        return dp[n][amount] > amount ? -1 : dp[n][amount];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change"}