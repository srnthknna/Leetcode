{"id":522127764,"lang":"java","time":"7 months, 2 weeks","timestamp":1626215639,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/522127764/","is_pending":"Not Pending","title":"Combination Sum III","memory":"36.6 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum3(int k, int n) {\n        List<List<Integer>> ans = new ArrayList<>();\n        helper(ans, new ArrayList<>(), k, n, 1);\n        return ans;\n    }\n    \n    private void helper(List<List<Integer>> ans, List<Integer> comb, int k, int n, int start) {\n        if (n < 0) \n            return;\n        if (n == 0 && k == comb.size()) {\n            List<Integer> li = new ArrayList<>(comb);\n            ans.add(li);\n            return;\n        }\n        \n        for (int i = start; i < 10; i++) {\n            comb.add(i);\n            helper(ans, comb, k, n - i, i + 1);\n            comb.remove(comb.size() - 1);\n        }\n        \n    }\n}","compare_result":"111111111111111111","title_slug":"combination-sum-iii"}