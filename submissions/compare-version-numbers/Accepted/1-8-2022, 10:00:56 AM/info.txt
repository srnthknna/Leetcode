{"id":615691394,"lang":"java","time":"1 month, 2 weeks","timestamp":1641664856,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/615691394/","is_pending":"Not Pending","title":"Compare Version Numbers","memory":"37.2 MB","code":"class Solution {\n    public int compareVersion(String version1, String version2) {\n        String[] nums1 = version1.split(\"\\\\.\");\n        String[] nums2 = version2.split(\"\\\\.\");\n        int n1 = nums1.length, n2 = nums2.length;\n        \n        int i1, i2;\n        for (int i = 0; i < Math.max(n1, n2); i++) {\n            i1 = i < n1 ? Integer.parseInt(nums1[i]) : 0;\n            i2 = i < n2 ? Integer.parseInt(nums2[i]) : 0;\n            if (i1 != i2)\n                return i1 > i2 ? 1 : -1;\n        }\n        return 0;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"compare-version-numbers"}