{"id":647522867,"lang":"java","time":"4 days, 8 hours","timestamp":1645633171,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/647522867/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"89.3 MB","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n        int sum = 0;\n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1);\n        \n        for (int i = 0; i < nums.length; i++) {\n            sum += nums[i];\n            int rem = sum % k;\n            \n            if (map.containsKey(rem)) {\n                if (i - map.get(rem) >= 2)\n                    return true;\n            } else {\n                map.put(rem, i);\n            }\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum"}