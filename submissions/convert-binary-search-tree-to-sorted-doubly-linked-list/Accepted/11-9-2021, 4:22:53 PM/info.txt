{"id":584733343,"lang":"java","time":"3 months, 2 weeks","timestamp":1636503773,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/584733343/","is_pending":"Not Pending","title":"Convert Binary Search Tree to Sorted Doubly Linked List","memory":"38.4 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val,Node _left,Node _right) {\n        val = _val;\n        left = _left;\n        right = _right;\n    }\n};\n*/\n\nclass Solution {\n    Node first;\n    Node last;\n    \n    private void helper(Node root) {\n        if (root != null) {\n            helper(root.left);\n            \n            if (last != null) {\n                last.right = root;\n                root.left = last;\n            } else {\n                first = root;\n            }\n            last = root;\n            \n            helper(root.right);\n        }\n    }\n    \n    public Node treeToDoublyList(Node root) {\n        if (root == null) return null;\n        \n        helper(root);\n        \n        last.right = first;\n        first.left = last;\n        \n        return first;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"convert-binary-search-tree-to-sorted-doubly-linked-list"}