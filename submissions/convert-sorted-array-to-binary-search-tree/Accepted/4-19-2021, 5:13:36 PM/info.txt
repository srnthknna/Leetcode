{"id":482801116,"lang":"java","time":"10 months, 2 weeks","timestamp":1618877616,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/482801116/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"39 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        return helper(nums, 0, nums.length - 1);\n    }\n    \n    private TreeNode helper(int[] nums, int left, int right) {\n        if (left > right) return null;\n        \n        int p = (left + right) / 2;\n        \n        TreeNode root = new TreeNode(nums[p]);\n        root.left = helper(nums, left, p - 1);\n        root.right = helper(nums, p + 1, right);\n        return root;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}