{"id":610452459,"lang":"java","time":"1 month, 4 weeks","timestamp":1640971926,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/610452459/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"47.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int countNodes(TreeNode root) {\n        if (root == null) return 0;\n        int lh = 0, rh = 0;\n        TreeNode left = root, right = root;\n        \n        while (left != null) {\n            left = left.left;\n            lh++;\n        }\n        \n        while (right != null) {\n            right = right.right;\n            rh++;\n        }\n        \n        if (lh == rh) {\n            return ((1 << lh) - 1);\n        }\n        \n        return 1 + countNodes(root.left) + countNodes(root.right);\n    }\n}","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}