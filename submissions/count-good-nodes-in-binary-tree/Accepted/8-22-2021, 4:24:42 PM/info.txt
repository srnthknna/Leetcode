{"id":542619464,"lang":"java","time":"6 months, 1 week","timestamp":1629674682,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/542619464/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"48 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int numGoodNodes = 0;\n    public int goodNodes(TreeNode root) {\n        dfs(root, Integer.MIN_VALUE);\n        return numGoodNodes;\n    }\n    \n    private void dfs(TreeNode root, int max) {\n        if (max <= root.val)\n            numGoodNodes++;\n        \n        if (root.right != null) \n            dfs(root.right, Math.max(max, root.val));\n        if (root.left != null)\n            dfs(root.left, Math.max(max, root.val));\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}