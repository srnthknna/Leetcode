{"id":629255132,"lang":"java","time":"1Â month","timestamp":1643328702,"status_display":"Accepted","runtime":"129 ms","url":"/submissions/detail/629255132/","is_pending":"Not Pending","title":"Count Special Quadruplets","memory":"74.5 MB","code":"class Solution {\n\tpublic int countQuadruplets(int[] nums) {\n\t\tMap<Integer, List<Integer>> map = new HashMap<>();\n\t\tint res = 0;\n\t\tfor (int i = 0; i < nums.length - 2; i ++) {\n\t\t\tfor (int j = i + 1; j < nums.length - 1; j ++) {\n\t\t\t\tfor (int k = j + 1; k < nums.length; k ++) {\n\t\t\t\t\tint s = nums[i] + nums[j] + nums[k];\n\t\t\t\t\tmap.putIfAbsent(s, new ArrayList<>());\n\t\t\t\t\tmap.get(s).add(k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < nums.length; i ++) {\n\t\t\tif (map.containsKey(nums[i])) {\n\t\t\t\tfor (int v: map.get(nums[i])) {\n\t\t\t\t\tif (i > v) {\n\t\t\t\t\t\tres++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-special-quadruplets"}