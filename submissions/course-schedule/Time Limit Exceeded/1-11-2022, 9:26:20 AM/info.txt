{"id":617756562,"lang":"java","time":"1 month, 2 weeks","timestamp":1641921980,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/617756562/","is_pending":"Not Pending","title":"Course Schedule","memory":"N/A","code":"class Solution {\n    public boolean canFinish(int numCourses, int[][] prerequisites) {\n        List<Integer>[] adj = new ArrayList[numCourses];\n        \n        for (int i = 0; i < numCourses; i++)\n            adj[i] = new ArrayList<Integer>();\n        \n        for (int[] pre : prerequisites)\n            adj[pre[0]].add(pre[1]);\n        \n        int[] visited = new int[numCourses];\n        \n        for (int i = 0; i < numCourses; i++)\n            if (visited[i] == 0 && !dfs(adj, visited, i)) return false;\n        return true;\n    }\n    \n    private boolean dfs(List<Integer>[] adj, int[] visited, int v) {\n        if (visited[v] == 1) return false;\n        visited[v] = 1;\n        for (int ad : adj[v]) \n            if (!dfs(adj, visited, ad)) return false;\n        visited[v] = 2;\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111000","title_slug":"course-schedule"}