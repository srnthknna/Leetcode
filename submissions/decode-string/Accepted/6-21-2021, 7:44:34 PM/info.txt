{"id":511371578,"lang":"java","time":"8 months, 1 week","timestamp":1624329874,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/511371578/","is_pending":"Not Pending","title":"Decode String","memory":"37.2 MB","code":"class Solution {\n    public String decodeString(String s) {\n        Stack<Integer> count = new Stack();\n        Stack<StringBuilder> strings = new Stack();\n        StringBuilder cstring = new StringBuilder();\n        int k = 0;\n        for (char c : s.toCharArray()) {\n            if (Character.isDigit(c)) {\n                k = 10 * k + (c - '0');\n            } else if (c == '[') {\n                count.push(k);\n                strings.push(cstring);\n                k = 0;\n                cstring = new StringBuilder();\n            } else if (c == ']') {\n                StringBuilder decoded = strings.pop();\n                for (int i = count.pop(); i > 0; i--) {\n                    decoded.append(cstring);\n                }\n                cstring = decoded;\n            } else {\n                cstring.append(c);\n            }\n        }\n        return cstring.toString();\n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"decode-string"}