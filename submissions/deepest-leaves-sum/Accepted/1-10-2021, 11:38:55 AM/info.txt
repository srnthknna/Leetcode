{"id":441253000,"lang":"java","time":"1 year, 1 month","timestamp":1610307535,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/441253000/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"48.4 MB","code":"class Solution {\n  public int deepestLeavesSum(TreeNode root) {\n    ArrayDeque<TreeNode>  nextLevel = new ArrayDeque(),\n                          currLevel = new ArrayDeque();\n    nextLevel.offer(root);\n\n    while (!nextLevel.isEmpty()) {\n      // prepare for the next level\n      currLevel = nextLevel.clone();\n      nextLevel.clear();\n\n      for (TreeNode node: currLevel) {\n        // add child nodes of the current level\n        // in the queue for the next level\n        if (node.left != null) {\n          nextLevel.offer(node.left);\n        }\n        if (node.right != null) {\n          nextLevel.offer(node.right);\n        }\n      }\n    }\n    int deepestSum = 0;\n    for (TreeNode node: currLevel) {\n      deepestSum += node.val;\n    }\n    return deepestSum;\n  }\n}","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}