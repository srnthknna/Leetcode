{"id":646312264,"lang":"java","time":"6 days, 1 hour","timestamp":1645483963,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/646312264/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"44.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int deepestLeavesSum(TreeNode root) {\n        Queue<TreeNode> queue = new LinkedList<>();\n        if (root == null) return 0;\n        \n        queue.offer(root);\n        int sum = 0;\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            sum = 0;\n            for (int i = 0; i < size; i++) {\n                TreeNode curr = queue.poll();\n                sum += curr.val;\n                if (curr.left != null) {\n                    queue.offer(curr.left);\n                }\n                if (curr.right != null) {\n                    queue.offer(curr.right);\n                }\n            }\n        }\n        \n        return sum;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"deepest-leaves-sum"}