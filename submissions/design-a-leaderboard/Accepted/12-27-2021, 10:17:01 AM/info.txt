{"id":608070850,"lang":"java","time":"2Â months","timestamp":1640629021,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/608070850/","is_pending":"Not Pending","title":"Design A Leaderboard","memory":"38.9 MB","code":"class Leaderboard {\n    Map<Integer, Integer> scores;\n    TreeMap<Integer, Integer> sortedScores;\n\n    public Leaderboard() {\n        scores = new HashMap<>();\n        sortedScores = new TreeMap<>(Collections.reverseOrder());\n    }\n    \n    public void addScore(int playerId, int score) {\n        if (!scores.containsKey(playerId)) {\n            scores.put(playerId, score);\n            sortedScores.put(score, sortedScores.getOrDefault(score, 0) + 1);\n        } else {\n            int prevScore = scores.get(playerId);\n            int prevCount = sortedScores.get(prevScore);\n            \n            if (prevCount == 1) {\n                sortedScores.remove(prevScore);\n            } else {\n                sortedScores.put(prevScore, prevCount - 1);\n            }\n            \n            int currentScore = prevScore + score;\n            scores.put(playerId, currentScore);\n            sortedScores.put(currentScore, sortedScores.getOrDefault(currentScore, 0) + 1);\n        }\n    }\n    \n    public int top(int k) {\n        int count = 0;\n        int sum = 0;\n        for (Map.Entry<Integer, Integer> entry : sortedScores.entrySet()) {\n            int numOfOccurence = entry.getValue();\n            int score = entry.getKey();\n            \n            while (numOfOccurence > 0) {\n                numOfOccurence--;\n                count++;\n                sum += score;\n                \n                if (count == k) {\n                    return sum;\n                }\n            }\n            \n            if (count == k) {\n                return sum;\n            }\n            \n        }\n        return sum;\n    }\n    \n    public void reset(int playerId) {\n        int prevScore = scores.get(playerId);\n        int playerCount = sortedScores.get(prevScore);\n        if (playerCount == 1) {\n            sortedScores.remove(prevScore);\n        } else {\n            sortedScores.put(prevScore, playerCount - 1);\n        }\n        scores.remove(playerId);\n    }\n}\n\n/**\n * Your Leaderboard object will be instantiated and called as such:\n * Leaderboard obj = new Leaderboard();\n * obj.addScore(playerId,score);\n * int param_2 = obj.top(K);\n * obj.reset(playerId);\n */","compare_result":"111111111111111111","title_slug":"design-a-leaderboard"}