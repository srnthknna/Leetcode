{"id":443416144,"lang":"java","time":"1 year, 1 month","timestamp":1610743515,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/443416144/","is_pending":"Not Pending","title":"Design an Ordered Stream","memory":"40.4 MB","code":"class OrderedStream {\n    \n    String[] map;\n    int ptr = 0;\n\n    public OrderedStream(int n) {\n        map = new String[n];\n    }\n    \n    public List<String> insert(int id, String value) {\n        int i = id - 1;\n        map[i] = value;\n        List<String> result = new ArrayList<>();\n        if(map[ptr] == null){\n            return result;\n        }\n        while (i < map.length && i == ptr && map[i] != null) {\n            result.add(map[i]); \n            i++;\n            ptr++;\n        }\n        return result;\n    }\n}\n\n/**\n * Your OrderedStream object will be instantiated and called as such:\n * OrderedStream obj = new OrderedStream(n);\n * List<String> param_1 = obj.insert(id,value);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-an-ordered-stream"}