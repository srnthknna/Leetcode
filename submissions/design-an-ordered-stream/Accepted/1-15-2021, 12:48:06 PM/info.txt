{"id":443416937,"lang":"java","time":"1 year, 1 month","timestamp":1610743686,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/443416937/","is_pending":"Not Pending","title":"Design an Ordered Stream","memory":"40.5 MB","code":"class OrderedStream {\n    \n    String[] map;\n    int ptr = 1;\n\n    public OrderedStream(int n) {\n        map = new String[n + 1];\n    }\n    \n    public List<String> insert(int id, String value) {\n        map[id] = value;\n        List<String> result = new ArrayList<>();\n        \n        while (ptr < map.length && map[ptr] != null) {\n            result.add(map[ptr++]); \n        }\n        return result;\n    }\n}\n\n/**\n * Your OrderedStream object will be instantiated and called as such:\n * OrderedStream obj = new OrderedStream(n);\n * List<String> param_1 = obj.insert(id,value);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-an-ordered-stream"}