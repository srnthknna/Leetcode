{"id":553760644,"lang":"java","time":"5 months, 2 weeks","timestamp":1631469494,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/553760644/","is_pending":"Not Pending","title":"Design Compressed String Iterator","memory":"44.6 MB","code":"class StringIterator {\n    \n    String res;\n    int ptr = 0, num = 0;\n    char ch = ' ';\n\n    public StringIterator(String compressedString) {\n        res = compressedString;\n    }\n    \n    public char next() {\n        if (!hasNext()) return ' ';\n        if (num == 0) {\n            ch = res.charAt(ptr++);\n            while (ptr < res.length() && Character.isDigit(res.charAt(ptr))) {\n                num = num * 10 + (res.charAt(ptr++) - '0');\n            }\n        }\n        num--;\n        return ch;\n    }\n    \n    public boolean hasNext() {\n        return res.length() != ptr || num != 0;\n    }\n}\n\n/**\n * Your StringIterator object will be instantiated and called as such:\n * StringIterator obj = new StringIterator(compressedString);\n * char param_1 = obj.next();\n * boolean param_2 = obj.hasNext();\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-compressed-string-iterator"}