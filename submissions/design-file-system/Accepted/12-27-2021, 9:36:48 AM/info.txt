{"id":608051984,"lang":"java","time":"2Â months","timestamp":1640626608,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/608051984/","is_pending":"Not Pending","title":"Design File System","memory":"47.4 MB","code":"class FileSystem {\n    \n    Map<String, Integer> paths = new HashMap<>();\n\n    public FileSystem() {\n        \n    }\n    \n    public boolean createPath(String path, int value) {\n        if (path.isEmpty() || (path.length() == 1 && path.equals(\"/\")) || paths.containsKey(path)) {\n            return false;\n        }\n        \n        int delim = path.lastIndexOf(\"/\");\n        String parent = path.substring(0, delim);\n        \n        if (parent.length() > 1 && !paths.containsKey(parent)) {\n            return false;\n        }\n        paths.put(path, value);\n        return true;\n    }\n    \n    public int get(String path) {\n        return paths.getOrDefault(path, -1);\n    }\n}\n\n/**\n * Your FileSystem object will be instantiated and called as such:\n * FileSystem obj = new FileSystem();\n * boolean param_1 = obj.createPath(path,value);\n * int param_2 = obj.get(path);\n */","compare_result":"11111111111111111","title_slug":"design-file-system"}