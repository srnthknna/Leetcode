{"id":553821108,"lang":"java","time":"5 months, 2 weeks","timestamp":1631477219,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/553821108/","is_pending":"Not Pending","title":"Design HashMap","memory":"59.7 MB","code":"class MyHashMap {\n    \n    class Entry {\n        int key;\n        int value;\n        \n        public Entry(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n    }\n    \n    LinkedList<Entry>[] map;\n    private static int SIZE = 769;\n\n    /** Initialize your data structure here. */\n    public MyHashMap() {\n        map = new LinkedList[SIZE];\n    }\n    \n    /** value will always be non-negative. */\n    public void put(int key, int value) {\n        int bucket = key % SIZE;\n        LinkedList<Entry> nodes = map[bucket];\n        if (nodes != null) {\n            for (Entry entry : nodes) {\n                if (entry.key == key) {\n                    entry.value = value;\n                    return;\n                }\n            }\n            nodes.add(new Entry(key, value));\n            \n        } else {\n            map[bucket] = new LinkedList<>();\n            map[bucket].add(new Entry(key, value));\n        }\n    }\n    \n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\n    public int get(int key) {\n        int bucket = key % SIZE;\n        if (map[bucket] != null) {\n            LinkedList<Entry> nodes = map[bucket];\n            for (Entry entry : nodes) {\n                if (entry.key == key)\n                    return entry.value;\n            }\n        }\n        return -1;\n    }\n    \n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\n    public void remove(int key) {\n        int bucket = key % SIZE;\n        Entry toRemove = null;\n        if (map[bucket] != null) {\n            LinkedList<Entry> nodes = map[bucket];\n            for (Entry entry : nodes) {\n                if (entry.key == key)\n                    toRemove = entry;\n            }\n        }\n        if (toRemove != null) {\n            map[bucket].remove(toRemove);   \n        }   \n    }\n}\n\n/**\n * Your MyHashMap object will be instantiated and called as such:\n * MyHashMap obj = new MyHashMap();\n * obj.put(key,value);\n * int param_2 = obj.get(key);\n * obj.remove(key);\n */","compare_result":"111111111111111111111111111111111111","title_slug":"design-hashmap"}