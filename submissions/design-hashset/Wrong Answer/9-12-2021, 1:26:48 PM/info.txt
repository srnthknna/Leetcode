{"id":553829536,"lang":"java","time":"5 months, 2 weeks","timestamp":1631478408,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/553829536/","is_pending":"Not Pending","title":"Design HashSet","memory":"N/A","code":"class MyHashSet {\n    \n    LinkedList<Integer>[] map;\n    private static int SIZE = 769;\n\n    /** Initialize your data structure here. */\n    public MyHashSet() {\n        map = new LinkedList[SIZE];\n    }\n    \n    public void add(int key) {\n        int bucket = key % SIZE;\n        LinkedList<Integer> nodes = map[bucket];\n        if (nodes != null) {\n            for (int i : nodes)\n                if (i == key)\n                    return;\n        }\n        map[bucket] = new LinkedList<>();\n        map[bucket].add(key);\n    }\n    \n    public void remove(int key) {\n        int bucket = key % SIZE;\n        LinkedList<Integer> nodes = map[bucket];\n        Integer toRemove = null;\n        if (nodes != null) {\n            for (int node : nodes) {\n                if (node == key)\n                    toRemove = node;\n            }\n        }\n        if (toRemove == null)\n            return;\n        else\n            nodes.remove(toRemove);\n    }\n    \n    /** Returns true if this set contains the specified element */\n    public boolean contains(int key) {\n        int bucket = key % SIZE;\n        LinkedList<Integer> nodes = map[bucket];\n        return nodes != null ? nodes.contains(key) : false;\n    }\n}\n\n/**\n * Your MyHashSet object will be instantiated and called as such:\n * MyHashSet obj = new MyHashSet();\n * obj.add(key);\n * obj.remove(key);\n * boolean param_3 = obj.contains(key);\n */","compare_result":"11111111111111110000000000000001","title_slug":"design-hashset"}