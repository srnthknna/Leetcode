{"id":608082884,"lang":"java","time":"2Â months","timestamp":1640630584,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/608082884/","is_pending":"Not Pending","title":"Design Tic-Tac-Toe","memory":"41.8 MB","code":"class TicTacToe {\n    int[] rows;\n    int[] cols;\n    int diag;\n    int antiDiag;\n\n    public TicTacToe(int n) {\n        rows = new int[n];\n        cols = new int[n];\n    }\n    \n    public int move(int row, int col, int player) {\n        int currentPlayer = (player == 1) ? 1 : -1;\n        rows[row] += currentPlayer;\n        cols[col] += currentPlayer;\n        \n        if (row == col) {\n            diag += currentPlayer;\n        }\n        \n        if (col == (cols.length - row - 1)) {\n            antiDiag += currentPlayer;\n        }\n        \n        int n = rows.length;\n        \n        if (Math.abs(rows[row]) == n ||\n           Math.abs(cols[col]) == n ||\n           Math.abs(diag) == n ||\n           Math.abs(antiDiag) == n) \n            return player;\n        return 0;\n    }\n}\n\n/**\n * Your TicTacToe object will be instantiated and called as such:\n * TicTacToe obj = new TicTacToe(n);\n * int param_1 = obj.move(row,col,player);\n */","compare_result":"111111111111111111111111111111111","title_slug":"design-tic-tac-toe"}