{"id":499570044,"lang":"java","time":"9Â months","timestamp":1622231817,"status_display":"Accepted","runtime":"160 ms","url":"/submissions/detail/499570044/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"47.5 MB","code":"class Solution {\n    public boolean isPossibleDivide(int[] A, int k) {\n        Map<Integer, Integer> c = new TreeMap<>();\n        for (int num : A) {\n            c.merge(num, 1, (a, b) -> a + b);\n        }\n        for (int key : c.keySet()) {\n            if (c.get(key) > 0)\n                for (int i = k - 1; i >= 0; --i) {\n                    if (c.getOrDefault(key + i, 0) < c.get(key)) \n                        return false;\n                    c.merge(key + i, - c.get(key), (a, b) -> a + b);\n                }\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"divide-array-in-sets-of-k-consecutive-numbers"}