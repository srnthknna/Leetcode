{"id":499229637,"lang":"java","time":"9Â months","timestamp":1622166580,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/499229637/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"N/A","code":"class Solution {\n    public boolean isPossibleDivide(int[] A, int k) {\n        Map<Integer, Integer> c = new TreeMap<>();\n        for (int num : A) {\n            if (c.containsKey(num))\n                c.put(num, c.get(num) + 1);\n            else \n                c.put(num, 1);\n        }\n        for (int key : c.keySet())\n            if (c.get(key) > 0)\n                for (int i = k - 1; i >= 0; --i) {\n                    if (c.containsKey(key + i) && (c.get(key + i) < c.get(key))) \n                        return false;\n                    else\n                        c.put(key + i, c.get(key + i) - c.getOrDefault(key, 0));\n                }\n        return true;\n    }\n}","compare_result":"11100000000000000000000000000000000000000000000","title_slug":"divide-array-in-sets-of-k-consecutive-numbers"}