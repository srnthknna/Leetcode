{"id":441235061,"lang":"java","time":"1 year, 1 month","timestamp":1610304516,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/441235061/","is_pending":"Not Pending","title":"Dot Product of Two Sparse Vectors","memory":"116.4 MB","code":"class SparseVector {\n    \n    Map<Integer, Integer> map;\n    \n    SparseVector(int[] nums) {\n        map = new HashMap<>();\n        for (int i = 0; i < nums.length; i++) \n            if (nums[i] != 0)\n                map.put(i, nums[i]);\n    }\n    \n\t// Return the dotProduct of two sparse vectors\n    public int dotProduct(SparseVector vec) {\n        int res = 0;\n        for (Integer i : vec.map.keySet()) {\n            if (this.map.containsKey(i))\n                res += this.map.get(i) * vec.map.get(i);\n        }\n        return res;\n    }\n}\n\n// Your SparseVector object will be instantiated and called as such:\n// SparseVector v1 = new SparseVector(nums1);\n// SparseVector v2 = new SparseVector(nums2);\n// int ans = v1.dotProduct(v2);","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"dot-product-of-two-sparse-vectors"}