{"id":608086430,"lang":"java","time":"2Â months","timestamp":1640631047,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/608086430/","is_pending":"Not Pending","title":"Encode and Decode Strings","memory":"39.7 MB","code":"public class Codec {\n\n    // Encodes a list of strings to a single string.\n    public String encode(List<String> strs) {\n        if (strs.size() == 0) return Character.toString((char) 258);\n        String d = Character.toString((char) 257);\n        StringBuilder sb = new StringBuilder();\n        for (String s : strs) {\n            sb.append(s);\n            sb.append(d);\n        }\n        sb.deleteCharAt(sb.length() - 1);\n        return sb.toString();\n        \n    }\n\n    // Decodes a single string to a list of strings.\n    public List<String> decode(String s) {\n        String d = Character.toString((char) 258);\n        if (s.equals(d)) return new ArrayList<String>();\n        \n        d = Character.toString((char) 257);\n        return Arrays.asList(s.split(d, -1));\n    }\n}\n\n// Your Codec object will be instantiated and called as such:\n// Codec codec = new Codec();\n// codec.decode(codec.encode(strs));","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"encode-and-decode-strings"}