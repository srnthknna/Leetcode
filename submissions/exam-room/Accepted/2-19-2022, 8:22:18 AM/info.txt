{"id":644634832,"lang":"java","time":"1 week, 1 day","timestamp":1645287738,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/644634832/","is_pending":"Not Pending","title":"Exam Room","memory":"46.5 MB","code":"class ExamRoom {\n    TreeSet<Integer> set;\n    int n;\n\n    public ExamRoom(int n) {\n        set = new TreeSet<>();\n        this.n = n - 1;\n    }\n    \n    public int seat() {\n        if (set.size() == 0) {\n            set.add(0);\n            return 0;\n        }\n        \n        int left = set.first();\n        int max = 0;\n        int diff = left;\n        \n        for (int right : set) {\n            if (left == right) continue;\n            int mid = left + (right - left) / 2;\n            if (diff < Math.min(mid - left, right - mid) && !set.contains(mid)) {\n                diff = Math.min(mid - left, right - mid);\n                max = mid;\n            }\n            left = right;\n        }\n        \n        int last = set.last();\n        if (diff < n - last) max = n;\n        \n        set.add(max);\n        return max;\n    }\n    \n    public void leave(int p) {\n        set.remove(p);\n    }\n}\n\n/**\n * Your ExamRoom object will be instantiated and called as such:\n * ExamRoom obj = new ExamRoom(n);\n * int param_1 = obj.seat();\n * obj.leave(p);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"exam-room"}