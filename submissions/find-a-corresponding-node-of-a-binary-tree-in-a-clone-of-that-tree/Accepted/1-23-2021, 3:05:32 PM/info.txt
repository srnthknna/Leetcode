{"id":446900155,"lang":"java","time":"1 year, 1 month","timestamp":1611443132,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/446900155/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"46.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    \n    public final TreeNode getTargetCopy(final TreeNode original, final TreeNode cloned, final TreeNode target) {\nDeque<TreeNode> queue_o = new ArrayDeque();\n        queue_o.offer(original);\n        \n        Deque<TreeNode> queue_c = new ArrayDeque();\n        queue_c.offer(cloned);\n\n        while (!queue_o.isEmpty()) {\n            TreeNode node_o = queue_o.poll();\n            TreeNode node_c = queue_c.poll();\n            \n            if (node_o == target) {\n                return node_c;   \n            }\n            \n            if (node_o.left != null) {\n                queue_o.offer(node_o.left);\n                queue_c.offer(node_c.left);\n            }\n            if (node_o.right != null) {\n                queue_o.offer(node_o.right);\n                queue_c.offer(node_c.right);\n            }\n        }\n        return null;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"}