{"id":446900358,"lang":"java","time":"1 year, 1 month","timestamp":1611443169,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/446900358/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"46.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    \n    public final TreeNode getTargetCopy(final TreeNode original, final TreeNode cloned, final TreeNode target) {\n        Deque<TreeNode> stack_o = new ArrayDeque();\n        Deque<TreeNode> stack_c = new ArrayDeque();\n        TreeNode node_o = original, node_c = cloned;\n\n        while (!stack_o.isEmpty() || node_o != null) {\n            while (node_o != null) {\n                stack_o.add(node_o);\n                stack_c.add(node_c);\n\n                node_o = node_o.left;\n                node_c = node_c.left;\n            }\n            node_o = stack_o.removeLast();\n            node_c = stack_c.removeLast();\n            if (node_o == target) {\n                return node_c;\n            }\n            node_o = node_o.right;\n            node_c = node_c.right;\n        }\n        return null;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"}