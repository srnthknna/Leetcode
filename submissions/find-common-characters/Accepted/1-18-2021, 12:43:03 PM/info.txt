{"id":444718264,"lang":"java","time":"1 year, 1 month","timestamp":1611002583,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/444718264/","is_pending":"Not Pending","title":"Find Common Characters","memory":"39.2 MB","code":"class Solution {\n     public List<String> commonChars(String[] A) {\n         int[] hash1, hash2;\n         \n         hash1 = fillArray(A[0]);\n         \n         for (int i = 1; i < A.length; i++) {\n             hash2 = fillArray(A[i]);\n             intersection(hash1, hash2);\n         }\n         \n         List<String> result = new ArrayList<>();\n         \n         for (int i = 0; i < hash1.length; i++) {\n             while (hash1[i] > 0) {\n                 result.add((char) (i + 'a') + \"\");\n                 hash1[i]--;\n             }\n         }\n         return result;\n    }\n    \n    private int[] fillArray(String word) {\n        int[] charCount = new int[26];\n        for (char c : word.toCharArray()) {\n            charCount[c - 'a']++;\n        }\n        return charCount;\n    }\n    \n    private void intersection(int[] hash1, int[] hash2) {\n        for (int i = 0; i < hash1.length; i++) {\n            if (hash1[i] != hash2[i]) hash1[i] = Math.min(hash1[i], hash2[i]);\n        }\n    }\n\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-common-characters"}