{"id":437594804,"lang":"java","time":"1 year, 1 month","timestamp":1609608878,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/437594804/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"39.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> largestValues(TreeNode root) {\n        List<Integer> max_vals = new ArrayList<>();\n        \n        helper(root, max_vals, 0);\n        \n        return max_vals;\n    }\n    \n    private void helper(TreeNode root, List<Integer> max_vals, int level) {\n        if (root == null) return;\n        \n        if (max_vals.size() == level) {\n            max_vals.add(root.val);\n        } else {\n            max_vals.set(level, Math.max(root.val, max_vals.get(level)));\n        }\n        \n        helper(root.left, max_vals, level + 1);\n        helper(root.right, max_vals, level + 1);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row"}