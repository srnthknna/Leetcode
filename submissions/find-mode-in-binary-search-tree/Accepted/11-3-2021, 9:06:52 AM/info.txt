{"id":581549815,"lang":"java","time":"3 months, 3 weeks","timestamp":1635955612,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/581549815/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"39.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    Integer prev;\n    int max = Integer.MIN_VALUE;\n    int count = 1;\n    \n    public int[] findMode(TreeNode root) {\n        List<Integer> answer = new ArrayList<>();\n        inorder(root, answer);\n        \n        int[] returnArr = new int[answer.size()];\n        int ind = 0;\n        for (int num : answer) \n            returnArr[ind] = answer.get(ind++);\n        return returnArr;\n    }\n    \n    private void inorder(TreeNode root, List<Integer> answer) {\n        if (root == null) return;\n        \n        inorder(root.left, answer);\n        \n        if (prev != null) {\n            if (prev == root.val) {\n                count++;\n            } else {\n                count = 1;\n            }\n        }\n        \n        if (count > max) {\n            max = count;\n            answer.clear();\n            answer.add(root.val);\n        } else if (count == max) {\n            answer.add(root.val);\n        }\n        prev = root.val;\n        \n        inorder(root.right, answer);\n    }\n}","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree"}