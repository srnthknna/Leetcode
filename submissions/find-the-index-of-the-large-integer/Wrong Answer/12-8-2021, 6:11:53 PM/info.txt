{"id":599122774,"lang":"java","time":"2Â months, 2Â weeks","timestamp":1639015913,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/599122774/","is_pending":"Not Pending","title":"Find the Index of the Large Integer","memory":"N/A","code":"/**\n * // This is ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *     // Compares the sum of arr[l..r] with the sum of arr[x..y] \n *     // return 1 if sum(arr[l..r]) > sum(arr[x..y])\n *     // return 0 if sum(arr[l..r]) == sum(arr[x..y])\n *     // return -1 if sum(arr[l..r]) < sum(arr[x..y])\n *     public int compareSub(int l, int r, int x, int y) {}\n *\n *     // Returns the length of the array\n *     public int length() {}\n * }\n */\n\nclass Solution {\n    public int getIndex(ArrayReader reader) {\n        int left = 0, right = reader.length() - 1;\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            int res;\n            if ((right - left) % 2 == 1) {\n                res = reader.compareSub(left, mid, mid + 1, right);\n            } else {\n                res = reader.compareSub(left, mid, mid, right);\n            }\n            \n            if (res == 0) return mid;\n            else if (res == 1) right = mid - 1;\n            else left = mid + 1;\n        }\n        return -1;\n    }\n}","compare_result":"1111001110011000011011101110110001010110111111110110101011101100011100101111111000001001111111110011110011011111","title_slug":"find-the-index-of-the-large-integer"}