{"id":507566802,"lang":"java","time":"8 months, 2 weeks","timestamp":1623634605,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/507566802/","is_pending":"Not Pending","title":"Find the Most Competitive Subsequence","memory":"49.9 MB","code":"class Solution {\n    public int[] mostCompetitive(int[] nums, int k) {\n        Stack<Integer> st = new Stack<>();\n        for (int i = 0; i < nums.length; i++) {\n            while(!st.isEmpty() && nums[i] < nums[st.peek()] && st.size() + nums.length - i > k)\n                st.pop();\n            if (st.size() < k)\n                st.push(i);\n        }\n        int i = k;\n        int[] result = new int[k];\n        while (!st.isEmpty()) {\n            result[--i] = nums[st.pop()];\n        }\n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-most-competitive-subsequence"}