{"id":642004696,"lang":"java","time":"1 week, 5 days","timestamp":1644944782,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/642004696/","is_pending":"Not Pending","title":"First Missing Positive","memory":"N/A","code":"class Solution {\n    public int firstMissingPositive(int[] nums) {\n        if (nums == null || nums.length == 0) return 1;\n        int n = nums.length, containsOne = 0;\n        \n        for (int i = 0; i < n; i++) {\n            if (nums[i] == 1) {\n                containsOne = 1;\n            } else if (nums[i] <= 0 || nums[i] > n) {\n                nums[i] = 1;\n            }\n        }\n        \n        for (int i = 0; i < n; i++) {\n            int index = Math.abs(nums[i]) - 1;\n            if (nums[index] > 0) {\n                nums[index] *= -1;\n            }\n        }\n        \n        for (int i = 0; i < n; i++) {\n            if (nums[i] > 0) {\n                return i + 1;\n            }\n        }\n        return n + 1;\n    }\n}","compare_result":"11001000000111100001111111111111111111111100110110011100111111111001010101000100010001001101101001010101000010100111111111111111111110111111111000111011110001100011111111110","title_slug":"first-missing-positive"}