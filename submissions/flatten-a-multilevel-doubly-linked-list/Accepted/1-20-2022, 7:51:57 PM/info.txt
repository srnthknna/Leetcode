{"id":624367287,"lang":"java","time":"1 month, 1 week","timestamp":1642737117,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/624367287/","is_pending":"Not Pending","title":"Flatten a Multilevel Doubly Linked List","memory":"37 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node prev;\n    public Node next;\n    public Node child;\n};\n*/\n\nclass Solution {\n    public Node flatten(Node head) {\n        if (head == null) return null;\n        \n        Node pseudoHead = new Node(0, null, head, null);\n        \n        dfs(pseudoHead, head);\n        \n        pseudoHead.next.prev = null;\n        return pseudoHead.next;\n    }\n    \n    private Node dfs(Node prev, Node curr) {\n        if (curr == null) return prev;\n        \n        prev.next = curr;\n        curr.prev = prev;\n        \n        Node tempNext = curr.next;\n        \n        Node tail = dfs(curr, curr.child);\n        curr.child = null;\n        return dfs(tail, tempNext);\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"flatten-a-multilevel-doubly-linked-list"}