{"id":437671359,"lang":"java","time":"1 year, 1 month","timestamp":1609622196,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/437671359/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"38.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public void flatten(TreeNode root) {\n        if (root == null) return;\n        Stack<TreeNode> stack = new Stack();\n        stack.push(root);\n        \n        while (!stack.isEmpty()) {\n            TreeNode node = stack.pop();\n            if (node.right != null) {\n                stack.push(node.right);\n            }\n            \n            if (node.left != null) {\n                stack.push(node.left);\n            }\n            \n            if (!stack.isEmpty()) {\n                node.right = stack.peek();\n            }\n            node.left = null;\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}