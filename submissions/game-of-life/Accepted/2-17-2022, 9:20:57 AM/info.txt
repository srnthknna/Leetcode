{"id":643373642,"lang":"java","time":"1 week, 3 days","timestamp":1645118457,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/643373642/","is_pending":"Not Pending","title":"Game of Life","memory":"42.5 MB","code":"class Solution {\n    \n    // https://www.youtube.com/watch?v=NWzWth4mPiA&ab_channel=CodingDecoded\n    // only 3 rules matter before which mask the rules so they can be converted back\n    // if cell is active and has more than 3 or less than 2 active neigh then kill it and set to -2\n    // if cell has exactly 3 active neigh and if it is dead bring it back\n    // others let them live as it wont be impacted\n    int dirs[][] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}, {1, 1}, {-1, 1}, {1, -1}, {-1, -1}};\n    public void gameOfLife(int[][] board) {\n        for (int i = 0; i < board.length; i++) {\n            for (int j = 0; j < board[0].length; j++) {\n                if (board[i][j] == 1) {\n                    int activeNeigh = getActiveCount(board, i, j);\n                    if (activeNeigh < 2 || activeNeigh > 3) {\n                        board[i][j] = -2;\n                    }\n                } else if (board[i][j] == 0) {\n                    int activeNeigh = getActiveCount(board, i, j);\n                    if (activeNeigh == 3) {\n                        board[i][j] = -1;\n                    }\n                }\n            }\n        }\n        updateBoard(board);\n    }\n    \n    private int getActiveCount(int[][] board, int i, int j) {\n        int activeCount = 0;\n        \n        for (int[] dir : dirs) {\n            int newI = dir[0] + i;\n            int newJ = dir[1] + j;\n\n            if (newI >= 0 && newJ >= 0 && newI < board.length && newJ < board[0].length && (board[newI][newJ] == 1 || board[newI][newJ] == -2)) {\n                activeCount++;\n            }\n        }\n        \n        return activeCount;\n    }\n    \n    private void updateBoard(int[][] board) {\n        for (int i = 0; i < board.length; i++) {\n            for (int j = 0; j < board[0].length; j++) {\n                if (board[i][j] == -2) board[i][j] = 0;\n                if (board[i][j] == -1) board[i][j] = 1;\n            }\n        }\n    }\n}","compare_result":"1111111111111111111111","title_slug":"game-of-life"}