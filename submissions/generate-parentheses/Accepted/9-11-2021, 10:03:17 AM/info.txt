{"id":553173440,"lang":"java","time":"5 months, 2 weeks","timestamp":1631379797,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/553173440/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"38.9 MB","code":"class Solution {\n    public List<String> generateParenthesis(int n) {\n        List<String> ans = new ArrayList<>();\n        generateParenthesis(ans, n, \"\", 0, 0);\n        return ans;\n    }\n    \n    private void generateParenthesis(List<String> ans, int max, String cur, int open, int close) {\n        if (cur.length() == max * 2) {\n            ans.add(cur);\n            return;\n        }\n        \n        if (open < max) {\n            generateParenthesis(ans, max, cur + \"(\", open + 1, close);\n        }\n        \n        if (close < open) {\n            generateParenthesis(ans, max, cur + \")\", open, close + 1);\n        }\n    }\n}","compare_result":"11111111","title_slug":"generate-parentheses"}