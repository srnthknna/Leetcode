{"id":644249354,"lang":"java","time":"1 week, 1 day","timestamp":1645239107,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/644249354/","is_pending":"Not Pending","title":"Guess the Word","memory":"42.3 MB","code":"/**\n * // This is the Master's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface Master {\n *     public int guess(String word) {}\n * }\n */\nclass Solution {\n    public void findSecretWord(String[] wordlist, Master master) {\n        for (int i = 0, x = 0; i < 10 && x < 6; i++) {\n            int[][] dist = new int[6][26];\n            for (String word : wordlist) {\n                for (int k = 0; k < 6; k++) {\n                    dist[k][word.charAt(k) - 'a']++;\n                }\n            }\n            String guess = bestCandidate(wordlist, dist);\n            x = master.guess(guess);\n            List<String> wordsNext = new ArrayList<>();\n            for (String word : wordlist) {\n                if (match(word, guess) == x)\n                    wordsNext.add(word);\n            }\n            wordlist = wordsNext.toArray(new String[wordsNext.size()]);\n        }\n    }\n    \n    private int match(String word1, String word2) {\n        int match = 0;\n        for (int i = 0; i < 6; i++) {\n            if (word1.charAt(i) == word2.charAt(i))\n                match++;\n        }\n        return match;\n    }\n    \n    private String bestCandidate(String[] wordlist, int[][] dist) {\n        int max = 0;\n        String res = \"\";\n        for (String word : wordlist) {\n            int score = 1;\n            for (int i = 0; i < 6; i++) {\n                score *= dist[i][word.charAt(i) - 'a'];\n            }\n            if (score > max) {\n                max = score;\n                res = word;\n            }\n        }\n        return res;\n    }\n}","compare_result":"1111111111","title_slug":"guess-the-word"}