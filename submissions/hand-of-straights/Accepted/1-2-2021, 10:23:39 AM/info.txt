{"id":437610905,"lang":"java","time":"1 year, 1 month","timestamp":1609611819,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/437610905/","is_pending":"Not Pending","title":"Hand of Straights","memory":"40.6 MB","code":"class Solution {\n    public boolean isNStraightHand(int[] hand, int W) {\n        TreeMap<Integer, Integer> cards_map = new TreeMap<>();\n        \n        for (int card : hand) {\n            if (!cards_map.containsKey(card)) {\n                cards_map.put(card, 1);\n            } else {\n                cards_map.put(card, cards_map.get(card) + 1);\n            }\n        }\n        \n        while(cards_map.size() > 0) {\n            int card = cards_map.firstKey();\n            \n            for (int i = card; i < card + W; i++) {\n                if (!cards_map.containsKey(i)) return false;\n                int count = cards_map.get(i);\n                if (count == 1) {\n                    cards_map.remove(i);\n                } else {\n                    cards_map.put(i, count - 1);\n                }\n            }\n        }\n        \n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights"}