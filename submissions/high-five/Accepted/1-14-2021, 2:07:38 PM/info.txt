{"id":443036470,"lang":"java","time":"1 year, 1 month","timestamp":1610662058,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/443036470/","is_pending":"Not Pending","title":"High Five","memory":"40.1 MB","code":"class Solution {\n    public int[][] highFive(int[][] items) {\n        Map<Integer, List<Integer>> scores = new HashMap<>();\n        \n        for (int[] item : items) {\n            if (!scores.containsKey(item[0])) {\n                scores.put(item[0], new ArrayList<Integer>());\n            }\n            scores.get(item[0]).add(item[1]);\n        }\n        \n        for (List<Integer> score : scores.values()) {\n            Collections.sort(score);\n        }\n\n        Object[] arr = scores.keySet().toArray();\n        Arrays.sort(arr);\n\n        int[][] result = new int[arr.length][2];\n        int index = 0;\n        for (Object ido : arr) {\n            Integer id = (Integer)ido;\n            int sum = 0;\n            List<Integer> cur = scores.get(id);\n            for (int i = cur.size() - 5; i < cur.size(); i++) {\n                sum += cur.get(i);\n            }\n            result[index][0] = id;\n            result[index][1] = sum / 5;\n            index++;\n        }\n        return result;\n    }\n}","compare_result":"111111111111111111111111","title_slug":"high-five"}