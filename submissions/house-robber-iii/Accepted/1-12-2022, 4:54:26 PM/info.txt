{"id":618656950,"lang":"java","time":"1 month, 2 weeks","timestamp":1642035266,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/618656950/","is_pending":"Not Pending","title":"House Robber III","memory":"41.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int rob(TreeNode root) {\n        int[] answer = helper(root);\n        return Math.max(answer[0], answer[1]);\n    }\n    \n    private int[] helper(TreeNode root) {\n        if (root == null) return new int[] {0, 0};\n        \n        int[] left = helper(root.left);\n        int[] right = helper(root.right);\n        \n        int rob = root.val + left[1] + right[1];\n        int notRob = Math.max(left[0], left[1]) + Math.max(right[0], right[1]);\n        \n        return new int[] {rob, notRob};\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-iii"}