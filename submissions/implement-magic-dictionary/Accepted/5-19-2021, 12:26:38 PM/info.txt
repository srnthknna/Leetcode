{"id":495471980,"lang":"java","time":"9 months, 2 weeks","timestamp":1621452398,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/495471980/","is_pending":"Not Pending","title":"Implement Magic Dictionary","memory":"39.8 MB","code":"class MagicDictionary {\n    Set<String> dict;\n\n    /** Initialize your data structure here. */\n    public MagicDictionary() {\n        dict = new HashSet<>();\n    }\n    \n    public void buildDict(String[] dictionary) {\n        for (String word: dictionary)\n            dict.add(word);\n    }\n    \n    public boolean search(String searchWord) {\n        for (String word : dict) {\n            if (canMake(searchWord, word)) return true;\n        }\n        return false;\n    }\n    \n    private boolean canMake(String searchWord, String wordInDict) {\n        if (searchWord.length() != wordInDict.length()) return false;\n        int count = 0;\n        for (int i = 0; i < searchWord.length(); i++) {\n            if (searchWord.charAt(i) != wordInDict.charAt(i)) count++;\n            if (count > 1) return false;\n        }\n        return count == 1;\n    }\n}\n\n/**\n * Your MagicDictionary object will be instantiated and called as such:\n * MagicDictionary obj = new MagicDictionary();\n * obj.buildDict(dictionary);\n * boolean param_2 = obj.search(searchWord);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"implement-magic-dictionary"}