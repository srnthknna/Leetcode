{"id":620418902,"lang":"java","time":"1 month, 1 week","timestamp":1642271231,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/620418902/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"38.8 MB","code":"class MyQueue {\n    \n    Stack<Integer> s1, s2;\n    int front;\n\n    public MyQueue() {\n        s1 = new Stack<>();\n        s2 = new Stack<>();\n    }\n    \n    public void push(int x) {\n        if (s1.empty())\n            front = x;\n        s1.push(x);\n    }\n    \n    public int pop() {\n        if (s2.isEmpty()) {\n            while (!s1.isEmpty())\n                s2.push(s1.pop());\n        }\n        return s2.pop();\n    }\n    \n    public int peek() {\n        if(!s2.isEmpty())\n            return s2.peek();\n        return front;\n    }\n    \n    public boolean empty() {\n        return s1.isEmpty() && s2.isEmpty();\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"111111111111111111111","title_slug":"implement-queue-using-stacks"}