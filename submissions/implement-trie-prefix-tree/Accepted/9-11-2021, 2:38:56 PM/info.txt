{"id":553291761,"lang":"java","time":"5 months, 2 weeks","timestamp":1631396336,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/553291761/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"65.4 MB","code":"class Trie {\n    \n    class TrieNode {\n        Map<Character, TrieNode> childs;\n        boolean isEnd;\n        \n        public TrieNode() {\n            childs = new HashMap<>();\n            isEnd = false;\n        }\n    }\n    \n    private TrieNode root;\n\n    /** Initialize your data structure here. */\n    public Trie() {\n        root = new TrieNode();\n    }\n    \n    /** Inserts a word into the trie. */\n    public void insert(String word) {\n        TrieNode current = root;\n        for (char ch : word.toCharArray()) {\n            TrieNode node = current.childs.get(ch);\n            if (node == null) {\n                node = new TrieNode();\n                current.childs.put(ch, node);\n            }\n            current = node;\n        }\n        current.isEnd = true;\n    }\n    \n    /** Returns if the word is in the trie. */\n    public boolean search(String word) {\n        TrieNode current = root;\n        for (char ch : word.toCharArray()) {\n            TrieNode node = current.childs.get(ch);\n            if (node == null)\n                return false;\n            current = node;\n        }\n        return current.isEnd;\n    }\n    \n    /** Returns if there is any word in the trie that starts with the given prefix. */\n    public boolean startsWith(String prefix) {\n        TrieNode current = root;\n        for (char ch : prefix.toCharArray()) {\n            TrieNode node = current.childs.get(ch);\n            if (node == null)\n                return false;\n            current = node;\n        }\n        return true;\n    }\n}\n\n/**\n * Your Trie object will be instantiated and called as such:\n * Trie obj = new Trie();\n * obj.insert(word);\n * boolean param_2 = obj.search(word);\n * boolean param_3 = obj.startsWith(prefix);\n */","compare_result":"111111111111111","title_slug":"implement-trie-prefix-tree"}