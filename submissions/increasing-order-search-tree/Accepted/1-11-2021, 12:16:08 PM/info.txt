{"id":441721560,"lang":"java","time":"1 year, 1 month","timestamp":1610396168,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/441721560/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"36.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    TreeNode cur;\n    public TreeNode increasingBST(TreeNode root) {\n        TreeNode ans = new TreeNode(0);\n        cur = ans;\n        inorder(root); \n        return ans.right;\n    }\n    \n    private void inorder(TreeNode root) {\n        if (root == null) return;\n        inorder(root.left);\n        root.left = null;\n        cur.right = root;\n        cur = root;\n        inorder(root.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"increasing-order-search-tree"}