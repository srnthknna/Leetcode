{"id":447367383,"lang":"java","time":"1 year, 1 month","timestamp":1611529937,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/447367383/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"39.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode insertIntoBST(TreeNode root, int val) {\n        if (root == null) return new TreeNode(val);\n        if (root.val < val) {\n            root.right = insertIntoBST(root.right, val);\n        } else {\n            root.left = insertIntoBST(root.left, val);\n        }\n        return root;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}