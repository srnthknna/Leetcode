{"id":447368373,"lang":"java","time":"1 year, 1 month","timestamp":1611530117,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/447368373/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode insertIntoBST(TreeNode root, int val) {\n        // if (root == null) return new TreeNode(val);\n        // if (root.val < val) {\n        //     root.right = insertIntoBST(root.right, val);\n        // } else {\n        //     root.left = insertIntoBST(root.left, val);\n        // }\n        // return root;\n        TreeNode node = root;\n        while (node != null) {\n            if (node.val > val) {\n                if (node.left == null) {\n                    node.left = new TreeNode(val);\n                    return root;\n                } else {\n                    node = node.left;\n                }\n            } else {\n                if (node.right == null) {\n                    node.right = new TreeNode(val);\n                    return root;\n                } else {\n                    node = node.right;\n                }\n            }\n        }\n        return root;\n    }\n}","compare_result":"11111111011111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}