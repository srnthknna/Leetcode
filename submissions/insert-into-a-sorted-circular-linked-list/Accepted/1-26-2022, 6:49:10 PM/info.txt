{"id":628652346,"lang":"java","time":"1Â month","timestamp":1643251750,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/628652346/","is_pending":"Not Pending","title":"Insert into a Sorted Circular Linked List","memory":"43.7 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node next;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _next) {\n        val = _val;\n        next = _next;\n    }\n};\n*/\n\nclass Solution {\n    public Node insert(Node head, int insertVal) {\n        if (head == null) {\n            Node node = new Node(insertVal);\n            node.next = node;\n            return node;\n        }\n        \n        \n        Node curr = head.next, prev = head;\n         \n         do {\n            if (prev.val <= insertVal && insertVal <= curr.val) {\n                prev.next = new Node(insertVal, curr);\n                return head;\n            } else if (prev.val > curr.val) {\n                if (insertVal >= prev.val || insertVal <= curr.val) {\n                    prev.next = new Node(insertVal, curr);\n                    return head;\n                }\n            }\n            prev = curr;\n            curr = curr.next;\n        } while (prev != head);\n        \n        head.next = new Node(insertVal, curr);\n        return head;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-into-a-sorted-circular-linked-list"}