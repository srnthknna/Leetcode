{"id":628644752,"lang":"java","time":"1Â month","timestamp":1643250814,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/628644752/","is_pending":"Not Pending","title":"Insert into a Sorted Circular Linked List","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node next;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _next) {\n        val = _val;\n        next = _next;\n    }\n};\n*/\n\nclass Solution {\n    public Node insert(Node head, int insertVal) {\n        if (head == null) {\n            Node node = new Node(insertVal);\n            node.next = node;\n            return node;\n        }\n        \n        \n        Node next = head.next, copyHead = head, tail = head;\n        \n        if (head == next) {\n            head.next = new Node(insertVal);\n            head.next.next = head;\n            return head;\n        }\n        \n        while (next != copyHead) {\n            if (head.val < insertVal && insertVal > next.val) {\n                head.next = new Node(insertVal, next);\n                return copyHead;\n            } else if (head.val > next.val) {\n                //head = head.next;\n                if (insertVal >= head.val || insertVal <= next.val) {\n                    head.next = new Node(insertVal, next);\n                    return copyHead;\n                }\n            }\n            head = next;\n            next = next.next;\n        }\n        head.next = new Node(insertVal, next);\n        return copyHead;\n    }\n}","compare_result":"111111110000011110101101011100101000000000000010000000100000000100010001000000000000000000000000000000000110","title_slug":"insert-into-a-sorted-circular-linked-list"}