{"id":613000366,"lang":"java","time":"1 month, 3 weeks","timestamp":1641317215,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/613000366/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"41.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode insertionSortList(ListNode head) {\n        ListNode dummy = new ListNode();\n        ListNode curr = head;\n        \n        while (curr != null) {\n            ListNode prev = dummy;\n            \n            while (prev.next != null && prev.next.val < curr.val) {\n                prev = prev.next;\n            }\n            \n            ListNode next = curr.next;\n            curr.next = prev.next;\n            prev.next = curr;\n            \n            curr = next;\n        }\n        \n        return dummy.next;\n    }\n}","compare_result":"1111111111111111111","title_slug":"insertion-sort-list"}