{"id":436227905,"lang":"java","time":"1 year, 1 month","timestamp":1609295740,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/436227905/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"41.8 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        if (headA == null || headB == null) return null;\n        ListNode aPointer = headA;\n        ListNode bPointer = headB;\n        \n        while(aPointer != bPointer) {\n            if (aPointer == null) {\n                aPointer = headB;\n            } else {\n                aPointer = aPointer.next;\n            }\n            \n            if (bPointer == null) {\n                bPointer = headA;\n            } else {\n                bPointer = bPointer.next;\n            }\n        }\n        return aPointer;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}