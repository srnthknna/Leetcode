{"id":624067482,"lang":"java","time":"1 month, 1 week","timestamp":1642698846,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/624067482/","is_pending":"Not Pending","title":"Interval List Intersections","memory":"52.1 MB","code":"class Solution {\n    public int[][] intervalIntersection(int[][] firstList, int[][] secondList) {\n        int i = 0, j = 0;\n        List<int[]> result = new ArrayList<>();\n        \n        while (i < firstList.length && j < secondList.length) {\n            int low = Math.max(firstList[i][0], secondList[j][0]);\n            int hi = Math.min(firstList[i][1], secondList[j][1]);\n            \n            if (low <= hi)\n                result.add(new int[] {low, hi});\n            \n            if (firstList[i][1] < secondList[j][1])\n                i++;\n            else\n                j++;\n        }\n        \n        return result.toArray(new int[result.size()][]);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interval-list-intersections"}