{"id":432415841,"lang":"java","time":"1 year, 2 months","timestamp":1608424400,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/432415841/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n        if (root == null) return null;\n        int temp = root.left.val;\n        root.left.val = root.right.val;\n        root.right.val = temp;\n        if (root.left != null) {\n            invertTree(root.left);\n        }\n        if (root.right != null) {\n            invertTree(root.right);\n        }\n        return root;\n    }\n}","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000","title_slug":"invert-binary-tree"}