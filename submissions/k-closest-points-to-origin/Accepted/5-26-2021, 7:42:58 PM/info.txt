{"id":498797070,"lang":"java","time":"9Â months","timestamp":1622083378,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/498797070/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"47.2 MB","code":"class Solution {\n    public int[][] kClosest(int[][] points, int K) {\n        PriorityQueue<int[]> pq = new PriorityQueue<int[]>((p1, p2) -> p2[0] * p2[0] + p2[1] * p2[1] - p1[0] * p1[0] - p1[1] * p1[1]);\n        for (int[] p : points) {\n            pq.offer(p);\n            if (pq.size() > K) {\n                pq.poll();\n            }\n        }\n        int[][] res = new int[K][2];\n        while (K > 0) {\n            res[--K] = pq.poll();\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin"}