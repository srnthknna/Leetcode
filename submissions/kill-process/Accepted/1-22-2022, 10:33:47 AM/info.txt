{"id":625450707,"lang":"java","time":"1Â month","timestamp":1642876427,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/625450707/","is_pending":"Not Pending","title":"Kill Process","memory":"89.6 MB","code":"class Solution {\n    public List<Integer> killProcess(List<Integer> pid, List<Integer> ppid, int kill) {\n        List<Integer> result = new ArrayList<>();\n        Map<Integer, List<Integer>> graph = new HashMap<>();\n        Queue<Integer> queue = new LinkedList<>();\n        \n        for (int i = 0; i < ppid.size(); i++) {\n            if (!graph.containsKey(ppid.get(i))) {\n                graph.put(ppid.get(i), new ArrayList<>());\n            }\n            graph.get(ppid.get(i)).add(pid.get(i));\n        }\n        \n        queue.offer(kill);\n        while (!queue.isEmpty()) {\n            int curr = queue.poll();\n            result.add(curr);\n            \n            if (graph.containsKey(curr))\n            for (int child : graph.get(curr)) {\n                queue.offer(child);\n            }\n        }\n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kill-process"}