{"id":501615735,"lang":"java","time":"9Â months","timestamp":1622595127,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/501615735/","is_pending":"Not Pending","title":"Knight Dialer","memory":"40.7 MB","code":"class Solution {\n    int MOD = (int)1e9 + 7;\n    public int knightDialer(int n) {\n        int[][] map = new int[][]{{4, 6}, {6, 8}, {7, 9}, {4, 8}, {0, 3, 9}, {}, {0, 1, 7}, {2, 6}, {1, 3}, {2, 4}};  \n        Integer[][] dp = new Integer[10][n];\n        \n        int ans = 0;\n        \n        for(int i = 0; i <= 9; i++){\n            ans += memo(i, n - 1, map, dp);\n            ans %= MOD;\n        }\n        \n        return ans;\n    }\n    \n    int memo(int i, int n, int[][] map, Integer[][] dp){\n        if(n == 0)\n            return 1;\n        if(dp[i][n] == null){\n            int count = 0;\n            for(int j : map[i]){\n                count += memo(j, n - 1, map, dp);\n                count %= MOD;\n            }\n            dp[i][n] = count;\n        }\n        \n        return dp[i][n];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"knight-dialer"}