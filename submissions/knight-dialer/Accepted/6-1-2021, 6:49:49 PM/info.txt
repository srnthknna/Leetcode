{"id":501633166,"lang":"java","time":"9Â months","timestamp":1622598589,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/501633166/","is_pending":"Not Pending","title":"Knight Dialer","memory":"40.8 MB","code":"class Solution {\n    int MOD = (int)1e9 + 7;\n    int[][] map = new int[][]{{4, 6}, {6, 8}, {7, 9}, {4, 8}, {0, 3, 9}, {}, {0, 1, 7}, {2, 6}, {1, 3}, {2, 4}}; \n    Integer[][] dp;\n    public int knightDialer(int n) { \n        dp = new Integer[10][n];\n        int ans = 0;\n        \n        for (int i = 0; i < 10; i++) {\n            ans += memo(n - 1, i);\n            ans %= MOD;\n        }\n        return ans;\n    }\n    \n    private int memo (int n, int i) {\n        if (n == 0) return 1;\n        if (dp[i][n] == null) {\n            int count = 0;\n            for (int j : map[i]) {\n                count += memo(n - 1, j);\n                count %= MOD;\n            }\n            dp[i][n] = count;\n        }\n        return dp[i][n];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"knight-dialer"}