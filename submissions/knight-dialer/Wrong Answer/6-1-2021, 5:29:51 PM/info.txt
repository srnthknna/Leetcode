{"id":501609671,"lang":"java","time":"9Â months","timestamp":1622593791,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/501609671/","is_pending":"Not Pending","title":"Knight Dialer","memory":"N/A","code":"class Solution {\n    public int knightDialer(int n) {\n        int[][] map = new int[][]{{4, 6}, {6, 8}, {7, 9}, {4, 8}, {0, 3, 9}, {}, {0, 1, 7}, {2, 6}, {1, 3}, {2, 4}};\n        int[] dp = new int[10], next = new int[10];\n        Arrays.fill(dp, 1);\n        \n        for (int loop = 0; loop < n - 1; loop++) {\n            Arrays.fill(next, 0);\n            for (int i = 0; i < 10; i ++) {\n                for (int j : map[i]) {\n                    next[j] += dp[i];\n                }\n            }\n            dp = next;\n        }\n        \n        int sum = 0;\n        for (int i : dp) sum += i % (10 ^ 9 + 7);\n        \n        return sum;\n    }\n}","compare_result":"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"knight-dialer"}