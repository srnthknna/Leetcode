{"id":646105328,"lang":"java","time":"6 days, 7 hours","timestamp":1645462856,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/646105328/","is_pending":"Not Pending","title":"Kth Smallest Element in a Sorted Matrix","memory":"57.6 MB","code":"// General n2 solution with space k\nclass Solution1 {\n    public int kthSmallest(int[][] matrix, int k) {\n        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> (b - a));\n        for (int i = 0; i < matrix.length; i++) {\n            for (int j = 0; j < matrix[0].length; j++) {\n                if (pq.size() < k) {\n                    pq.offer(matrix[i][j]);\n                } else {\n                    if (pq.peek() > matrix[i][j]) {\n                        pq.poll();\n                        pq.offer(matrix[i][j]);\n                    }\n                }\n            }\n        }\n        return pq.peek();\n    }\n}\n\nclass Solution {\n    public int kthSmallest(int[][] matrix, int k) {\n        int n = matrix.length, start = matrix[0][0], end = matrix[n - 1][n - 1];\n        while (start < end) {\n            int mid = start + (end - start) / 2;\n            int[] smallLargePair = new int[] {matrix[0][0], matrix[n - 1][n - 1]};\n            \n            int count = countLessEqual(smallLargePair, matrix, mid);\n            \n            if (count == k) return smallLargePair[0];\n            \n            if (count < k) start = smallLargePair[1];\n            else end = smallLargePair[0];\n        }\n        return start;\n    }\n    \n    private int countLessEqual(int[] smallLargePair, int[][] matrix, int mid) {\n        int count = 0;\n        int n = matrix.length, row = n - 1, col = 0;\n        while (row >= 0 && col < n) {\n            if (matrix[row][col] > mid) {\n                smallLargePair[1] = Math.min(smallLargePair[1], matrix[row][col]);\n                row--;\n            } else {\n                smallLargePair[0] = Math.max(smallLargePair[0], matrix[row][col]);\n                count += row + 1;\n                col++;\n            }\n        }\n        return count;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-sorted-matrix"}