{"id":518832373,"lang":"java","time":"7 months, 3 weeks","timestamp":1625673155,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/518832373/","is_pending":"Not Pending","title":"Largest Submatrix With Rearrangements","memory":"N/A","code":"class Solution {\n    public int largestSubmatrix(int[][] matrix) {\n        for (int i = 1; i < matrix.length; i++) {\n            for (int j = 0; j < matrix[0].length; j++) {\n                if (matrix[i][j] == 1)\n                    matrix[i][j] = matrix[i - 1][j] + 1;\n            }\n        }\n        \n        int count = 0;\n        \n        for (int i = 0; i < matrix.length; i++) {\n            Arrays.sort(matrix[i]);\n            for (int j = 1; j < matrix[0].length; j++) {\n                count = Math.max(count, j * matrix[i][matrix[0].length - j]);\n            }\n        }\n        return count;\n    }\n}","compare_result":"1111011111111111111111011111111111111111111110000001111111","title_slug":"largest-submatrix-with-rearrangements"}