{"id":644247799,"lang":"java","time":"1 week, 1 day","timestamp":1645238858,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/644247799/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"42.7 MB","code":"class Solution {\n\n    List<String> result = new ArrayList<>();\n    Map<Character, List<Character>> map = new HashMap<>();\n\n    public List<String> letterCombinations(String digits) {\n        buildMap();\n        if(digits.equals(\"\"))\n            return result;\n        recurse(digits, new StringBuilder(), 0);\n        return result;\n    }\n\n    private void buildMap(){\n        map.put('2', Arrays.asList('a','b','c'));\n        map.put('3', Arrays.asList('d','e','f'));\n        map.put('4', Arrays.asList('g','h','i'));\n        map.put('5', Arrays.asList('j','k','l'));\n        map.put('6', Arrays.asList('m','n','o'));\n        map.put('7', Arrays.asList('p','q','r', 's'));\n        map.put('8', Arrays.asList('t','u','v'));\n        map.put('9', Arrays.asList('w','x','y','z'));\n    }\n\n    private void recurse(String digits, StringBuilder temp, int startAt){\n        if(temp.length()==digits.length()){\n            result.add(new String(temp.toString()));\n            return;\n        }\n\n        List<Character> charList = map.get(digits.charAt(startAt));\n        for(int j=0 ;j<charList.size(); j++){\n            temp.append(charList.get(j));\n            recurse(digits,temp, startAt+1);\n            temp.deleteCharAt(temp.length()-1);\n        }\n    }\n}","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}