{"id":436564682,"lang":"java","time":"1 year, 1 month","timestamp":1609366664,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/436564682/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"38.9 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode fast = head, slow = head;\n        while (fast != null && fast.next != null) {\n            fast = fast.next.next;\n            slow = slow.next;\n            if (fast == slow) return true;\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111","title_slug":"linked-list-cycle"}