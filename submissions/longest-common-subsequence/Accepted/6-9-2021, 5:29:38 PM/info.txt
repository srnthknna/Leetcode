{"id":505666498,"lang":"java","time":"8 months, 3 weeks","timestamp":1623284978,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/505666498/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"43 MB","code":"class Solution1 {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int[][] dp = new int[text1.length() + 1][text2.length() + 1];\n        for (int i = text1.length() - 1; i >= 0; i--)\n            for (int j = text2.length() - 1; j >= 0; j--) {\n                if (text1.charAt(i) == text2.charAt(j)) {\n                    dp[i][j] = 1 + dp[i + 1][j + 1];\n                } else {\n                    dp[i][j] = Math.max(dp[i + 1][j], dp[i][j + 1]);\n                }\n            }\n        return dp[0][0];\n    }\n}\n\nclass Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        //int[][] dp = new int[text1.length() + 1][text2.length() + 1];\n        if (text1.length() > text2.length()) {\n            String temp = text1;\n            text1 = text2;\n            text2 = temp;\n        }\n        \n        int[] current, previous = new int[text1.length() + 1];\n        for (int i = text2.length() - 1; i >= 0; i--) {\n            current = new int[text1.length() + 1];\n            for (int j = text1.length() - 1; j >= 0; j--) {\n                if (text1.charAt(j) == text2.charAt(i)) {\n                    current[j] = 1 + previous[j + 1];\n                } else {\n                    current[j] = Math.max(previous[j], current[j + 1]);\n                }\n            }\n            previous = current;\n        }\n        return previous[0];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence"}