{"id":621923540,"lang":"java","time":"1 month, 1 week","timestamp":1642448400,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/621923540/","is_pending":"Not Pending","title":"Longest Harmonious Subsequence","memory":"N/A","code":"class Solution {\n    public int findLHS(int[] nums) {\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int num : nums) {\n            map.put(num, map.getOrDefault(num, 0) + 1);\n        }\n        \n        int res = 0;\n        for (int num : map.keySet()) {\n            res = Math.max(res, map.get(num) + map.getOrDefault(num + 1, 0));\n        }\n        return res;\n    }\n}","compare_result":"11010011101101100111111111011111111111111111111111111111111111111111111111111111111111111010001010000000000000000010111111100111111111111110010010011000000011111111111111111111111111111100000000000000000000","title_slug":"longest-harmonious-subsequence"}