{"id":514940753,"lang":"java","time":"8Â months","timestamp":1624979461,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/514940753/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"49 MB","code":"public class Solution {\n    public int longestPalindromeSubseq(String s) {\n        int[][] dp = new int[s.length()][s.length()];\n        \n        for (int i = s.length() - 1; i >= 0; i--) {\n            dp[i][i] = 1;\n            for (int j = i+1; j < s.length(); j++) {\n                if (s.charAt(i) == s.charAt(j)) {\n                    dp[i][j] = dp[i+1][j-1] + 2;\n                } else {\n                    dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1]);\n                }\n            }\n        }\n        return dp[0][s.length()-1];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence"}