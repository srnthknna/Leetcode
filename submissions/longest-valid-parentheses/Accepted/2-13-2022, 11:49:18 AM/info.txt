{"id":640748744,"lang":"java","time":"2Â weeks","timestamp":1644781758,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/640748744/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"43.3 MB","code":"class Solution {\n    public int longestValidParentheses(String s) {\n        int left = 0, right = 0, maxLen = 0;\n        for (char c : s.toCharArray()) {\n            if (c == '(') {\n                left++;\n            } else {\n                right++;\n            }\n            if (left == right) {\n                maxLen = Math.max(maxLen, 2 * left);\n            } else if (right >= left) {\n                left = 0;\n                right = 0;\n            }\n        }\n        \n        left = right = 0;\n        for (int i = s.length() - 1; i >= 0; i--) {\n            char c = s.charAt(i);\n            if (c == '(') {\n                left++;\n            } else {\n                right++;\n            }\n            if (left == right) {\n                maxLen = Math.max(maxLen, 2 * left);\n            } else if (left >= right) {\n                left = 0;\n                right = 0;\n            }\n        }\n        return maxLen;\n    }\n}\n\nclass SolutionStack {\n    public int longestValidParentheses(String s) {\n        return 0;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses"}