{"id":625645464,"lang":"java","time":"1Â month","timestamp":1642899770,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/625645464/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"45.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    \n    TreeNode ans;\n    \n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        helper(root, p, q);\n        return ans;\n    }\n    \n    private boolean helper(TreeNode root, TreeNode p, TreeNode q) {\n        if (root == null) return false;\n        \n        int left = helper(root.left, p, q) ? 1 : 0;\n        int right = helper(root.right, p , q) ? 1 : 0;\n        int mid = (p == root || q == root) ? 1 : 0;\n        \n        if (left + right + mid >= 2) ans = root;\n        \n        return (left + right + mid) > 0;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}