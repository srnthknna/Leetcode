{"id":445145263,"lang":"java","time":"1 year, 1 month","timestamp":1611084347,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/445145263/","is_pending":"Not Pending","title":"Lucky Numbers in a Matrix","memory":"39.6 MB","code":"class Solution {\n    public List<Integer> luckyNumbers (int[][] matrix) {\n        List<Integer> result = new ArrayList<>();\n        int row = matrix.length, col = matrix[0].length;\n        int[] minRow = new int[row];\n        int[] maxCol = new int[col];\n        for (int i = 0; i < col; i++) {\n            int max = Integer.MIN_VALUE;\n            for (int j = 0; j < row; j++) {\n                max = Math.max(max, matrix[j][i]);\n            }\n            maxCol[i] = max;\n        }\n        \n        // for (int i = 0; i < maxCol.length; i++) {\n        //     System.out.println(maxCol[i]);\n        // }\n        \n        for (int i = 0; i < row; i++) {\n            int min = Integer.MAX_VALUE;\n            for (int j = 0; j < col; j++) {\n                min = Math.min(min, matrix[i][j]);\n            }\n            minRow[i] = min;\n        }\n        \n        // System.out.println();\n        // for (int i = 0; i < minRow.length; i++) {\n        //     System.out.println(minRow[i]);\n        // }\n        \n        for (int i = 0; i < row; i++) {\n            for (int j = 0; j < col; j++) {\n                if (matrix[i][j] == maxCol[j] && matrix[i][j] == minRow[i])\n                    result.add(matrix[i][j]);\n            }\n        }\n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lucky-numbers-in-a-matrix"}