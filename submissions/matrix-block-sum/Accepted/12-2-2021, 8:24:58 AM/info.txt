{"id":595981319,"lang":"java","time":"2 months, 3 weeks","timestamp":1638462298,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/595981319/","is_pending":"Not Pending","title":"Matrix Block Sum","memory":"40.2 MB","code":"class Solution {\n    public int[][] matrixBlockSum(int[][] mat, int k) {\n        int m = mat.length, n = mat[0].length;\n        \n        int[][] a = new int[m][n];\n        \n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                for (int x = -k; x <= k; x++) {\n                    if (i + x >= 0 && i + x < m) {\n                        int l = Math.max(j - k, 0);\n                        int r = j + k + 1;\n                        a[i + x][l] += mat[i][j];\n                        if (r < n) a[i + x][r] -= mat[i][j];\n                    }\n                }\n            }\n        }\n        \n        int sum = 0;\n        for (int i = 0; i < m; i++) {\n            sum = 0;\n            for (int j = 0; j < n; j++) {\n                sum += a[i][j];\n                a[i][j] = sum;\n            }\n        }\n        return a;\n    }\n}","compare_result":"111111111111","title_slug":"matrix-block-sum"}