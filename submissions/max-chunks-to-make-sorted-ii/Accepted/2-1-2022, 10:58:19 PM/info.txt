{"id":632805310,"lang":"java","time":"3 weeks, 4 days","timestamp":1643785099,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/632805310/","is_pending":"Not Pending","title":"Max Chunks To Make Sorted II","memory":"45.1 MB","code":"class Solution {\n    public int maxChunksToSorted(int[] arr) {\n        // Stack<Integer> stack = new Stack();\n        // int currMax = Integer.MIN_VALUE;\n        // for (int i = 0; i < arr.length; i++) {\n        //     currMax = stack.isEmpty() ? arr[i] : Math.max(arr[i], stack.peek());\n        //     while (!stack.isEmpty() && stack.peek() > arr[i]) stack.pop();\n        //     stack.push(currMax);\n        // }\n        // return stack.size();\n        \n        int rmin[] = new int[arr.length + 1];\n        rmin[arr.length] = Integer.MAX_VALUE;\n        for (int i = arr.length - 1; i >= 0; i--)\n            rmin[i] = Math.min(arr[i], rmin[i + 1]);\n        \n        int lmax = Integer.MIN_VALUE, count = 0;\n        for (int i = 0; i < arr.length; i++) {\n            lmax = Math.max(arr[i], lmax);\n            if (lmax <= rmin[i + 1]) count++;\n        }\n        return count;\n    }\n     \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"max-chunks-to-make-sorted-ii"}