{"id":446903049,"lang":"java","time":"1 year, 1 month","timestamp":1611443690,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/446903049/","is_pending":"Not Pending","title":"Max Increase to Keep City Skyline","memory":"38.7 MB","code":"class Solution {\n    public int maxIncreaseKeepingSkyline(int[][] grid) {\n        int N = grid.length;\n        int[] rowMax = new int[N];\n        int[] colMax = new int[N];\n        \n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < N; j++) {\n                rowMax[i] = Math.max(rowMax[i], grid[i][j]);\n                colMax[j] = Math.max(colMax[j], grid[i][j]);\n            }\n        }\n        \n        int ans = 0;\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < N; j++) {\n                ans += Math.min(rowMax[i], colMax[j]) - grid[i][j];\n            }\n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"max-increase-to-keep-city-skyline"}