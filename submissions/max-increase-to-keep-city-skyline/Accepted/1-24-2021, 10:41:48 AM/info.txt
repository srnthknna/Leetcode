{"id":447273264,"lang":"java","time":"1 year, 1 month","timestamp":1611513708,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/447273264/","is_pending":"Not Pending","title":"Max Increase to Keep City Skyline","memory":"38.6 MB","code":"class Solution {\n    public int maxIncreaseKeepingSkyline(int[][] grid) {\n        int n = grid.length;\n        int[] maxRow = new int[n], maxCol = new int[n];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                maxRow[i] = Math.max(maxRow[i], grid[i][j]);\n                maxCol[j] = Math.max(maxCol[j], grid[i][j]);\n            }\n        }\n        \n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                ans += Math.min(maxRow[i], maxCol[j]) - grid[i][j];\n            }\n        }\n        \n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"max-increase-to-keep-city-skyline"}