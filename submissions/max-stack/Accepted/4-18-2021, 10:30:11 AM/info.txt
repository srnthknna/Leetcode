{"id":482257146,"lang":"java","time":"10 months, 2 weeks","timestamp":1618767011,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/482257146/","is_pending":"Not Pending","title":"Max Stack","memory":"41.6 MB","code":"class MaxStack {\n    Stack<Integer> stack;\n    Stack<Integer> maxStack;\n\n    /** initialize your data structure here. */\n    public MaxStack() {\n        stack = new Stack();\n        maxStack = new Stack();\n    }\n    \n    public void push(int x) {\n        int max = stack.isEmpty() ? x : maxStack.peek();\n        maxStack.push(max > x ? max : x);\n        stack.push(x);\n    }\n    \n    public int pop() {\n        maxStack.pop();\n        return stack.pop();\n    }\n    \n    public int top() {\n        return stack.peek();\n    }\n    \n    public int peekMax() {\n        return maxStack.peek();\n    }\n    \n    public int popMax() {\n        int max = peekMax();\n        Stack<Integer> buffer = new Stack();\n        while (top() != max) buffer.push(pop());\n        pop();\n        while (!buffer.isEmpty()) push(buffer.pop());\n        return max;\n    }\n}\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * MaxStack obj = new MaxStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.peekMax();\n * int param_5 = obj.popMax();\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"max-stack"}