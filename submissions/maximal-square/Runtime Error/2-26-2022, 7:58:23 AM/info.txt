{"id":649278177,"lang":"java","time":"1 day, 8 hours","timestamp":1645891103,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/649278177/","is_pending":"Not Pending","title":"Maximal Square","memory":"N/A","code":"class Solution {\n    public int maximalSquare(char[][] matrix) {\n        if (matrix == null || matrix.length == 0) return 0;\n        int row = matrix.length, col = matrix[0].length, answer = 0;\n        int[][] maxOnes = new int[row + 1][col + 1];\n        for (int i = 1; i <= row; i++) {\n            for (int j = 1; j <= col; j++) {\n                if (matrix[i - 1][j - 1] == '1') {\n                    maxOnes[i][j] = Math.min(maxOnes[i - 1][j], Math.min(maxOnes[j - 1][i], maxOnes[i - 1][j - 1])) + 1;\n                    answer = Math.max(maxOnes[i][j], answer);\n                }\n            }\n        }\n        return answer * answer;\n    }\n}","compare_result":"11111111111110000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximal-square"}