{"id":649271756,"lang":"java","time":"1 day, 8 hours","timestamp":1645890206,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/649271756/","is_pending":"Not Pending","title":"Maximal Square","memory":"N/A","code":"class Solution {\n    public int maximalSquare(char[][] matrix) {\n        if (matrix == null || matrix.length == 0) return 0;\n        int row = matrix.length, col = matrix[0].length, answer = 0;\n        int[][] maxOnes = new int[row][col];\n        for (int i = 0; i < row; i++) {\n            for (int j = 0; j < col; j++) {\n                if (i == 0 || j == 0) {\n                    if (matrix[i][j] == '1') {\n                        answer = Math.max(answer, 1);\n                    }\n                } else {\n                    if (matrix[i - 1][j] != '0' && matrix[j - 1][i] != '0' && matrix[i - 1][j - 1] != '0') {\n                        maxOnes[i][j] = Math.max(matrix[i - 1][j] - '0', Math.max(matrix[j - 1][i] - '0', matrix[i - 1][j - 1] - '0')) + 1;\n                        answer = Math.max(maxOnes[i][j], answer);\n                    }\n                }\n            }\n        }\n        return answer * answer;\n    }\n}","compare_result":"11111111111111101011101000000000000000000000000000000000000000000000000000000","title_slug":"maximal-square"}