{"id":608648496,"lang":"java","time":"2Â months","timestamp":1640713399,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/608648496/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"39.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxAncestorDiff(TreeNode root) {\n        if (root == null) return 0;\n        return helper(root, root.val, root.val);\n    }\n    \n    private int helper(TreeNode root, int curMax, int curMin) {\n        if (root == null) {\n            return curMax - curMin;\n        }\n        curMax = Math.max(curMax, root.val);\n        curMin = Math.min(curMin, root.val);\n        int left = helper(root.left, curMax, curMin);\n        int right = helper(root.right, curMax, curMin);\n        return Math.max(left, right);\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor"}