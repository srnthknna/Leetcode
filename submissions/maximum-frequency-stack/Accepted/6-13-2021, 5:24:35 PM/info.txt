{"id":507547325,"lang":"java","time":"8 months, 2 weeks","timestamp":1623630275,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/507547325/","is_pending":"Not Pending","title":"Maximum Frequency Stack","memory":"48 MB","code":"class FreqStack {\n\n    Map<Integer, Integer> frequency;\n    Map<Integer, Stack<Integer>> group;\n    int maxFrequency;\n\n    public FreqStack() {\n        frequency = new HashMap<>();\n        group = new HashMap<>();\n        maxFrequency = 0;\n    }\n    \n    public void push(int val) {\n        int f = frequency.getOrDefault(val, 0) + 1;\n        frequency.put(val, f);\n\n        if (f > maxFrequency)\n            maxFrequency = f;\n\n        group.computeIfAbsent(f, st -> new Stack<>()).push(val);\n    }\n    \n    public int pop() {\n        int top = group.get(maxFrequency).pop();\n\n        frequency.put(top, frequency.get(top) - 1);\n        if (group.get(maxFrequency).size() == 0)\n            maxFrequency--;\n        return top;\n    }\n}\n\n/**\n * Your FreqStack object will be instantiated and called as such:\n * FreqStack obj = new FreqStack();\n * obj.push(val);\n * int param_2 = obj.pop();\n */\n","compare_result":"1111111111111111111111111111111111111","title_slug":"maximum-frequency-stack"}