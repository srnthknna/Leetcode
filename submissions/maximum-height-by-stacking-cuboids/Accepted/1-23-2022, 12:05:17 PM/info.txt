{"id":626256431,"lang":"java","time":"1Â month","timestamp":1642968317,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/626256431/","is_pending":"Not Pending","title":"Maximum Height by Stacking Cuboids ","memory":"38.5 MB","code":"class Solution {\n    public int maxHeight(int[][] cuboids) {\n        for (int[] cube : cuboids)\n            Arrays.sort(cube);\n        Arrays.sort(cuboids, (c1, c2) -> (c1[0] + c1[1] + c1[2]) - (c2[0] + c2[1] + c2[2]));\n        \n        int dp[] = new int[cuboids.length], max = 0;\n        \n        for (int i = 0; i < cuboids.length; i++) {\n            dp[i] = cuboids[i][2];\n            for (int j = 0; j < i; j++) {\n                if (cuboids[j][0] <= cuboids[i][0]\n                   && cuboids[j][1] <= cuboids[i][1]\n                   && cuboids[j][2] <= cuboids[i][2]) {\n                    dp[i] = Math.max(dp[i], dp[j] + cuboids[i][2]);\n                }\n            }\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-height-by-stacking-cuboids"}