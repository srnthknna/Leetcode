{"id":533251440,"lang":"java","time":"6 months, 3 weeks","timestamp":1628091985,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/533251440/","is_pending":"Not Pending","title":"Maximum Product Difference Between Two Pairs","memory":"39.5 MB","code":"class Solution {\n    // public int maxProductDifference(int[] nums) {\n    //     Arrays.sort(nums);\n    //     int length = nums.length;\n    //     return (nums[length - 1] * nums[length - 2]) - (nums[0] * nums[1]);\n    // }\n    public int maxProductDifference(int[] nums) {\n        int largest = 0, secondLargest = 0, smallest = Integer.MAX_VALUE, secondSmallest = Integer.MAX_VALUE;\n        for(int i=0;i<nums.length;i++) {\n            if(nums[i]>=largest) {\n                secondLargest = largest;\n                largest = nums[i];\n            } else if(nums[i]>secondLargest) secondLargest = nums[i];\n            if(nums[i]<=smallest) {\n                secondSmallest = smallest;\n                smallest = nums[i];\n            } else if(nums[i]<secondSmallest) secondSmallest = nums[i];\n        }\n        return largest * secondLargest - smallest * secondSmallest;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-difference-between-two-pairs"}