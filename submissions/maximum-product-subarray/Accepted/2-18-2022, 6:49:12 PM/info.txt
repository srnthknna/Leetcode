{"id":644248385,"lang":"java","time":"1 week, 1 day","timestamp":1645238952,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/644248385/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"42 MB","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        if (nums.length == 0) return 0;\n        int max_so_far = nums[0], min_so_far = nums[0], result = nums[0];\n        \n        for (int i = 1; i < nums.length; i++) {\n            int num = nums[i];\n            int temp_max_so_far = Math.max(num, Math.max(max_so_far * num, min_so_far * num));\n            min_so_far = Math.min(num, Math.min(max_so_far * num, min_so_far * num));\n            max_so_far = temp_max_so_far;\n            result = Math.max(max_so_far, result);\n        }\n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}