{"id":609956103,"lang":"java","time":"1 month, 4 weeks","timestamp":1640893266,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/609956103/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        if (nums.length == 0) return 0;\n        int max_so_far = 1, min_so_far = 1, result = 0;\n        \n        for (int num : nums) {\n            int temp_max_so_far = Math.max(num, Math.max(max_so_far * num, min_so_far * num));\n            min_so_far = Math.min(num, Math.min(max_so_far * num, min_so_far * num));\n            max_so_far = temp_max_so_far;\n            result = Math.max(max_so_far, result);\n        }\n        return result;\n    }\n}","compare_result":"11011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}