{"id":609967865,"lang":"java","time":"1 month, 4 weeks","timestamp":1640894715,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/609967865/","is_pending":"Not Pending","title":"Maximum Size Subarray Sum Equals k","memory":"69.2 MB","code":"class Solution {\n    public int maxSubArrayLen(int[] nums, int k) {\n        Map<Integer, Integer> map = new HashMap<>();\n        int sum = 0, longest = 0;\n        \n        for (int i = 0; i < nums.length; i++) {\n            sum += nums[i];\n            \n            if (sum == k) {\n                longest = i + 1;\n            }\n            \n            if (map.containsKey(sum - k)) {\n                longest = Math.max(longest, i - map.get(sum - k));\n            }\n            \n            if (!map.containsKey(sum)) {\n                map.put(sum, i);\n            }\n        }\n        return longest;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"maximum-size-subarray-sum-equals-k"}