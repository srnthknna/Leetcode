{"id":627008020,"lang":"java","time":"1Â month","timestamp":1643055540,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/627008020/","is_pending":"Not Pending","title":"Maximum Subarray Sum After One Operation","memory":"88.9 MB","code":"class Solution {\n    public int maxSumAfterOperation(int[] nums) {\n        int sum = 0, curr = 0, max = Integer.MIN_VALUE;\n        for (int num : nums) {\n            curr = Math.max(num * num, Math.max(curr + num, sum + num * num));\n            sum = Math.max(num, sum + num);\n            max = Math.max(curr, max);\n        }\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray-sum-after-one-operation"}