{"id":644247933,"lang":"java","time":"1 week, 1 day","timestamp":1645238878,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/644247933/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"42.4 MB","code":"import java.lang.IllegalArgumentException;\n\n//https://github.com/mission-peace/interview/blob/master/src/com/interview/binarysearch/MedianOfTwoSortedArrayOfDifferentLength.java\n//https://www.youtube.com/watch?v=LPFhl65R7ww&t=1053s&ab_channel=TusharRoy-CodingMadeSimple\nclass Solution {\n    public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n        if (nums1.length > nums2.length) {\n            return findMedianSortedArrays(nums2, nums1);\n        }       \n        \n        int x = nums1.length, y = nums2.length;\n        int low = 0, high = x;\n        \n        while (low <= high) {\n            int partisionX = (low + high) / 2;\n            int partisionY = (x + y + 1) / 2 - partisionX;\n            \n            int maxLeftX = (partisionX == 0) ? Integer.MIN_VALUE : nums1[partisionX - 1];\n            int minRightX = (partisionX == x) ? Integer.MAX_VALUE : nums1[partisionX];\n            int maxLeftY = (partisionY == 0) ? Integer.MIN_VALUE : nums2[partisionY - 1];\n            int minRightY = (partisionY == y) ? Integer.MAX_VALUE : nums2[partisionY];\n            \n            if (maxLeftX <= minRightY && maxLeftY <= minRightX) {\n                if ((x + y) % 2 == 0) {\n                    return (double)(Math.max(maxLeftX, maxLeftY) + Math.min(minRightX, minRightY)) / 2;\n                } else {\n                    return (double)Math.max(maxLeftX, maxLeftY);\n                }\n            } else if (maxLeftX > minRightY) {\n                high = partisionX - 1;\n            } else {\n                low = partisionX + 1;\n            }\n        }\n        throw new IllegalArgumentException();\n    }\n}","compare_resulttitle_slug":"median-of-two-sorted-arrays"}