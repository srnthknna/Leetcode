{"id":626170054,"lang":"java","time":"1Â month","timestamp":1642959673,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/626170054/","is_pending":"Not Pending","title":"Meeting Scheduler","memory":"69.4 MB","code":"class Solution {\n    public List<Integer> minAvailableDuration(int[][] slots1, int[][] slots2, int duration) {\n        PriorityQueue<int[]> queue = new PriorityQueue<>((slot1, slot2) -> (slot1[0] - slot2[0]));\n        \n        for (int[] slot1 : slots1) {\n            if (slot1[1] - slot1[0] >= duration)\n            queue.offer(slot1);\n        }\n        \n        for (int[] slot2 : slots2) {\n            if (slot2[1] - slot2[0] >= duration)\n            queue.offer(slot2);\n        }\n        \n        while (queue.size() > 1) {\n            int[] slot1 = queue.poll();\n            int[] slot2 = queue.peek();\n            \n            if (slot1[1] >= slot2[0] + duration) {\n                return new ArrayList<>(Arrays.asList(slot2[0], slot2[0] + duration));\n            }\n        }\n        return new ArrayList<>();\n    }\n}","compare_result":"111111111111111111111111","title_slug":"meeting-scheduler"}