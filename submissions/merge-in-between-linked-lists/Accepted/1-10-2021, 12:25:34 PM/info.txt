{"id":441270713,"lang":"java","time":"1 year, 1 month","timestamp":1610310334,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/441270713/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"114 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {\n        ListNode aMinus = null, bPlus = null;\n        ListNode tmp = list1, next;;\n        int size = 0;\n        while (tmp != null && (aMinus == null || bPlus == null)) {\n            next = tmp.next;\n            if (next != null) {\n                if (size == a - 1) aMinus = tmp;\n                if (size == b) bPlus = next;\n            }\n            tmp = next;\n            size++;\n        }\n        \n        aMinus.next = list2;\n        \n        while (list2.next != null) {\n            list2 = list2.next;\n        }\n        \n        list2.next = bPlus;\n        \n        return list1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists"}