{"id":441275410,"lang":"java","time":"1 year, 1 month","timestamp":1610311090,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/441275410/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"113.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {\n        ListNode PointA = list1;\n        \n        for (int i = 0; i < a - 1; i++) PointA = PointA.next;\n        \n        ListNode PointB = PointA.next;\n        \n        for (int i = 0; i < (b - a) + 1; i++) PointB = PointB.next;\n        \n        PointA.next = list2;\n        \n        while (list2.next != null) list2 = list2.next;\n        \n        list2.next = PointB;\n        \n        return list1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists"}