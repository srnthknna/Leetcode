{"id":441271535,"lang":"java","time":"1 year, 1 month","timestamp":1610310468,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/441271535/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {\n        ListNode pointA = list1; //Pointer of list 1\n       \n        for(int i = 1; i<a; i++) pointA = pointA.next; //Cycle till you are at A\n        \n       ListNode pointB = curr.next; //new pointer to continue on to find point B starts where A left off\n       \n        for(int i = 0; i<(b-a) + 1; i++) pointB = pointB.next; // Cycle till you are at B\n       \n        pointA.next = list2; //point A now points to list 2.\n       \n        while(pointA.next != null) pointA = pointA.next; //get to the end of list 2 which has been added to end of original point A\n       \n        pointA.next = pointB; //Insert the remainder from point B\n       \n        return list1; //return the list\n    }\n}","compare_result":null,"title_slug":"merge-in-between-linked-lists"}