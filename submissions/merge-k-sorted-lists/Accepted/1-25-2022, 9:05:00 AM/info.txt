{"id":627648371,"lang":"java","time":"1Â month","timestamp":1643130300,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/627648371/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"44.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        ListNode dummy = new ListNode(-1);\n        ListNode curr = dummy;\n        \n        PriorityQueue<ListNode> pq = new PriorityQueue<>((a, b) -> (a.val - b.val));\n        \n        for (ListNode list : lists) {\n            if (list != null)\n                pq.offer(list);\n        }\n        \n        while(!pq.isEmpty()) {\n            ListNode small = pq.poll();\n            curr.next = small;\n            curr = curr.next;\n            if (small.next != null)\n                pq.offer(small.next);\n        }\n        \n        return dummy.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}