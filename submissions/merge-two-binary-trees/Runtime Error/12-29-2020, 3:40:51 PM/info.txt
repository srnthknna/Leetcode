{"id":436172067,"lang":"java","time":"1 year, 2 months","timestamp":1609285251,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/436172067/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode mergeTrees(TreeNode t1, TreeNode t2) {\n        if (t1 == null && t2 != null) {\n            return t2;\n        }\n        else if (t1 != null && t2 == null) {\n            return t1;\n        }\n        else {\n            t1.val += t2.val;\n            t1.left = mergeTrees(t1.left, t2.left);\n            t1.right = mergeTrees(t1.right, t2.right);\n        }\n        return t1;\n    }\n}","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-two-binary-trees"}