{"id":436532369,"lang":"java","time":"1 year, 1 month","timestamp":1609360789,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/436532369/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"36.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode middleNode(ListNode head) {\n        int size = 0;\n        ListNode temp = head;\n        if (head == null) return null;\n        while(temp != null) {\n            temp = temp.next;\n            size++;\n        }\n        if (size == 1) {\n            return head;\n        }\n        int count = 0;\n        while (size/2 != count) {\n            head = head.next;\n            count++;\n        }\n\n        return head;\n    }\n}","compare_result":"111111111111111","title_slug":"middle-of-the-linked-list"}