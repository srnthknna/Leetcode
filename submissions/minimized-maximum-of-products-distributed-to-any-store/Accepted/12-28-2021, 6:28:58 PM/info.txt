{"id":608879981,"lang":"java","time":"2Â months","timestamp":1640744938,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/608879981/","is_pending":"Not Pending","title":"Minimized Maximum of Products Distributed to Any Store","memory":"47.3 MB","code":"class Solution {\n    public int minimizedMaximum(int n, int[] quantities) {\n        int left = 1, right = 1;\n        for (int q : quantities) {\n            right = Math.max(right, q);\n        }\n        \n        while(left < right) {\n            int mid = left + (right - left) / 2;\n            if (canDist(quantities, mid, n)) {\n                right = mid;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n    \n    private boolean canDist(int[] quantities, int k, int n) {\n        for (int q : quantities) {\n            n -= 1 + (q - 1) / k;\n        }\n        return n >= 0;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimized-maximum-of-products-distributed-to-any-store"}