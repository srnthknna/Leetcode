{"id":609495368,"lang":"java","time":"1 month, 4 weeks","timestamp":1640829342,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/609495368/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"36.5 MB","code":"class Solution {\n    Integer[] dp;\n    //https://www.youtube.com/watch?v=hsVUXvqGHeI&ab_channel=NareshGupta\n    public int mincostTickets(int[] days, int[] costs) {\n        dp = new Integer[days.length];\n        return helper(days, costs, 0);\n    }\n    \n    private int helper(int[] days, int[] costs, int day) {\n        if (day >= days.length)\n            return 0;\n        \n        if (dp[day] != null)\n            return dp[day];\n        \n        int oneDayPass = helper(days, costs, day + 1) + costs[0];\n        \n        int i;\n        for(i = day; i < days.length; i++)\n            if (days[i] >= days[day] + 7)\n                break;\n        int sevenDayPass = helper(days, costs, i) + costs[1];\n        \n        for(i = day; i < days.length; i++)\n            if (days[i] >= days[day] + 30)\n                break;\n        int thirtyDayPass = helper(days, costs, i) + costs[2];\n        \n        return dp[day] = Math.min(oneDayPass, Math.min(sevenDayPass, thirtyDayPass));\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets"}