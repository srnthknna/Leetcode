{"id":511647072,"lang":"java","time":"8 months, 1 week","timestamp":1624377064,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/511647072/","is_pending":"Not Pending","title":"Minimum Domino Rotations For Equal Row","memory":"N/A","code":"class Solution {\n    public int minDominoRotations(int[] tops, int[] bottoms) {\n        Set<Integer> first = new HashSet<>();\n        first.add(tops[0]);\n        first.add(bottoms[0]);\n        int ans = 0;\n        for (int i = 1; i < tops.length; i++) {\n            if (!first.contains(tops[i]) && !first.contains(bottoms[i])) {\n                return -1;\n            } else if (first.size() == 2) {\n                if (first.contains(tops[i]) && !first.contains(bottoms[i])) {\n                    first = new HashSet();\n                    first.add(tops[i]);\n                } else if (!first.contains(tops[i]) && first.contains(bottoms[i])) {\n                    first = new HashSet();\n                    first.add(bottoms[i]);\n                }\n            }\n        }\n        int i = 1;\n        while (i < tops.length) {\n            if (bottoms[i] == tops[0] && tops[i] != tops[0]) {\n                ans++;\n            }\n            i++;\n        }\n        if (ans > 0) return ans;\n        \n        i = 1; ans = 0;\n        while (i < tops.length) {\n            if (tops[i] == bottoms[0] && bottoms[i] != bottoms[0]) {\n                ans++; \n            }\n            i++;\n        }\n        return ans;\n    }\n}","compare_result":"111111111111111111111110111110111110111110110110111111111100001100011000100001000","title_slug":"minimum-domino-rotations-for-equal-row"}