{"id":609294596,"lang":"java","time":"2Â months","timestamp":1640804150,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/609294596/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"N/A","code":"class Solution {\n    public int minFallingPathSum(int[][] matrix) {\n        if (matrix == null || matrix.length == 0) return 0;\n        \n        int n = matrix.length;\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                int curr = matrix[i - 1][j];\n                if (j < n - 1) {\n                    curr = Math.min(curr, matrix[i - 1][j + 1]);\n                }\n                if (j > 0) {\n                    curr = Math.min(curr, matrix[i - 1][i - 1]);\n                }\n                matrix[i][j] += curr;\n            }\n        }\n        \n        int result = Integer.MAX_VALUE;\n        for (int num : matrix[n - 1]) {\n            result = Math.min(result, num);\n        }\n        \n        return result;\n    }\n}","compare_result":"1111111111111010111001000000001010000000000000001","title_slug":"minimum-falling-path-sum"}