{"id":624464996,"lang":"java","time":"1 month, 1 week","timestamp":1642747164,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/624464996/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"42.8 MB","code":"class Solution {\n    public int minPathSum(int[][] grid) {\n        if (grid == null || grid.length == 0) return 0;\n        int row = grid.length, col = grid[0].length, dp[] = new int[col];\n        \n        for (int i = 0; i < row; i++) {\n            for (int j = 0; j < col; j++) {\n                if (i == 0 && j == 0)\n                    dp[j] = grid[i][j];\n                else if (i == 0)\n                    dp[j] += grid[i][j] + dp[j - 1];\n                else if (j == 0)\n                    dp[j] += grid[i][j];\n                else\n                    dp[j] = grid[i][j] + Math.min(dp[j], dp[j - 1]);\n            }\n        }\n        return dp[col - 1];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}