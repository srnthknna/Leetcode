{"id":638034769,"lang":"java","time":"2 weeks, 4 days","timestamp":1644429384,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/638034769/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"45.1 MB","code":"class Solution {\n    // Sliding window\n    // https://www.youtube.com/watch?v=jKF9AcyBZ6E&list=WL&index=6&ab_channel=NickWhite\n    public int minSubArrayLen(int target, int[] nums) {\n        int left = 0, valSum = 0, result = Integer.MAX_VALUE;\n        \n        for (int i = 0; i < nums.length; i++) {\n            valSum += nums[i];\n            while (valSum >= target) {\n                result = Math.min(result, i + 1 - left);\n                valSum -= nums[left++];\n            }\n        }\n        \n        return result == Integer.MAX_VALUE ? 0 : result;\n    }\n}","compare_result":"1111111111111111111","title_slug":"minimum-size-subarray-sum"}