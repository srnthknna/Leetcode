{"id":637462893,"lang":"java","time":"2 weeks, 5 days","timestamp":1644360714,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/637462893/","is_pending":"Not Pending","title":"Minimum Time Difference","memory":"45.1 MB","code":"class Solution {\n    public int findMinDifference(List<String> timePoints) {\n        Integer firstTime = null, prevTime = null;\n        int diff = Integer.MAX_VALUE;\n        boolean[] times = new boolean[1440];\n        \n        for (String time : timePoints) {\n            String[] split = time.split(\":\");\n            int hour = Integer.parseInt(split[0]);\n            int min = Integer.parseInt(split[1]);\n            int calc = hour * 60 + min;\n            if (times[hour * 60 + min]) return 0;\n            times[calc] = true;\n        }\n        \n        for (int i = 0; i < 1440; i++) {\n            if (times[i]) {\n                if (firstTime == null) {\n                    firstTime = i;\n                    prevTime = i;\n                } else {\n                    diff = Math.min(diff, Math.min(i - prevTime, 1440 - i + prevTime));\n                    prevTime = i;\n                }\n            }\n        }\n        diff = Math.min(diff, Math.min(prevTime - firstTime, 1440 - prevTime + firstTime));\n        return diff;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-time-difference"}