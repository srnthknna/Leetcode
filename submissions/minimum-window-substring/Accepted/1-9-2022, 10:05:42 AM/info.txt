{"id":616388831,"lang":"java","time":"1 month, 2 weeks","timestamp":1641751542,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/616388831/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"47.6 MB","code":"class Solution {\n    public String minWindow(String s, String t) {\n        Map<Character, Integer> map = new HashMap<>();\n        \n        for (char c : t.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) + 1);\n        }\n        \n        int begin = 0, end = 0;\n        int counter = map.size();\n        int len = Integer.MAX_VALUE;\n        \n        String ans = \"\";\n        \n        while (end < s.length()) {\n            char endChar = s.charAt(end);\n            \n            if (map.containsKey(endChar)) {\n                map.put(endChar, map.get(endChar) - 1);\n                if (map.get(endChar) == 0) counter--;\n            }\n            \n            end++;\n            \n            while(counter == 0) {\n                if(end - begin < len) {\n                    len = end - begin;\n                    ans = s.substring(begin, end); \n                }\n\n                char startchar = s.charAt(begin);\n                \n                if(map.containsKey(startchar)) {\n                   map.put(startchar, map.get(startchar) + 1);\n                   if(map.get(startchar) > 0) counter++; \n                }\n                \n                begin++;\n            }\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring"}