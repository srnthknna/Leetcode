{"id":616396160,"lang":"java","time":"1 month, 2 weeks","timestamp":1641752304,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/616396160/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"48.1 MB","code":"class Solution {\n    public String minWindow(String s, String t) {\n        Map<Character, Integer> map = new HashMap<>();\n        for (char c : t.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) + 1);\n        }\n        int begin = 0, end = 0, len = Integer.MAX_VALUE, counter = map.size();\n        String ans = \"\";\n        \n        while (end < s.length()) {\n            char endChar = s.charAt(end);\n            if (map.containsKey(endChar)) {\n                map.put(endChar, map.get(endChar) - 1);\n                if (map.get(endChar) == 0) counter--;\n            }\n            end++;\n            \n            while (counter == 0) {\n                if (end - begin < len) {\n                    len = end - begin;\n                    ans = s.substring(begin, end);\n                }\n                \n                char startChar = s.charAt(begin);\n                \n                if (map.containsKey(startChar)) {\n                    map.put(startChar, map.get(startChar) + 1);\n                    if (map.get(startChar) > 0) counter++;\n                }\n                begin++;\n            }\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring"}