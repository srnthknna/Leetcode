{"id":505232739,"lang":"java","time":"8 months, 3 weeks","timestamp":1623211179,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/505232739/","is_pending":"Not Pending","title":"Missing Ranges","memory":"39.3 MB","code":"class Solution {\n    public List<String> findMissingRanges(int[] nums, int lower, int upper) {\n        LinkedList<String> answer = new LinkedList<>();\n        int index = 0;\n        boolean previousPresent = false;\n        Integer previous = null;\n        if (nums.length == 0) {\n            if (lower == upper)\n                answer.add(lower + \"\");\n            else\n                answer.add(lower + \"->\" + upper);\n            return answer;\n        }\n        int i;\n        for (i = lower; i <= upper && index < nums.length; i++) {\n            if (i == nums[index]) {\n                index++;\n            } else if (i < nums[index]) {\n                if (i + 1 == nums[index]) {\n                    System.out.println(i);\n                    answer.add(i + \"\");\n                } else {\n                    //System.out.println(i);\n                    answer.add(i + \"->\" + (nums[index] - 1));\n                    i += nums[index] - i;\n                    //System.out.println(i + \" \" + nums[index] + \" \" + index);\n                    index++;\n                }\n            }\n        }\n        if (i < upper && i != upper) {\n            answer.add(i + \"->\" + upper);\n        } else if (i == upper) {\n            answer.add(upper + \"\");\n        }\n        return answer;\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"missing-ranges"}