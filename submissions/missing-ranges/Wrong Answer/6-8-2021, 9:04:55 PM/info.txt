{"id":505234727,"lang":"java","time":"8 months, 3 weeks","timestamp":1623211495,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/505234727/","is_pending":"Not Pending","title":"Missing Ranges","memory":"N/A","code":"class Solution {\n    public List<String> findMissingRanges(int[] nums, int lower, int upper) {\n        List<String> answer = new ArrayList<>();\n        int index = 0;\n        boolean previousPresent = false;\n        Integer previous = null;\n        if (nums.length == 0) {\n            if (lower == upper)\n                answer.add(new StringBuilder().append(lower).toString());\n            else\n                answer.add(new StringBuilder().append(lower).append(\"->\").append(upper).toString());\n            return answer;\n        }\n        int i;\n        for (i = lower; i <= upper && index < nums.length; i++) {\n            if (i == nums[index]) {\n                index++;\n            } else if (i < nums[index]) {\n                if (i + 1 == nums[index]) {\n                    answer.add(new StringBuilder().append(i).toString());\n                } else {\n                    answer.add(new StringBuilder().append(i).append(\"->\").append((nums[index] - 1)).toString());\n                    i += nums[index] - i;\n                    index++;\n                }\n            }\n        }\n        if (i < upper && i != upper) {\n            answer.add(i + \"->\" + upper);\n            answer.add(new StringBuilder().append(i).append(\"->\").append(upper).toString());\n        } else if (i == upper) {\n            answer.add(new StringBuilder().append(upper).toString());\n        }\n        return answer;\n    }\n}","compare_result":"01111111000011100011111011111111111101","title_slug":"missing-ranges"}