{"id":610473332,"lang":"java","time":"1 month, 4 weeks","timestamp":1640975233,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/610473332/","is_pending":"Not Pending","title":"N-ary Tree Level Order Traversal","memory":"40.2 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public List<List<Integer>> levelOrder(Node root) {\n        List<Node> curr = new ArrayList<>(), next;\n        List<List<Integer>> output = new ArrayList<>();\n        List<Integer> row;\n        \n        if (root == null) return output;\n        curr.add(root);\n        \n        while(!curr.isEmpty()) {\n            next = new ArrayList<>();\n            row = new ArrayList<>();\n            for (Node n : curr) {\n                row.add(n.val);\n                if (n.children != null)\n                   next.addAll(n.children);\n            }\n            output.add(row);\n            \n            curr = next;\n        }\n        \n        return output; \n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-level-order-traversal"}