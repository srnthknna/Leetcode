{"id":437301656,"lang":"java","time":"1 year, 1 month","timestamp":1609545979,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/437301656/","is_pending":"Not Pending","title":"N-ary Tree Postorder Traversal","memory":"39.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public List<Integer> postorder(Node root) {\n        LinkedList<Node> stack = new LinkedList<>();\n        LinkedList<Integer> output = new LinkedList<>();\n        \n        if (root == null) return output;\n        stack.add(root);\n        \n        while (!stack.isEmpty()) {\n            Node node = stack.pollLast();\n            output.addFirst(node.val);\n            \n            for (Node n : node.children) {\n                stack.add(n);\n            }\n        }\n        \n        return output;\n    }\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"n-ary-tree-postorder-traversal"}