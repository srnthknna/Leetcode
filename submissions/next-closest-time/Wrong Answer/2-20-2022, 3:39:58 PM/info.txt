{"id":645598595,"lang":"java","time":"1Â week","timestamp":1645400398,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/645598595/","is_pending":"Not Pending","title":"Next Closest Time","memory":"N/A","code":"class Solution1 {\n    // https://www.youtube.com/watch?v=99Gw7Hezii8&lc=UgzNEpQBqLy2eWqcb4l4AaABAg&ab_channel=KevinNaughtonJr.\n    // Try all minute combination and decide\n    public String nextClosestTime(String time) {\n        Set<Integer> set = new HashSet<>();\n        int[] result = new int[4];\n        int i = 0;\n        for (int c : time.toCharArray()) {\n            if (c == ':') continue;\n            result[i] = c - '0';\n            set.add(result[i]);\n            i++;\n        }\n        \n        int minutes = (result[0] * 10 + result[1]) * 60 + (result[2] * 10 + result[3]);\n        \n        while (true) {\n            minutes = ++minutes % (1440);\n            \n            int H = minutes / 60 / 10;\n            int h = minutes / 60 % 10;\n            int M = minutes % 60 / 10;\n            int m = minutes % 60 % 10;\n            \n            if (!set.contains(H) || !set.contains(h) || !set.contains(M) || !set.contains(m)) continue;\n            \n            return String.format(\"%d%d:%d%d\", H, h, M, m);\n        }\n    }\n}\n\nclass Solution {\n\n    public String nextClosestTime(String time) {\n        char[] chars = time.toCharArray();\n        TreeSet<Character> set = new TreeSet<>(Arrays.asList(chars[0], chars[1], chars[3], chars[4]));\n        \n        chars[4] = getNext(chars[4], set, '9');\n        if (chars[4] > time.charAt(4)) return String.valueOf(chars);\n        \n        chars[3] = getNext(chars[3], set, '5');\n        if (chars[3] > time.charAt(3)) return String.valueOf(chars);\n        \n        chars[1] = getNext(chars[1], set, chars[0] < '2' ? '9' : '4');\n        if (chars[1] > time.charAt(1)) return String.valueOf(chars);\n        \n        chars[0] = getNext(chars[0], set, '2');\n        return String.valueOf(chars);\n    }\n    \n    private char getNext(char curr, TreeSet<Character> set, char max) {\n        Character next = set.higher(curr);\n        if (next == null || next > max) return set.first();\n        return next;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111110","title_slug":"next-closest-time"}