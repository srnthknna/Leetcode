{"id":494680278,"lang":"java","time":"9 months, 2 weeks","timestamp":1621305270,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/494680278/","is_pending":"Not Pending","title":"Next Greater Element I","memory":"39 MB","code":"class Solution {\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\n        // https://www.youtube.com/watch?v=m4hvxzLoN_I&ab_channel=SDESkills\n        Deque<Integer> stack = new ArrayDeque<>();\n        Map<Integer, Integer> map = new HashMap<>();\n        int[] res = new int[nums1.length];\n        Arrays.fill(res, -1);\n        \n        for (int i = 0; i < nums2.length; i++) {\n            while(!stack.isEmpty() && stack.peek() < nums2[i]) {\n                map.put(stack.pop(), nums2[i]);\n            }\n            stack.push(nums2[i]);\n        }\n        \n        for (int i = 0; i < nums1.length; i++) {\n            if (map.containsKey(nums1[i])) {\n                res[i] = map.get(nums1[i]);\n            }\n        }\n        return res;\n    }\n}","compare_result":"111111111111111","title_slug":"next-greater-element-i"}