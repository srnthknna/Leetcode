{"id":551827435,"lang":"java","time":"5 months, 3 weeks","timestamp":1631156056,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/551827435/","is_pending":"Not Pending","title":"Next Greater Node In Linked List","memory":"83.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public int[] nextLargerNodes(ListNode head) {\n        List<Integer> arr_list = new ArrayList<>();\n        ListNode curr = head;\n        while (curr != null) {\n            arr_list.add(curr.val);\n            curr = curr.next;\n        }\n        \n        int[] output = new int[arr_list.size()];\n        Stack<Integer> st = new Stack();\n        \n        for (int i = 0; i < arr_list.size(); i++) {\n            while(!st.isEmpty() && arr_list.get(st.peek()) < arr_list.get(i))\n                output[st.pop()] = arr_list.get(i);\n            \n            st.push(i);\n        }\n        return output;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-greater-node-in-linked-list"}