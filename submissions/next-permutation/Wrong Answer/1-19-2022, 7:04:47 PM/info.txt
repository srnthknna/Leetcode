{"id":623639262,"lang":"java","time":"1 month, 1 week","timestamp":1642647887,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/623639262/","is_pending":"Not Pending","title":"Next Permutation","memory":"N/A","code":"class Solution {\n    public void nextPermutation(int[] nums) {\n        int i = nums.length - 2;\n        while (i >= 0 && nums[i + 1] <= nums[i]) {\n            i--;\n        }\n        \n        if (i >= 0) {\n            int j = i + 1;\n            while ( j < nums.length && nums[j] < nums[i]) {\n                j--;\n            }\n            swap(nums, i, j);\n        }\n        reverse(nums, i + 1);\n    }\n    \n    private void swap(int[] nums, int i, int j) {\n        int temp = nums[i];\n        nums[i] = nums[j];\n        nums[j] = temp;\n    }\n    \n    private void reverse(int[] nums, int start) {\n        int end = nums.length - 1;\n        while (start < end) {\n            swap(nums, start, end);\n            start++;\n            end--;\n        }\n    }\n}","compare_result":"1111110111110010111110101011111010011001111010110011101111010110111011000100011101111101111110110010111010011110101110110011111111010000110111111101100111011011110111001111101111011101111011011011100110111010101110101011111111111111011110010011110111111011011110101","title_slug":"next-permutation"}