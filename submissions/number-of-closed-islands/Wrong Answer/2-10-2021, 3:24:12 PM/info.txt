{"id":454601960,"lang":"java","time":"1Â year","timestamp":1612999452,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/454601960/","is_pending":"Not Pending","title":"Number of Closed Islands","memory":"N/A","code":"class Solution {\n    public int closedIsland(int[][] grid) {\n        if (grid == null || grid.length == 0) {\n            return 0;\n        }\n        \n        int numIslands = 0;\n        //printGrid(grid);\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[i].length; j++) {\n                if (grid[i][j] == 0) {\n                    numIslands += dfs(grid, i ,j);\n                    //printGrid(grid);\n                }\n            }\n        }\n        return numIslands;\n    }\n    \n    private void printGrid(int[][] grid) {\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[i].length; j++) {\n                System.out.print(grid[i][j] + \" \");\n            }\n            System.out.println();\n        }\n        System.out.println();\n    }\n    \n    private int dfs(int[][] grid, int i, int j) {\n        if (i < 0 || i >= grid.length || j < 0 || j >= grid[i].length || grid[i][j] == 0) {\n            return 0;\n        }\n        \n        grid[i][j] = 1;\n        dfs(grid, i + 1, j);\n        dfs(grid, i - 1, j);\n        dfs(grid, i, j + 1);\n        dfs(grid, i, j - 1);\n        return 1;\n    }\n}","compare_result":"00011000000110000000000000000000000000000000000","title_slug":"number-of-closed-islands"}