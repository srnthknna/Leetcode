{"id":497851486,"lang":"java","time":"9 months, 1 week","timestamp":1621908986,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/497851486/","is_pending":"Not Pending","title":"Number of Different Integers in a String","memory":"39.1 MB","code":"class Solution {\n    public int numDifferentIntegers(String word) {\n//         int size = word.length();\n//         int i = 0;\n//         Set<String> set = new HashSet<>();\n//         while (i < size) {\n//             boolean isZeros = false;\n            \n//             while (i < size && (Character.isAlphabetic(word.charAt(i)) || word.charAt(i) == '0')) {\n//                 if (word.charAt(i) == '0') isZeros = true;\n//                 ++i;\n//                 if ((i == size || Character.isAlphabetic(word.charAt(i))) && isZeros) {\n//                     set.add(\"0\");\n//                 }\n//             }\n            \n//             if (i < size && (Character.isDigit(word.charAt(i))) && word.charAt(i) != '0') {\n//                 StringBuilder sb = new StringBuilder();\n//                 while (i < size && Character.isDigit(word.charAt(i))) {\n//                     sb.append(word.charAt(i));\n//                     i++;\n//                 }\n//                 set.add(sb.toString());\n//             }\n//         }\n//         return set.size();\n        \n            return Arrays.stream(word.replaceAll(\"[a-z]+\", \" \").split(\" \"))\n                .filter(s -> !\"\".equals(s))\n                .map(s -> s.replaceFirst(\"^0+\", \"\"))\n\t\t\t    .collect(Collectors.toSet())\n                .size();\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-different-integers-in-a-string"}