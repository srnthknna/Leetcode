{"id":497852367,"lang":"java","time":"9 months, 1 week","timestamp":1621909157,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/497852367/","is_pending":"Not Pending","title":"Number of Different Integers in a String","memory":"37.4 MB","code":"class Solution {\n    public int numDifferentIntegers(String word) {\n        int size = word.length();\n        int i = 0;\n        Set<String> set = new HashSet<>();\n        while (i < size) {\n            boolean isZeros = false;\n            \n            while (i < size && (Character.isAlphabetic(word.charAt(i)) || word.charAt(i) == '0')) {\n                if (word.charAt(i) == '0') isZeros = true;\n                ++i;\n                if ((i == size || Character.isAlphabetic(word.charAt(i))) && isZeros) {\n                    set.add(\"0\");\n                }\n            }\n            \n            if (i < size && (Character.isDigit(word.charAt(i))) && word.charAt(i) != '0') {\n                StringBuilder sb = new StringBuilder();\n                while (i < size && Character.isDigit(word.charAt(i))) {\n                    sb.append(word.charAt(i));\n                    i++;\n                }\n                set.add(sb.toString());\n            }\n        }\n        return set.size();\n        \n\t\t\t    // return Arrays.stream(word.replaceAll(\"[a-z]+\", \" \").split(\" \"))\n\t\t\t    // .filter(s -> !\"\".equals(s))\n\t\t\t    // .map(s -> s.replaceFirst(\"^0+\", \"\"))\n\t\t\t    // .collect(Collectors.toSet())\n\t\t\t    // .size();\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-different-integers-in-a-string"}