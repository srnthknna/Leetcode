{"id":616535055,"lang":"java","time":"1 month, 2 weeks","timestamp":1641767899,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/616535055/","is_pending":"Not Pending","title":"Number of Equal Count Substrings","memory":"N/A","code":"class Solution {\n    public int equalCountSubstrings(String s, int count) {\n        Map<Character, Integer> map = new HashMap<>();\n        \n        int begin = 0, end = 0, counter = 0, ans = 0;;\n        \n        while (end < s.length()) {\n            char curr = s.charAt(end);\n            \n            map.put(curr, map.getOrDefault(curr, 0) + 1);\n            if (map.get(curr) == count) counter++;\n            \n            end++;\n            \n            while ((end - begin) == counter * count) {\n                if ((end - begin) == counter * count) {\n                    //System.out.println(map);\n                    ans++;\n                }\n                \n                char startChar = s.charAt(begin);\n                \n                if (map.containsKey(startChar)) {\n                    map.put(startChar, map.get(startChar) - 1);\n                    if (map.get(startChar) == 0) counter--;\n                }\n                begin++;\n            }\n            //System.out.println(begin + \" \" + end);\n        }\n        return ans == 0 ? ans : ans - 1;\n    }\n}","compare_result":"1111110000001000001111111111110111111111110011011111000100110010010111111001101011111101111111101111111111101011100100010000","title_slug":"number-of-equal-count-substrings"}