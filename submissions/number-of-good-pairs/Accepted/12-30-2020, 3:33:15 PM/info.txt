{"id":436589208,"lang":"java","time":"1 year, 1 month","timestamp":1609371195,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/436589208/","is_pending":"Not Pending","title":"Number of Good Pairs","memory":"36.4 MB","code":"class Solution {\n    public int numIdenticalPairs(int[] nums) {\n        Map<Integer, Integer> map = new HashMap<>();\n        \n        for (int n : nums) {\n            if (map.containsKey(n)) {\n                map.put(n, map.get(n) + 1);\n            } else {\n                map.put(n, 1);\n            }\n        }\n        \n        int sum = 0;\n        for (int k : map.keySet()) {\n            int val = map.get(k);\n            if (val > 1) {\n                sum += val * (val - 1) / 2;\n            }\n        }\n        return sum;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-good-pairs"}