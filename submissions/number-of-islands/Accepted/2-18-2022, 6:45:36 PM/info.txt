{"id":644247039,"lang":"java","time":"1 week, 1 day","timestamp":1645238736,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/644247039/","is_pending":"Not Pending","title":"Number of Islands","memory":"57.9 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        int islands = 0;\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[i].length; j++) {\n                if (grid[i][j] == '1') {\n                    islands++;\n                    callBFS(grid, i, j);\n                }\n            }\n        }\n        return islands;\n    }\n    \n    private void callBFS(char[][] grid, int i, int j) {\n        if (i < 0 || i >= grid.length || j < 0 || j >= grid[i].length || grid[i][j] == '0') return;\n        \n        grid[i][j] = '0';\n        callBFS(grid, i - 1, j); // up\n        callBFS(grid, i + 1, j); // down\n        callBFS(grid, i, j - 1); // left\n        callBFS(grid, i, j + 1); // right\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}