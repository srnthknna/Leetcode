{"id":327291909,"lang":"java","time":"1 year, 10 months","timestamp":1587323639,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/327291909/","is_pending":"Not Pending","title":"Number of Islands","memory":"42 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        if (grid == null || grid.length == 0) {\n            return 0;\n        }\n        \n        int numIslands = 0;\n        \n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[i].length; j++) {\n                if (grid[i][j] == '1') {\n                    numIslands += dfs(grid, i , j);\n                }\n            }\n        }\n        return numIslands;\n    }\n    \n    private int dfs(char[][] grid, int i, int j) {\n        if (i < 0 || i >= grid.length || j < 0 || j >= grid[i].length || grid[i][j] == '0') {\n            return 0;\n        }\n        \n        grid[i][j] = '0';\n        dfs(grid, i + 1, j);\n        dfs(grid, i - 1, j);\n        dfs(grid, i, j + 1);\n        dfs(grid, i, j - 1);\n        return 1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}