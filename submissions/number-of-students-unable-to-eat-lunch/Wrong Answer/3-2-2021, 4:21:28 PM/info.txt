{"id":462783051,"lang":"java","time":"12Â months","timestamp":1614730888,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/462783051/","is_pending":"Not Pending","title":"Number of Students Unable to Eat Lunch","memory":"N/A","code":"class Solution {\n    public int countStudents(int[] students, int[] sandwiches) {\n        Queue<Integer> studentQ = new LinkedList<>();\n        Stack<Integer> sandwichS = new Stack<>();\n\n        for (int student : students) {\n            studentQ.offer(student);\n        }\n        \n        for (int sandwich : sandwiches) {\n            sandwichS.push(sandwich);\n        }\n        \n        while (!studentQ.isEmpty() && !sandwichS.isEmpty()) {\n            if (studentQ.peek() == sandwichS.peek()) {\n                studentQ.poll();\n                sandwichS.pop();\n            } else {\n                int size = studentQ.size(), i = 0;\n                while (studentQ.peek() != sandwichS.peek() && i != size) {\n                    studentQ.offer(studentQ.poll());\n                    i++;\n                }\n                if (i == size) \n                    return size;\n            }\n        }\n        return 0;\n    }\n}","compare_result":"1011100101001101010101100010001001001001001000000110010","title_slug":"number-of-students-unable-to-eat-lunch"}