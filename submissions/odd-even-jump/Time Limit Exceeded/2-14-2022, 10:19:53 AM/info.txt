{"id":641367116,"lang":"java","time":"1 week, 6 days","timestamp":1644862793,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/641367116/","is_pending":"Not Pending","title":"Odd Even Jump","memory":"N/A","code":"class Solution {\n\n    public int oddEvenJumps(int[] arr) {\n        int ans = 0;\n        for (int i = 0; i < arr.length; i++) {\n            if (canJump(1, i, arr)) {\n                ans++;\n            }\n        }\n        return ans;\n    }\n    \n    private boolean canJump(int jumpCount, int currIndex, int[] arr) {\n        if (currIndex == arr.length - 1) return true;\n        if (jumpCount % 2 == 1) {\n            int nextIndex = canOddJump(currIndex, arr);\n            \n            if (nextIndex != -1) {\n                return canJump(jumpCount + 1, nextIndex, arr);\n            }\n        } else {\n            int nextIndex = canEvenJump(currIndex, arr);\n            if (nextIndex != -1) {\n                return canJump(jumpCount + 1, nextIndex, arr);\n            }\n        }\n        return false;\n    }\n    \n    private int canOddJump(int currIndex, int[] arr) {\n        int ans = -1, nextIndex = -1;\n        for (int j = currIndex + 1; j < arr.length; j++) {\n            if (arr[currIndex] <= arr[j] && (ans == -1 || ans > arr[j])) {\n                ans = arr[j];\n                nextIndex = j;\n            }\n        }\n        return nextIndex;\n    }\n    \n    private int canEvenJump(int currIndex, int[] arr) {\n        int ans = -1, nextIndex = -1;\n        for (int j = currIndex + 1; j < arr.length; j++) {\n            if (arr[currIndex] >= arr[j] && (ans == -1 || ans < arr[j])) {\n                ans = arr[j];\n                nextIndex = j;\n            }\n        }\n        return nextIndex;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111110000","title_slug":"odd-even-jump"}