{"id":440477935,"lang":"java","time":"1 year, 1 month","timestamp":1610153456,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/440477935/","is_pending":"Not Pending","title":"Palindrome Permutation","memory":"39 MB","code":"class Solution {\n    public boolean canPermutePalindrome(String s) {\n        Map<Character, Integer> charMap = new HashMap<>();\n        \n        for (int i = 0; i < s.length(); i++) {\n            if (charMap.containsKey(s.charAt(i))) {\n                charMap.put(s.charAt(i), charMap.get(s.charAt(i)) + 1);\n            } else {\n                charMap.put(s.charAt(i), 1);\n            }\n            \n        }\n                                  \n        int noOfOdd = 0;\n        for (int i : charMap.values()) {\n            if (i % 2 == 1) noOfOdd++;\n        }\n        \n        return noOfOdd <= 1;\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"palindrome-permutation"}