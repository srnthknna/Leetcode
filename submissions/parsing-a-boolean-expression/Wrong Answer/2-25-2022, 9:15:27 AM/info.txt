{"id":648767741,"lang":"java","time":"2 days, 7 hours","timestamp":1645809327,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/648767741/","is_pending":"Not Pending","title":"Parsing A Boolean Expression","memory":"N/A","code":"class Solution {\n    public boolean parseBoolExpr(String expression) {\n        Stack<Character> stack = new Stack<>();\n        for (char c : expression.toCharArray()) {\n            switch (c) {\n                case '&':\n                case '|':\n                case '!':\n                case 't':\n                case 'f':\n                    stack.push(c);\n                    break;\n                case '(':\n                case ',':\n                    break;\n                case ')':\n                    evaluate(stack);\n            }\n        }\n        while (stack.size() != 1) {\n            evaluate(stack);\n        }\n        return stack.pop() == 't' ? true : false;\n    }\n    \n    private void evaluate(Stack<Character> stack) {\n        List<Boolean> vars = new ArrayList<>();\n        char top;\n        do {\n            top = stack.pop();\n            switch(top) {\n                case 't':\n                    vars.add(true);\n                    break;\n                case 'f':\n                    vars.add(false);\n                    break;\n                case '&':\n                    boolean and = true;\n                    for (boolean var : vars)\n                        and &= var;\n                    stack.push(and == true ? 't' : 'f');\n                    break;\n                case '|':\n                    boolean or = true;\n                    for (boolean var : vars)\n                        or |= var;\n                    stack.push(or == true ? 't' : 'f');\n                    break;\n                case '!':\n                    boolean not = vars.get(0);\n                    not = not == true ? false : true;\n                    stack.push(not == true ? 't' : 'f');\n                    break;\n            }\n        } while (top != '&' && top != '|' && top != '!');\n    }\n}","compare_result":"11101111111111111110111111111111111111111111111111111111111111111111111","title_slug":"parsing-a-boolean-expression"}