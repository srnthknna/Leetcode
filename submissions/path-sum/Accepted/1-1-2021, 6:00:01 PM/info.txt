{"id":437331925,"lang":"java","time":"1 year, 1 month","timestamp":1609552801,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/437331925/","is_pending":"Not Pending","title":"Path Sum","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean hasPathSum(TreeNode root, int sum) {\n        if (root == null) return false;\n        \n//         Stack<TreeNode> node_stack = new Stack();\n//         Stack<Integer> sum_stack = new Stack();\n        \n//         node_stack.add(root);\n//         sum_stack.add(sum - root.val);\n        \n//         while (!node_stack.isEmpty()) {\n//             TreeNode node = node_stack.pop();\n//             int curr_sum = sum_stack.pop();\n\n//             if (node.left == null && node.right == null && curr_sum == 0) return true;\n            \n//             if (node.left != null) {\n//                 node_stack.add(node.left);\n//                 sum_stack.add(curr_sum - node.left.val);\n//             }\n            \n//             if (node.right != null) {\n//                 node_stack.add(node.right);\n//                 sum_stack.add(curr_sum - node.right.val);\n//             }\n//         }\n//         return false;\n        \n        sum -= root.val;\n        if (root.left == null && root.right == null) return sum == 0;\n        return hasPathSum(root.left, sum) || hasPathSum(root.right, sum);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum"}