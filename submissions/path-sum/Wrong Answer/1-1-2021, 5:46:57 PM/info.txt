{"id":437328167,"lang":"java","time":"1 year, 1 month","timestamp":1609552017,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/437328167/","is_pending":"Not Pending","title":"Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean hasPathSum(TreeNode root, int sum) {\n        if (root == null) return false;\n        \n        Stack<TreeNode> node_stack = new Stack<>();\n        Stack<Integer> sum_stack = new Stack<>();\n        \n        node_stack.add(root);\n        sum_stack.add(sum - root.val);\n        while (!node_stack.isEmpty()) {\n            TreeNode node = node_stack.pop();\n            int curr_sum = node.val + sum_stack.pop();\n\n            if (node.left == null && node.right == null && sum == curr_sum) return true;\n            \n            if (node.left != null) {\n                node_stack.add(node.left);\n                sum_stack.add(curr_sum - node.left.val);\n            }\n            \n            if (node.right != null) {\n                node_stack.add(node.right);\n                sum_stack.add(curr_sum - node.right.val);\n            }\n        }\n        return false;\n    }\n}","compare_result":"111100001000100011010100100100111100000001110100000100000101101110100110111100011000010101001001010011011001101110","title_slug":"path-sum"}