{"id":635164874,"lang":"java","time":"3 weeks, 1 day","timestamp":1644087642,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/635164874/","is_pending":"Not Pending","title":"Path with Maximum Gold","memory":"41.1 MB","code":"class Solution {\n    int max = 0;\n    public int getMaximumGold(int[][] grid) {\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[0].length; j++) {\n                if (grid[i][j] != 0) {\n                    travelAndCollectGold(grid, i, j, 0);                \n                }\n            }\n        }\n        \n        return max;\n    }\n    \n    private void travelAndCollectGold(int[][] grid, int i, int j, int sum) {\n        if (i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || grid[i][j] == 0) {\n            max = Math.max(max, sum);\n            return;\n        }\n\n        int gridVal = grid[i][j];\n        grid[i][j] = 0;\n        travelAndCollectGold(grid, i + 1, j, gridVal + sum);\n        travelAndCollectGold(grid, i, j + 1, gridVal + sum);\n        travelAndCollectGold(grid, i - 1, j, gridVal + sum);\n        travelAndCollectGold(grid, i, j - 1, gridVal + sum);\n        grid[i][j] = gridVal;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"path-with-maximum-gold"}