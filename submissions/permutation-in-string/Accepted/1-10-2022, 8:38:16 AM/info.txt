{"id":617038051,"lang":"java","time":"1 month, 2 weeks","timestamp":1641832696,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/617038051/","is_pending":"Not Pending","title":"Permutation in String","memory":"40.4 MB","code":"class Solution {\n    public boolean checkInclusion(String s1, String s2) {\n        Map<Character, Integer> map = new HashMap<>();\n        for (char c : s1.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) + 1);\n        }\n        int counter = map.size(), len = s1.length(), begin = 0, end = 0;\n        \n        while (end < s2.length()) {\n            char endChar = s2.charAt(end);\n            \n            if (map.containsKey(endChar)) {\n                map.put(endChar, map.get(endChar) - 1);\n                if (map.get(endChar) == 0) counter--;\n            }\n            \n            end++;\n            \n            while (counter == 0) {\n                if (end - begin == len) return true;\n                \n                char startChar = s2.charAt(begin);\n                \n                if (map.containsKey(startChar)) {\n                    map.put(startChar, map.get(startChar) + 1);\n                    if (map.get(startChar) == 1) counter++; \n                }\n                begin++;\n            }\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-in-string"}