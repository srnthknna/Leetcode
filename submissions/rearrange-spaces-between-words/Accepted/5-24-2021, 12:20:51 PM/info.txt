{"id":497731062,"lang":"java","time":"9 months, 1 week","timestamp":1621884051,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/497731062/","is_pending":"Not Pending","title":"Rearrange Spaces Between Words","memory":"37.2 MB","code":"class Solution {\n    public String reorderSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        List<String> actualWords = new ArrayList<>();\n        \n        String[] words = text.split(\" \"); // Reason is \" +\" is very slow and expensive\n        for(String word: words){\n            if(!word.isBlank())\n                actualWords.add(word.trim());\n        }\n        \n        int count = 0, distribute = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') count++;\n        }\n        \n        if ((actualWords.size() - 1) > 0) {\n            distribute = count / (actualWords.size() - 1);\n            for (int j = 0; j < actualWords.size() - 1; j++) {\n                sb.append(actualWords.get(j));\n                for (int i = 0; i < distribute; i++) {\n                    sb.append(' ');\n                }\n                count -= distribute;\n            }\n        }\n        \n        sb.append(actualWords.get(actualWords.size() - 1));\n        for (int i = 0; i < count; i++) {\n            sb.append(' ');\n        }\n        \n        return sb.toString();\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rearrange-spaces-between-words"}