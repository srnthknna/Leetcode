{"id":552378215,"lang":"java","time":"5 months, 2 weeks","timestamp":1631243425,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/552378215/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"N/A","code":"class Solution {\n    public List<String> findItinerary(List<List<String>> tickets) {\n        Map<String, List<String>> map = createGraph(tickets);\n        System.out.println(map);\n        \n        Queue<String> queue = new ArrayDeque<>();\n        Set<String> visited = new HashSet<>();\n        \n        queue.add(\"JFK\");\n        \n        List<String> output = new ArrayList<>();\n        String prev = \"JFK\";\n        String curr = \"JFK\";\n        \n        for (List<String> values : map.values()){\n           Collections.sort(values); \n        }\n        \n        while (!queue.isEmpty()) {\n            if (queue.size() > 0)\n            curr = queue.remove();\n            \n            output.add(curr);\n\n            \n            System.out.println(prev + \" \" + curr);\n            System.out.println(\"output \" + output + \" \" + map);\n\n            if (map.containsKey(curr)) {\n                List<String> currNeigh = map.get(curr);\n                if (currNeigh.size() > 0) {\n\n                    for (String neigh : currNeigh) {\n                        if (!map.containsKey(neigh) && currNeigh.size() > 1)\n                            continue;                            \n\n                        queue.add(neigh);\n                        map.get(curr).remove(neigh);\n                        break;\n\n                    }\n                }  else {\n                    map.remove(curr);\n                }\n            }\n        }\n\n       return output; \n            \n    }\n    \n    private Map<String, List<String>> createGraph(List<List<String>> tickets) {\n        Map<String, List<String>> map = new HashMap<>();\n        \n        for (List<String> toAndFro : tickets) {\n            map.putIfAbsent(toAndFro.get(0), new ArrayList<String>());\n            map.get(toAndFro.get(0)).add(toAndFro.get(1));\n        }\n        return map;\n    }\n}","compare_result":"11111111110001000000000010010001100000001100000010000110000000010100010000001000","title_slug":"reconstruct-itinerary"}