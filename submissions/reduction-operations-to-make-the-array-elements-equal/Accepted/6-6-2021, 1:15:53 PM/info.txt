{"id":504067483,"lang":"java","time":"8 months, 3 weeks","timestamp":1623010553,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/504067483/","is_pending":"Not Pending","title":"Reduction Operations to Make the Array Elements Equal","memory":"109.7 MB","code":"class Solution1 {\n    public int reductionOperations(int[] nums) {\n        int result = 0;\n        \n        while (!areEquals(nums)) {\n            //printVals(nums);\n            result += findAndUpdateSecondLargestWithMax(nums);\n        }\n        \n        return result;\n    }\n    \n    private void printVals(int[] nums) {\n        List<Integer> numList = new ArrayList<>();\n        for (int num : nums)\n            numList.add(num);\n        System.out.println(numList);\n    }\n    \n    private int findAndUpdateSecondLargestWithMax(int[] nums) {\n        int max = Integer.MIN_VALUE;\n        int secondMax = Integer.MIN_VALUE;\n        List<Integer> maxIndices = new ArrayList<>();\n        \n        for (int i = 0; i < nums.length; i++) {\n            if (nums[i] > max) {\n                secondMax = max;\n                max = nums[i];\n                maxIndices.clear();\n                maxIndices.add(i);\n            } else if (nums[i] == max) {\n                maxIndices.add(i);\n            } else if (nums[i] < max && nums[i] > secondMax) {\n                secondMax = nums[i];\n            }\n        }\n        for (int index : maxIndices) {\n            nums[index] = secondMax;\n        }\n        return maxIndices.size();\n    }\n    \n    private boolean areEquals(int[] nums) {\n        if (nums.length == 1) return true;\n        int first = nums[0];\n        for (int i = 1; i < nums.length; i++) {\n            if (nums[i] != first)\n                return false;\n        }\n        return true;\n    }\n}\n\nclass Solution {\n    public int reductionOperations(int[] nums) {\n        int res = 0, size = nums.length;\n        Arrays.sort(nums);\n        for (int j = size - 1; j > 0; --j)\n            if (nums[j - 1] != nums[j])\n                res += size - j;\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reduction-operations-to-make-the-array-elements-equal"}