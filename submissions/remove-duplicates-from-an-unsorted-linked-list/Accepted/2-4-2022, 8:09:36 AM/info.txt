{"id":634438776,"lang":"java","time":"3 weeks, 2 days","timestamp":1643990976,"status_display":"Accepted","runtime":"126 ms","url":"/submissions/detail/634438776/","is_pending":"Not Pending","title":"Remove Duplicates From an Unsorted Linked List","memory":"150.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteDuplicatesUnsorted(ListNode head) {\n        ListNode dummy = new ListNode(-1);\n        ListNode headC = head, dummyC = dummy;\n        Map<Integer, Integer> map = new HashMap<>();\n        \n        while (headC != null) {\n            map.put(headC.val, map.getOrDefault(headC.val, 0) + 1);\n            headC = headC.next;\n        }\n        \n        headC = head;\n        \n        while (headC != null) {\n            if (map.get(headC.val) == 1) {\n                dummy.next = headC;\n                dummy = dummy.next;\n            }\n            headC = headC.next;\n        }\n        \n        dummy.next = null;\n        return dummyC.next;\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"remove-duplicates-from-an-unsorted-linked-list"}