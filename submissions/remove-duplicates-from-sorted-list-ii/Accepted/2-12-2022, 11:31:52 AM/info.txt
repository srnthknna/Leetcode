{"id":640036913,"lang":"java","time":"2 weeks, 1 day","timestamp":1644694312,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/640036913/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List II","memory":"43.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteDuplicates(ListNode head) {\n        ListNode dummy = new ListNode(), prev = dummy;\n        while (head != null) {\n            int count = 0;\n            while (head.next != null && head.val == head.next.val) {\n                head = head.next;\n                count++;\n            }\n            if (count < 1) {\n                prev.next = head;\n                prev = head;\n            } else {\n                prev.next = head.next;\n            }\n            head = head.next;\n        }\n        return dummy.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list-ii"}