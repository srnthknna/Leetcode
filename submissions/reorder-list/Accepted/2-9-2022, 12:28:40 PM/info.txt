{"id":638117964,"lang":"java","time":"2 weeks, 4 days","timestamp":1644438520,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/638117964/","is_pending":"Not Pending","title":"Reorder List","memory":"54.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public void reorderList(ListNode head) {\n        if (head == null) return;\n        \n        ListNode slow = head, fast = head;\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        \n        ListNode prev = null, curr = slow, temp;\n        while (curr != null) {\n            temp = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = temp;\n        }\n        \n        ListNode first = head, second = prev;\n        while (second.next != null) {\n            temp = first.next;\n            first.next = second;\n            first = temp;\n            \n            temp = second.next;\n            second.next = first;\n            second = temp;\n        }\n    }\n}","compare_result":"111111111111","title_slug":"reorder-list"}