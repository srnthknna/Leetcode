{"id":627204392,"lang":"java","time":"1Â month","timestamp":1643080470,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/627204392/","is_pending":"Not Pending","title":"Reorganize String","memory":"38.8 MB","code":"class Solution {\n    public String reorganizeString(String s) {\n        int[] hash = new int[26];\n        for (char c : s.toCharArray()) {\n            hash[c - 'a']++;\n        }\n        \n        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> hash[b] - hash[a]);\n        \n        for (int i = 0; i < 26; i++) {\n            if (hash[i] > (s.length() + 1) / 2) return \"\";\n            if (hash[i] > 0)\n                pq.offer(i);\n        }\n        \n        StringBuilder sb = new StringBuilder();\n        \n        while (pq.size() >= 2) {\n            int i = pq.poll();\n            int j = pq.poll();\n            sb.append((char) (i + 'a'));\n            sb.append((char) (j + 'a'));\n            if (--hash[i] > 0) pq.offer(i);\n            if (--hash[j] > 0) pq.offer(j);\n        }\n        \n        if (pq.size() != 0)\n            sb.append((char) (pq.poll() + 'a'));\n        \n        return sb.toString();\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reorganize-string"}