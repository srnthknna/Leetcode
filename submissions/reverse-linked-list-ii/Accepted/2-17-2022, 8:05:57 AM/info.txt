{"id":643332199,"lang":"java","time":"1 week, 3 days","timestamp":1645113957,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/643332199/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"42.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseBetween(ListNode head, int left, int right) {\n        if (head == null) return null;\n        ListNode curr = head, prev = null;\n        \n        while (left > 1) {\n            prev = curr;\n            curr = curr.next;\n            left--;\n            right--;\n        }\n        \n        ListNode con = prev, tail = curr, third = null;\n        \n        while (right > 0) {\n            third = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = third;\n            right--;\n        }\n        \n        if (con != null) {\n            con.next = prev;\n        } else {\n            head = prev;\n        }\n        \n        tail.next = third;\n        return head;\n    }\n\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii"}