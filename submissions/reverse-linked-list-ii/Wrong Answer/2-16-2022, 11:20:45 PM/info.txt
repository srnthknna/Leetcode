{"id":643116855,"lang":"java","time":"1 week, 3 days","timestamp":1645082445,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/643116855/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseBetween(ListNode head, int left, int right) {\n        ListNode prev = null, next = null, tempHead = head;\n        ListNode leftBefore = null, rightAfter = null;\n        while (tempHead != null) {\n            if (left == tempHead.val) {\n                prev = tempHead;\n            }\n            if (right == tempHead.val) {\n                next = tempHead;\n            }\n            if (prev == null) {\n                leftBefore = tempHead;\n            }\n            tempHead = tempHead.next;\n        }\n        \n    \n        \n        if (prev != null && next != null) {\n            rightAfter = next.next;\n            next = prev;\n            ListNode con = next;\n            prev = leftBefore;\n\n            while (next != rightAfter) {\n                ListNode temp = next.next;\n                next.next = prev;\n                prev = next;\n                next = temp;\n            }\n            con.next = rightAfter;\n        }\n        head.next = prev;\n        //con.next = rightAfter;\n        //System.out.println(con.val);\n        //printList(head);\n        return head;\n    }\n    \n    private void printList(ListNode temp) {\n        for (int i = 0; i < 10; i++) {\n            System.out.println(temp.val);\n            temp = temp.next;\n        }\n    }\n}","compare_result":"11000010010010001000010000000000000000000000","title_slug":"reverse-linked-list-ii"}