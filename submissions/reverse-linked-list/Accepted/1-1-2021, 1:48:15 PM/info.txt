{"id":437259422,"lang":"java","time":"1 year, 1 month","timestamp":1609537695,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/437259422/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"39 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        return reverseHelper(head, null);\n    }\n    \n    private ListNode reverseHelper(ListNode current, ListNode next) {\n        if (current == null) return next;\n        ListNode parent = current.next;\n        current.next = next;\n        return reverseHelper(parent, current);\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"reverse-linked-list"}