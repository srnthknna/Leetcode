{"id":437273781,"lang":"java","time":"1 year, 1 month","timestamp":1609540562,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/437273781/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"38.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        //return reverseHelper(head, null);\n        \n        ListNode prev = null;\n        \n        while (head !=  null) {\n            ListNode next = head.next;\n            head.next = prev;\n            prev = head;\n            head = next;\n        }\n        \n        return prev;\n    }\n    \n    // private ListNode reverseHelper(ListNode current, ListNode next) {\n    //     if (current == null) return next;\n    //     ListNode parent = current.next;\n    //     current.next = next;\n    //     return reverseHelper(parent, current);\n    // }\n}","compare_result":"111111111111111111111111111","title_slug":"reverse-linked-list"}