{"id":626223184,"lang":"java","time":"1Â month","timestamp":1642964915,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/626223184/","is_pending":"Not Pending","title":"Russian Doll Envelopes","memory":"47.9 MB","code":"class Solution {\n    public int maxEnvelopes(int[][] envelopes) {\n        Arrays.sort(envelopes, (env1, env2) -> (env1[0] == env2[0] ? (env2[1] - env1[1]) : (env1[0] - env2[0])));\n        \n        int[] secondDim = new int[envelopes.length];\n        for (int i = 0; i < envelopes.length; i++)\n            secondDim[i] = envelopes[i][1];\n        return lengthOfLIS(secondDim);\n    }\n    \n    private int lengthOfLIS(int[] nums) {\n        List<Integer> sub = new ArrayList<>();\n        sub.add(nums[0]);\n        \n        for (int i = 1; i < nums.length; i++) {\n            int num = nums[i];\n            if (num > sub.get(sub.size() - 1)) {\n                sub.add(num);\n            } else {\n                int j = Collections.binarySearch(sub, num);\n                if (j < 0) {\n                    j = -(j + 1);\n                }\n                sub.set(j, num);\n            }\n        }\n        return sub.size();\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"russian-doll-envelopes"}