{"id":644010384,"lang":"java","time":"1 week, 2 days","timestamp":1645204005,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/644010384/","is_pending":"Not Pending","title":"Satisfiability of Equality Equations","memory":"41.9 MB","code":"class Solution {\n    class UnionFind {\n        int parent[], rank[];\n        \n        public UnionFind(int n) {\n            parent = new int[n];\n            rank = new int[n];\n            \n            for (int i = 0; i < n; i++) {\n                parent[i] = i;\n                rank[i] = 1;\n            }\n        }\n        \n        public int find(int x) {\n            if (x == parent[x]) return x;\n            return parent[x] = find(parent[x]);\n        }\n        \n        public void union(int x, int y) {\n            int px = find(x);\n            int py = find(y);\n            if (px != py) {\n                if (rank[px] > rank[py]) {\n                    parent[py] = px;\n                } else if (rank[py] > rank[px]) {\n                    parent[px] = py;\n                } else {\n                    parent[py] = px;\n                    rank[px]++;\n                }\n            }\n        }\n    }\n    public boolean equationsPossible(String[] equations) {\n        UnionFind uf = new UnionFind(26);\n        for (String eq : equations) {\n            if (eq.charAt(1) == '=') {\n                uf.union(eq.charAt(0) - 'a', eq.charAt(3) - 'a');\n            }\n        }\n        \n        for (String eq : equations) {\n            if (eq.charAt(1) != '=') {\n                int px = uf.find(eq.charAt(0) - 'a');\n                int py = uf.find(eq.charAt(3) - 'a');\n                if (px == py)\n                    return false;\n            }\n        }\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"satisfiability-of-equality-equations"}