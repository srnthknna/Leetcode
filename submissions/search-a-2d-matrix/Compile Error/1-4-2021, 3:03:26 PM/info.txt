{"id":438621989,"lang":"java","time":"1 year, 1 month","timestamp":1609801406,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/438621989/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        \n        if (matrix.length == 0) return false;\n        \n        int left = 0, right = matrix.length * matrix[0].length - 1, pivotIdx, pivot;\n        \n        while (left <= right) {\n            pivotIdx = left + (right - left) / 2;\n            pivot = matrix[pivotIdx / n][pivotIdx % n];\n            \n            if (target == pivot) return true;\n            else {\n                if (target < pivot) right = pivotIdx - 1;\n                else left = pivotIdx + 1;\n            }\n        }\n        return false;\n    }\n}","compare_result":null,"title_slug":"search-a-2d-matrix"}