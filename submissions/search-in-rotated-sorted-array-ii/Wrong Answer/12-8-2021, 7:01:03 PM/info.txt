{"id":599141887,"lang":"java","time":"2 months, 2 weeks","timestamp":1639018863,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/599141887/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"N/A","code":"class Solution {\n    public boolean search(int[] nums, int target) {\n       int left = 0, right = nums.length - 1;\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            if (nums[mid] == target) return true;\n            else if (nums[mid] >= nums[left]) {\n                if (target >= nums[left] && target < nums[mid]) right = mid - 1;\n                else left = mid + 1;\n            } else {\n                if (target <= nums[right] && target > nums[mid]) left = mid + 1;\n                else right = mid - 1;\n            }\n        }\n        return false; \n    }\n}","compare_result":"111011010111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111","title_slug":"search-in-rotated-sorted-array-ii"}