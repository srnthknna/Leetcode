{"id":546391349,"lang":"java","time":"6Â months","timestamp":1630284330,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/546391349/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"36.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int findSecondMinimumValue(TreeNode root) {\n        int mini = root.val;\n        long ans = Long.MAX_VALUE;\n        \n        List<TreeNode> current = new ArrayList<>();\n        List<TreeNode> next;\n        \n        current.add(root);\n        \n        while(!current.isEmpty()) {\n            next = new ArrayList<>();\n            for (TreeNode node : current) {\n                if (mini < node.val && node.val < ans) {\n                    ans = node.val;\n                } else if (mini > node.val) {\n                    ans = mini;\n                    mini = node.val;\n                }\n                \n                if (node.left != null)\n                    next.add(node.left);\n                if (node.right != null)\n                    next.add(node.right);\n            }\n            \n            current = next;\n        }\n        return ans < Long.MAX_VALUE ? (int) ans : -1;\n    }\n    \n}","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree"}