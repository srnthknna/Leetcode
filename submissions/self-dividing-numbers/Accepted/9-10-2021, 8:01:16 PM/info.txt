{"id":552879088,"lang":"java","time":"5 months, 2 weeks","timestamp":1631329276,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/552879088/","is_pending":"Not Pending","title":"Self Dividing Numbers","memory":"36.8 MB","code":"class Solution {\n    public List<Integer> selfDividingNumbers(int left, int right) {\n        List<Integer> ans = new ArrayList<>();\n        for (int i = left; i <= right; i++) {\n            if (isSD(i))\n                ans.add(i);\n        }\n        return ans;\n    }\n    \n    private boolean isSD(int num) {\n        int copy = num;\n        int digit = copy % 10;\n        while (copy > 0) {\n            if (digit == 0 || num % digit > 0)\n                return false;\n            copy /= 10;\n            digit = copy % 10;\n        }\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"self-dividing-numbers"}