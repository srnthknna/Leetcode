{"id":644248620,"lang":"java","time":"1 week, 1 day","timestamp":1645238990,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/644248620/","is_pending":"Not Pending","title":"Serialize and Deserialize Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\npublic class Codec {\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        if (root == null) return \"\";\n        StringBuilder sb = new StringBuilder();\n        Queue<TreeNode> queue = new LinkedList<>();\n        queue.offer(root);\n        while (!queue.isEmpty()) {\n            TreeNode curr = queue.poll();\n            if (curr == null) {\n                sb.append(\"n \");\n                continue;\n            }\n            sb.append(curr.val + \" \");\n            queue.offer(curr.left);\n            queue.offer(curr.right);\n        }\n        return sb.toString();\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        if (data.length() == 0) return null;\n        String[] nodes = data.split(\" \");\n        Queue<TreeNode> queue = new LinkedList<>();\n        TreeNode root = new TreeNode(Integer.parseInt(nodes[0]));\n        \n        queue.offer(root);\n        for (int index = 1; index < nodes.length; index++) {\n            TreeNode curr = queue.poll();\n\n            if (!nodes[index].equals(\"n\")) {\n                curr.left = new TreeNode(Integer.parseInt(nodes[index++]));\n                queue.offer(curr.left);\n            }\n            if (!nodes[index].equals(\"n\")) {\n                curr.right = new TreeNode(Integer.parseInt(nodes[index++]));\n                queue.offer(curr.right);\n            }\n        }\n        return root;\n    }\n}\n\n// Your Codec object will be instantiated and called as such:\n// Codec ser = new Codec();\n// Codec deser = new Codec();\n// TreeNode ans = deser.deserialize(ser.serialize(root));","compare_result":"1111100000000000000000000000000000000000000000000000","title_slug":"serialize-and-deserialize-binary-tree"}