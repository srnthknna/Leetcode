{"id":585586939,"lang":"java","time":"3 months, 2 weeks","timestamp":1636647619,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/585586939/","is_pending":"Not Pending","title":"Serialize and Deserialize BST","memory":"40.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\npublic class Codec {\n    \n    private StringBuilder postOrder(TreeNode root, StringBuilder sb) {\n        if (root == null) return sb;\n        postOrder(root.left, sb);\n        postOrder(root.right, sb);\n        sb.append(root.val);\n        sb.append(\" \");\n        return sb;\n    }\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        StringBuilder sb = new StringBuilder();\n        sb = postOrder(root, sb);\n        if (sb.length() > 0) {\n            sb.deleteCharAt(sb.length() - 1);\n        }\n        return sb.toString();\n    }\n    \n    private TreeNode helper(int min, int max, ArrayDeque<Integer> arr) {\n        if (arr.isEmpty()) return null;\n        int num = arr.getLast();\n        \n        if (num < min || num > max) {\n            return null;\n        }\n        \n        arr.removeLast();\n        \n        TreeNode root = new TreeNode(num);\n        root.right = helper(num, max, arr);\n        root.left = helper(min, num, arr);\n        return root;\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        if (data.isEmpty()) return null;\n        ArrayDeque<Integer> arr = new ArrayDeque<>();\n        for (String s : data.split(\"\\\\s+\")) {\n            arr.add(Integer.valueOf(s));\n        }\n        return helper(Integer.MIN_VALUE, Integer.MAX_VALUE, arr);\n    }\n}\n\n// Your Codec object will be instantiated and called as such:\n// Codec ser = new Codec();\n// Codec deser = new Codec();\n// String tree = ser.serialize(root);\n// TreeNode ans = deser.deserialize(tree);\n// return ans;","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"serialize-and-deserialize-bst"}