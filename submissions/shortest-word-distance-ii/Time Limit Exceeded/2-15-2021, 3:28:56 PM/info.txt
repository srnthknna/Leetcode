{"id":456528403,"lang":"java","time":"1Â year","timestamp":1613431736,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/456528403/","is_pending":"Not Pending","title":"Shortest Word Distance II","memory":"N/A","code":"class WordDistance {\n    String[] words;\n    public WordDistance(String[] words) {\n        this.words = words;\n    }\n    \n    public int shortest(String word1, String word2) {\n        int i1 = -1, i2 = -1, minDistance = words.length;\n        for (int i = 0; i < words.length; i++) {\n            if (word1.equals(words[i])) {\n                i1 = i;\n            } else if (word2.equals(words[i])) {\n                i2 = i;\n            }\n            if (i1 != -1 && i2 != -1) {\n                minDistance = Math.min(minDistance, Math.abs(i1 - i2));\n            }\n        }\n        return minDistance;\n    }\n}\n\n/**\n * Your WordDistance object will be instantiated and called as such:\n * WordDistance obj = new WordDistance(words);\n * int param_1 = obj.shortest(word1,word2);\n */","compare_result":"111111111110","title_slug":"shortest-word-distance-ii"}