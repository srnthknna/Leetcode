{"id":619101618,"lang":"java","time":"1 month, 2 weeks","timestamp":1642092951,"status_display":"Accepted","runtime":"123 ms","url":"/submissions/detail/619101618/","is_pending":"Not Pending","title":"Shuffle an Array","memory":"95.2 MB","code":"class Solution {\n    \n    int[] original;\n    int[] array;\n    \n    Random rand;\n\n    public Solution(int[] nums) {\n        array = nums;\n        original = nums.clone();\n        rand = new Random();\n    }\n    \n    private int randomRange(int min, int max) {\n        return rand.nextInt(max - min) + min;\n    }\n    \n    private void swap(int i, int j) {\n        int temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    \n    public int[] reset() {\n        array = original;\n        original = original.clone();\n        return original;\n    }\n    \n    public int[] shuffle() {\n        for (int i = 0; i < array.length; i++)\n            swap(i, randomRange(i, array.length));\n        return array;\n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(nums);\n * int[] param_1 = obj.reset();\n * int[] param_2 = obj.shuffle();\n */","compare_result":"1111111111","title_slug":"shuffle-an-array"}