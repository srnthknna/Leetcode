{"id":436266319,"lang":"java","time":"1 year, 1 month","timestamp":1609302815,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/436266319/","is_pending":"Not Pending","title":"Single Number","memory":"40.6 MB","code":"class Solution {\n    public int singleNumber(int[] nums) {\n        Map<Integer, Integer> map = new HashMap<>();\n        Set<Integer> optimize = new HashSet<>();\n        for (int num : nums) {\n            optimize.add(num);\n            if (map.containsKey(num)) {\n                optimize.remove(num);\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1);\n            }\n        }\n        for (int key : optimize) {\n            if (map.get(key) == 1) return key;\n        }\n        return 0;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"single-number"}