{"id":635946318,"lang":"java","time":"3Â weeks","timestamp":1644179878,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/635946318/","is_pending":"Not Pending","title":"Smallest Rectangle Enclosing Black Pixels","memory":"42.8 MB","code":"class Solution {\n    int top, bottom, left, right;\n    public int minArea(char[][] image, int x, int y) {\n        if (image.length == 0 || image[0].length == 0) return 0;\n        top = bottom = x;\n        left = right = y;\n        dfs(image, x, y);\n        return (bottom - top) * (right - left);\n    }\n    \n    private void dfs(char[][] image, int x, int y) {\n        if (x < 0 || y < 0 || x >= image.length || y >= image[0].length || image[x][y] == '0') return;\n        image[x][y] = '0';\n        top = Math.min(top, x);\n        bottom = Math.max(bottom, x + 1);\n        left = Math.min(left, y);\n        right = Math.max(right, y + 1);\n        dfs(image, x + 1, y);\n        dfs(image, x, y + 1);\n        dfs(image, x - 1, y);\n        dfs(image, x, y - 1);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-rectangle-enclosing-black-pixels"}