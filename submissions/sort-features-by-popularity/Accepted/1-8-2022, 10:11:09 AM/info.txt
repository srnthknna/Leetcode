{"id":615696672,"lang":"java","time":"1 month, 2 weeks","timestamp":1641665469,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/615696672/","is_pending":"Not Pending","title":"Sort Features by Popularity","memory":"42.4 MB","code":"class Solution {\n    public String[] sortFeatures(String[] features, String[] responses) {\n        Map<String, Integer> counts = new HashMap<>();\n        for (String feature : features) {\n            counts.put(feature, 0);\n        }\n        \n        for (String response : responses) {\n            Set<String> wordSet = new HashSet<>(Arrays.asList(response.split(\" \")));\n            for (String word : wordSet) {\n                if (counts.containsKey(word))\n                    counts.put(word, counts.get(word) + 1);\n            }\n        }\n        \n        Arrays.sort(features, (feature1, feature2) -> (counts.get(feature2) - counts.get(feature1)));\n        \n        return features;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-features-by-popularity"}