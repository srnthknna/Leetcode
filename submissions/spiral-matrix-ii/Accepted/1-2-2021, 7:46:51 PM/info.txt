{"id":437823216,"lang":"java","time":"1 year, 1 month","timestamp":1609645611,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/437823216/","is_pending":"Not Pending","title":"Spiral Matrix II","memory":"38.8 MB","code":"class Solution {\n    public int[][] generateMatrix(int n) {\n        int[][] matrix = new int[n][n];\n        if (n == 0) return matrix;\n        int rowBegin = 0, colBegin = 0, rowEnd = matrix.length - 1, colEnd = matrix[0].length - 1; \n        \n        int count = 1;\n        while (rowBegin <= rowEnd && colBegin <= colEnd ) {\n            for (int i = colBegin; i <= colEnd; i++, count++) {\n                matrix[rowBegin][i] = count;\n            }\n            rowBegin++;\n            \n            for (int i = rowBegin; i <= rowEnd; i++, count++) {\n                matrix[i][colEnd] = count;\n            }\n            colEnd--;\n            \n            if (rowBegin <= rowEnd) {\n                for (int i = colEnd; i >= colBegin; i--, count++) {\n                    matrix[rowEnd][i] = count;\n                }\n            }\n            rowEnd--;\n            \n            if (colBegin <= colEnd) {\n                for (int i = rowEnd; i >= rowBegin; i--, count++) {\n                    matrix[i][colBegin] = count;\n                }\n            }\n            colBegin++;\n        }\n        return matrix;\n    }\n}","compare_result":"11111111111111111111","title_slug":"spiral-matrix-ii"}