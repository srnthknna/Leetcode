{"id":644248493,"lang":"java","time":"1 week, 1 day","timestamp":1645238971,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/644248493/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"41.5 MB","code":"class Solution {\n    public int splitArray(int[] nums, int m) {\n        int left = 0, right = 0;\n        for (int num : nums) {\n            left = Math.max(num, left);\n            right += num;\n        }\n        \n        while (left < right) {\n            int mid = left + (right - left) / 2;\n            if (canSplit(mid, nums, m)) {\n                right = mid;\n            } else \n                left = mid + 1;\n        }\n        return left;\n    }\n    \n    private boolean canSplit(int max, int[] nums, int m) {\n        int total = 0, count = 1;\n        for (int num : nums) {\n            if (total + num > max) {\n                total = 0;\n                count++;\n            }\n            total += num;\n            if (count > m) return false;\n        }\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"split-array-largest-sum"}