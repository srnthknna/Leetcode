{"id":598576163,"lang":"java","time":"2 months, 3 weeks","timestamp":1638922915,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/598576163/","is_pending":"Not Pending","title":"Sqrt(x)","memory":"38.5 MB","code":"class Solution {\n    public int mySqrt(int x) {\n        // If below 2 return directly as the sqrt is either 0 or 1\n        if (x < 2) return x;\n        // start with 2 and till half of the number\n        int left = 2, right = x / 2;\n\n        long num;\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            \n            // to accomodate overflow we need to take in long\n            num = (long) mid * mid;\n            \n            if (num == x) return mid;\n            else if (num < x) left = mid + 1;\n            else right = mid - 1;\n        }\n        return right;\n    }\n}","compare_resulttitle_slug":"sqrtx"}