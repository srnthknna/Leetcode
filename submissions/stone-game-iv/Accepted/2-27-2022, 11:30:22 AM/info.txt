{"id":650092113,"lang":"java","time":"5 hours, 11 minutes","timestamp":1645990222,"status_display":"Accepted","runtime":"171 ms","url":"/submissions/detail/650092113/","is_pending":"Not Pending","title":"Stone Game IV","memory":"68.2 MB","code":"// https://www.youtube.com/watch?v=4l5teiw13Jk&list=PLEI-q7w3s9gTJxsvjlI4NxWXtI3-UHUff&index=5&ab_channel=CodingDecoded\n// Simulation is the key with dp\n// we store the n - moves to revisit if we have already solved the smaller problem before\n// if we already computed the smaller problem then return what we know\n// if the current moves returns 0 stones left then return true\n// else pass the ball to bob and check if alice has more chance to play the game again\n// before responding just store the games computation\nclass Solution {\n    Boolean[] dp = new Boolean[100000 + 1];\n    public boolean winnerSquareGame(int n) {\n        if (dp[n] != null) {\n            return dp[n];\n        }\n        \n        boolean aliceWins = false;\n        for (int move = 1; n >= move * move; move++) {\n            if (n - move * move == 0) {\n                aliceWins = true;\n                break;\n            } else {\n                aliceWins = aliceWins || !winnerSquareGame(n - move * move);\n            }\n        }\n        return dp[n] = aliceWins;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stone-game-iv"}