{"id":647531450,"lang":"java","time":"4 days, 8 hours","timestamp":1645634127,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/647531450/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"N/A","code":"class Solution {\n    public int subarraysDivByK(int[] nums, int k) {\n        int count = 0, rem = 0, sum = 0;\n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0, 1);\n        \n        for (int i = 0; i < nums.length; i++) {\n            sum += nums[i];\n            rem = sum % k;\n            \n            if (map.containsKey(rem))\n                count += map.get(rem);\n            map.put(rem, map.getOrDefault(rem, 0) + 1);\n        } \n        return count;\n    }\n}","compare_result":"1111111111101111111111101100111111111111111110110100000100000000001000000","title_slug":"subarray-sums-divisible-by-k"}