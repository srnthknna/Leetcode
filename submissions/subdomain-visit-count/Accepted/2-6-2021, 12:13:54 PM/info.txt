{"id":452871388,"lang":"java","time":"1Â year","timestamp":1612642434,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/452871388/","is_pending":"Not Pending","title":"Subdomain Visit Count","memory":"39.5 MB","code":"class Solution {\n    public List<String> subdomainVisits(String[] cpdomains) {\n        Map<String, Integer> counts = new HashMap<>();\n        \n        for (String cpdomain : cpdomains) {\n            int spaceIndex = cpdomain.indexOf(\" \");\n            int hits = Integer.parseInt(cpdomain.substring(0, spaceIndex));\n            String domain = cpdomain.substring(spaceIndex + 1);\n            while (!domain.isEmpty()) {\n                int dotIndex = domain.indexOf(\".\");\n                counts.put(domain, counts.getOrDefault(domain, 0) + hits);\n                if (dotIndex != -1) {\n                    domain = domain.substring(dotIndex + 1);\n                } else {\n                    domain = \"\";\n                }\n            }\n        }\n        \n        List<String> ans = new ArrayList<>();\n        for (String key : counts.keySet()) {\n            ans.add(new StringBuilder().append(counts.get(key)).append(\" \").append(key).toString());\n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"subdomain-visit-count"}