{"id":481970391,"lang":"java","time":"10 months, 2 weeks","timestamp":1618713284,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/481970391/","is_pending":"Not Pending","title":"Subsets","memory":"40 MB","code":"class Solution {\n    public List<List<Integer>> subsets(int[] nums) {\n        List<List<Integer>> output = new ArrayList<>();\n        //Arrays.sort(nums);\n        helper(0, nums, output, new ArrayList<>());\n        return output;\n    }\n    \n    private void helper(int index, int[] nums, List<List<Integer>> output, List<Integer> arr) {\n        output.add(new ArrayList<>(arr));\n        \n        for (int i = index; i < nums.length; i++) {\n            //if (i > index && nums[i] == nums[i - 1]) continue;\n            arr.add(nums[i]);\n            helper(i + 1, nums, output, arr);\n            arr.remove(arr.size() - 1);\n        }\n    }\n    \n// Interative    \n//     public List<List<Integer>> subsets(int[] nums) {\n//         List<List<Integer>> output = new ArrayList<>();\n//         output.add(new ArrayList<Integer>());\n        \n//         for (int num : nums) {\n//             List<List<Integer>> newSubsets = new ArrayList<>();\n            \n//             for (List<Integer> curr : output) {\n//                 newSubsets.add(new ArrayList<Integer>(curr){{add(num);}});\n//             }\n            \n//             output.addAll(newSubsets);\n//         }\n//         return output;\n//     }\n}","compare_result":"1111111111","title_slug":"subsets"}