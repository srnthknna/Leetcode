{"id":495582576,"lang":"java","time":"9 months, 1 week","timestamp":1621476457,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/495582576/","is_pending":"Not Pending","title":"Subsets","memory":"39 MB","code":"class Solution {\n    public List<List<Integer>> subsets(int[] nums) {\n        List<List<Integer>> output = new ArrayList<>();\n        Arrays.sort(nums);\n        backtrack(output, new ArrayList<>(), nums, 0);\n        return output;\n    }\n    \n    private void backtrack(List<List<Integer>> output, List<Integer> temp, int[] nums, int start) {\n        output.add(new ArrayList<>(temp));\n        for (int i = start; i < nums.length; i++) {\n            temp.add(nums[i]);\n            backtrack(output, temp, nums, i + 1);\n            temp.remove(temp.size() - 1);\n        }\n    }\n}","compare_result":"1111111111","title_slug":"subsets"}