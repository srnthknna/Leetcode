{"id":538984829,"lang":"java","time":"6 months, 2 weeks","timestamp":1629050237,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/538984829/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"39.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode r, TreeNode s) {\n        if (r == null) {\n            return s == null;\n        }\n        return isSame(r, s) || isSubtree(r.left, s) || isSubtree(r.right, s);\n    }\n    \n    private boolean isSame(TreeNode r, TreeNode s) {\n        if (r == null && s == null) return true;\n        if (r == null || s == null) return false;\n        \n        if (r.val != s.val) return false;\n        return isSame(r.left, s.left) && isSame(r.right, s.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree"}