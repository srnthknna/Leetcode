{"id":507857773,"lang":"java","time":"8 months, 2 weeks","timestamp":1623687565,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/507857773/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"36.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        return calc(root, false);\n    }\n    \n    private int calc(TreeNode root, boolean isLeft) {\n        if (root == null) return 0;\n        int sum = 0;\n        if (isLeft && root.left == null & root.right == null)\n            sum += root.val;\n        return sum + calc(root.left, true) + calc(root.right, false);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves"}