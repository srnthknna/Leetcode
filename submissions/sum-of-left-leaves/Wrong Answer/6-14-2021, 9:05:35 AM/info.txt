{"id":507852340,"lang":"java","time":"8 months, 2 weeks","timestamp":1623686735,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/507852340/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        int cur = 0;\n        if (root == null) return cur;\n        if (root.left != null) cur = root.left.val;\n        return cur + sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right);\n    }\n}","compare_result":"1111100101010000010000000000000001111010110000110000101100000000000000010110000000000000110000101100","title_slug":"sum-of-left-leaves"}