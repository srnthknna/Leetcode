{"id":436682822,"lang":"java","time":"1 year, 1 month","timestamp":1609389510,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/436682822/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"37.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumRootToLeaf(TreeNode root) {\n        return dfs(root, 0);\n    }\n    \n    private int dfs(TreeNode root, int sum) {\n        if (root == null) return 0;\n        sum = 2 * sum + root.val;\n        if (root.left == null && root.right == null) return sum;\n        return dfs(root.left, sum) + dfs(root.right, sum);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers"}