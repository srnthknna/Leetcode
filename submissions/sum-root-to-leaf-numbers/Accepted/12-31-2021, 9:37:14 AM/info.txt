{"id":610454465,"lang":"java","time":"1 month, 4 weeks","timestamp":1640972234,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/610454465/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"38.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int rootToLeaf = 0;\n    public int sumNumbers(TreeNode root) {\n        preOrder(root, 0);\n        return rootToLeaf;\n    }\n    \n    private void preOrder(TreeNode root, int currNumber) {\n        if (root != null) {\n            currNumber = currNumber * 10 + root.val;\n        \n            if (root.left == null && root.right == null) {\n                rootToLeaf += currNumber;\n            }\n            preOrder(root.left, currNumber);\n            preOrder(root.right, currNumber);\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers"}