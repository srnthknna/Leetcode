{"id":519488562,"lang":"java","time":"7 months, 3 weeks","timestamp":1625780276,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/519488562/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"65.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapNodes(ListNode head, int k) {\n        ListNode front = null;\n        ListNode end = null;\n        ListNode current = head;\n        int count = 0;\n        while (current != null) {\n            count++;\n            \n            if (end != null)\n                end = end.next;\n            \n            if (count == k) {\n                front = current;\n                end = head;\n            }\n            \n            current = current.next;\n        }\n        \n        int temp = front.val;\n        front.val = end.val;\n        end.val = temp;\n        \n        return head;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list"}