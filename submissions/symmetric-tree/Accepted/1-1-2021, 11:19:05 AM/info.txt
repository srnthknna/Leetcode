{"id":437214092,"lang":"java","time":"1 year, 1 month","timestamp":1609528745,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/437214092/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"37.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        if (root == null) return true;\n        return validate(root.left, root.right);\n    }\n    \n    private boolean validate(TreeNode l, TreeNode r) {\n        if (l == null && r == null) return true;\n        if (l == null || r == null) return false;\n        if (l.val == r.val) {\n            return validate(l.left, r.right) && validate(l.right, r.left);\n        }\n        return false;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}