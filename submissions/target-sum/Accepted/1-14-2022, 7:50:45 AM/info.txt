{"id":619734426,"lang":"java","time":"1 month, 2 weeks","timestamp":1642175445,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/619734426/","is_pending":"Not Pending","title":"Target Sum","memory":"48.3 MB","code":"class Solution {\n    public int findTargetSumWays(int[] nums, int target) {\n        int total = Arrays.stream(nums).sum();\n        int[] dp = new int[2 * total + 1];\n        dp[nums[0] + total] = 1;\n        dp[-nums[0] + total] += 1;\n        \n        for (int i = 1; i < nums.length; i++) {\n            int[] next = new int[2 * total + 1];\n            for (int sum = -total; sum <= total; sum++) {\n                if (dp[sum + total] > 0) {\n                    next[sum + nums[i] + total] += dp[sum + total];\n                    next[sum - nums[i] + total] += dp[sum + total];\n                }\n            }\n            dp = next;\n        }\n        \n        return Math.abs(target) > total ? 0 : dp[target + total];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum"}