{"id":608622507,"lang":"java","time":"2Â months","timestamp":1640710102,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/608622507/","is_pending":"Not Pending","title":"Triangle","memory":"38.5 MB","code":"class Solution {\n    public int minimumTotal(List<List<Integer>> triangle) {\n        for (int r = 1; r < triangle.size(); r++) {\n            for (int c = 0; c <=r ; c++) {\n                int smallestAbove = Integer.MAX_VALUE;\n                if (c > 0) {\n                    smallestAbove = triangle.get(r - 1).get(c - 1);\n                }\n                if (c < r) {\n                    smallestAbove = Math.min(smallestAbove, triangle.get(r - 1).get(c));\n                }\n                int path = smallestAbove + triangle.get(r).get(c);\n                triangle.get(r).set(c, path);\n            }\n        }\n        return Collections.min(triangle.get(triangle.size() - 1));\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle"}