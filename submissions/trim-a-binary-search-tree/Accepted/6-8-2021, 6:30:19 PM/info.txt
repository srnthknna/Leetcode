{"id":505180096,"lang":"java","time":"8 months, 3 weeks","timestamp":1623202219,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/505180096/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"38.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode trimBST(TreeNode root, int low, int high) {\n        if (root == null) return root;\n        if (root.val < low) {\n            return trimBST(root.right, low, high);\n        } else if (root.val > high) {\n            return trimBST(root.left, low, high);\n        }\n        root.left = trimBST(root.left, low, high);\n        root.right = trimBST(root.right, low, high);\n        return root;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trim-a-binary-search-tree"}