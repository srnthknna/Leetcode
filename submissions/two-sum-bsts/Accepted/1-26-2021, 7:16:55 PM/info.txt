{"id":448322607,"lang":"java","time":"1 year, 1 month","timestamp":1611717415,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/448322607/","is_pending":"Not Pending","title":"Two Sum BSTs","memory":"48.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean twoSumBSTs(TreeNode root1, TreeNode root2, int target) {\n        Set<Integer> set = inHashSet(root1, target, new HashSet());\n        return inCheck(root2, set);\n    }\n    \n    private boolean inCheck(TreeNode root2, Set<Integer> set) {\n        if (root2 == null) return false;\n        return inCheck(root2.left, set) || set.contains(root2.val) || inCheck(root2.right, set);\n    }\n    \n    private Set<Integer> inHashSet(TreeNode root1, int target, Set<Integer> set) {\n        if (root1 == null) return set;\n        inHashSet(root1.left, target, set);\n        set.add(target - root1.val);\n        inHashSet(root1.right, target, set);\n        return set;\n    }\n}","compare_result":"111111111111111111","title_slug":"two-sum-bsts"}