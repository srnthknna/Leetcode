{"id":584561722,"lang":"java","time":"3 months, 2 weeks","timestamp":1636476776,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/584561722/","is_pending":"Not Pending","title":"Two Sum BSTs","memory":"40 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private void inHashSet(TreeNode root, Set<Integer> set, int target) {\n        if (root == null) return;\n        inHashSet(root.left, set, target);\n        set.add(target - root.val);\n        inHashSet(root.right, set, target);\n    }\n    private boolean inCheck(TreeNode root, Set<Integer> set) {\n        if (root == null) return false;\n        return inCheck(root.left, set) || set.contains(root.val) || inCheck(root.right, set);\n    }\n    public boolean twoSumBSTs(TreeNode root1, TreeNode root2, int target) {\n        Set<Integer> set = new HashSet<>();\n        inHashSet(root1, set, target);\n        return inCheck(root2, set);\n    }\n}","compare_result":"1111111111111111111","title_slug":"two-sum-bsts"}