{"id":541629600,"lang":"java","time":"6 months, 1 week","timestamp":1629497699,"status_display":"Accepted","runtime":"86 ms","url":"/submissions/detail/541629600/","is_pending":"Not Pending","title":"Two Sum III - Data structure design","memory":"44.5 MB","code":"class TwoSum {\n\n    Map<Integer, Integer> map;\n    \n    /** Initialize your data structure here. */\n    public TwoSum() {\n        map = new HashMap<>();\n    }\n    \n    /** Add the number to an internal data structure.. */\n    public void add(int number) {\n        map.put(number, map.getOrDefault(number, 0) + 1);\n    }\n    \n    /** Find if there exists any pair of numbers which sum is equal to the value. */\n    public boolean find(int value) {\n        for (int number : map.keySet()) {\n            int compliment = value - number;\n            if (compliment != number) {\n                if (map.containsKey(compliment)) return true;\n            } else {\n                if (map.get(compliment) > 1) return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Your TwoSum object will be instantiated and called as such:\n * TwoSum obj = new TwoSum();\n * obj.add(number);\n * boolean param_2 = obj.find(value);\n */","compare_result":"1111111111111111111","title_slug":"two-sum-iii-data-structure-design"}