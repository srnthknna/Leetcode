{"id":532379823,"lang":"java","time":"6Â months, 4Â weeks","timestamp":1627953271,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/532379823/","is_pending":"Not Pending","title":"Two Sum","memory":"40.6 MB","code":"class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        int[] ans = new int[2];\n        for (int i = 0; i < nums.length; i++) {\n            List<Integer> list = map.getOrDefault(nums[i], new ArrayList<Integer>());\n            list.add(i);\n            map.put(nums[i], list);\n        }\n        for (int num : nums) {\n            System.out.println(num);\n            if (num == (target - num) && map.get(num).size() > 1) {\n                ans[0] = map.get(num).get(0);\n                ans[1] = map.get(num).get(1);\n                return ans;\n            } else if (map.containsKey(num) && map.containsKey(target - num) && num != (target - num)) {\n                ans[0] = map.get(num).get(0);\n                ans[1] = map.get(target - num).get(0);\n                return ans;\n            }\n                \n        }\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"two-sum"}