{"id":609884943,"lang":"java","time":"1 month, 4 weeks","timestamp":1640884689,"status_display":"Accepted","runtime":"461 ms","url":"/submissions/detail/609884943/","is_pending":"Not Pending","title":"Unique Length-3 Palindromic Subsequences","memory":"51.9 MB","code":"class Solution {\n    public int countPalindromicSubsequence(String s) {\n        int[] left = new int[26], right = new int[26];\n        int res = 0;\n        \n        Arrays.fill(left, Integer.MAX_VALUE);\n        for (int i = 0; i < s.length(); i++) {\n            left[s.charAt(i) - 'a'] = Math.min(left[s.charAt(i) - 'a'], i);\n            right[s.charAt(i) - 'a'] = i;\n        }\n        \n        for (int i = 0; i < 26; i++) {\n            if (left[i] < right[i]) {\n                res += s.substring(left[i] + 1, right[i]).chars().distinct().count();\n            }\n        }\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-length-3-palindromic-subsequences"}