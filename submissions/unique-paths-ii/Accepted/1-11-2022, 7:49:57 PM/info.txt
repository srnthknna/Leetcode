{"id":618062135,"lang":"java","time":"1 month, 2 weeks","timestamp":1641959397,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/618062135/","is_pending":"Not Pending","title":"Unique Paths II","memory":"39.1 MB","code":"class Solution {\n    public int uniquePathsWithObstacles(int[][] obstacleGrid) {\n        int row = obstacleGrid.length, col = obstacleGrid[0].length;\n        \n        if (obstacleGrid[0][0] == 1) return 0;\n        \n        obstacleGrid[0][0] = 1;\n        \n        for (int i = 1; i < col; i++) \n            obstacleGrid[0][i] = (obstacleGrid[0][i] == 0 && obstacleGrid[0][i - 1] == 1) ? 1 : 0;\n\n        for (int i = 1; i < row; i++) \n            obstacleGrid[i][0] = (obstacleGrid[i][0] == 0 && obstacleGrid[i - 1][0] == 1) ? 1 : 0;\n        \n        for (int i = 1; i < row; i++) {\n            for (int j = 1; j < col; j++) {\n                if (obstacleGrid[i][j] == 0)\n                    obstacleGrid[i][j] = obstacleGrid[i - 1][j] + obstacleGrid[i][j - 1];\n                else\n                    obstacleGrid[i][j] = 0;\n            }\n        }\n        return obstacleGrid[row - 1][col - 1];\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii"}