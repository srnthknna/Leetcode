{"id":443777305,"lang":"java","time":"1 year, 1 month","timestamp":1610825821,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/443777305/","is_pending":"Not Pending","title":"Unique Paths","memory":"38.6 MB","code":"class Solution {\n    Map<String, Integer> map = new HashMap<>();\n    public int uniquePaths(int m, int n) {\n        if (m == 1 || n == 1) return 1;\n        if (m == 0 || n == 0) return 0;\n        int down = 0, right = 0;\n        String downKey = m - 1 + \",\" + n, rightKey = m + \",\" + (n - 1);\n        if (map.containsKey(downKey)) {\n            down = map.get(downKey);\n        } else {\n            down = uniquePaths(m - 1, n);\n            map.put(downKey, down);\n        }\n        \n        if (map.containsKey(rightKey)) {\n            right = map.get(rightKey);\n        } else {\n            right = uniquePaths(m, n - 1);\n            map.put(rightKey, right);\n        }\n        return down + right;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-paths"}