{"id":436895642,"lang":"java","time":"1 year, 1 month","timestamp":1609444032,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/436895642/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"36.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isUnivalTree(TreeNode root) {\n        if (root == null) return true;\n        return dfs(root, root.val);\n    }\n    \n    private boolean dfs(TreeNode root, int val) {\n        if (root == null) return true;\n        if (root.val != val) return false;\n        return dfs(root.left, val) && dfs(root.right, val);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}