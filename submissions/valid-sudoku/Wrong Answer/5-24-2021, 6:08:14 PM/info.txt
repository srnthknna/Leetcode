{"id":497831148,"lang":"java","time":"9 months, 1 week","timestamp":1621904894,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/497831148/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"N/A","code":"class Solution {\n    public boolean isValidSudoku(char[][] board) {\n        for (int i = 0; i < board.length; i++) {\n            Set<Character> rows = new HashSet<>();\n            Set<Character> cols = new HashSet<>();\n            Set<Character> cube = new HashSet<>();\n            for (int j = 0; j < board[0].length; j++) {\n                if (board[i][j] != '.' && !rows.add(board[i][j])) return false;\n                if (board[i][j] != '.' && !cols.add(board[i][j])) return false;\n                int rowInd = 3 * (i / 3);\n                int colInd = 3 * (i % 3);\n                if (board[rowInd + (j / 3)][colInd + (j % 3)] != '.' && !cube.add(board[rowInd + (j / 3)][colInd + (j % 3)])) return false;\n            } \n        }\n        return true;\n    }\n}","compare_result":"111110111111011111111111111111111111111111111111111011111111111111111111111111111111111101111111111011111011111011111111110111111111111101111111111111111111111101110011111111111110101101111101111111101111111111011011111111111101111110111111110100111111111111111111110001111101111111100111111110111111110101111110011011111101111111111111101111011110111111111111111110111111111111111111110110011111111111011111110110111111110101101111111111111111110111111111101110111111111111101111111111111011111111111111111","title_slug":"valid-sudoku"}