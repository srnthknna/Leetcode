{"id":497831560,"lang":"java","time":"9 months, 1 week","timestamp":1621904984,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/497831560/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"N/A","code":"class Solution {\n    public boolean isValidSudoku(char[][] board) {\n        for (int i = 0; i < 9; i++) {\n            Set<Character> rows = new HashSet<>();\n            Set<Character> cols = new HashSet<>();\n            Set<Character> cube = new HashSet<>();\n            for (int j = 0; j < 9; j++) {\n                if (board[i][j] != '.' && !rows.add(board[i][j])) return false;\n                if (board[i][j] != '.' && !cols.add(board[j][i])) return false;\n                int rowInd = 3 * (i / 3);\n                int colInd = 3 * (i % 3);\n                if (board[rowInd + (j / 3)][colInd + (j % 3)] != '.' && !cube.add(board[rowInd + (j / 3)][colInd + (j % 3)])) return false;\n            } \n        }\n        return true;\n    }\n}","compare_result":"011101001110111000001001000101110001110111110010011101101011010111100000010100011000011110001101100100101111111111011011011011110011111111011011110111111010111111101111111001000111011110011111111001010100001111110101101011111010100111010100001111000101111111011111111111011111000101111101100111110000101111001111111101110111111110111101111110101101111001111010110011110111101101001010111111111111111100111011011111010100011010111111111111110111111111101111111011010101111001010111111101111111011011111111110","title_slug":"valid-sudoku"}