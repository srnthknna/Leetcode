{"id":432373188,"lang":"java","time":"1 year, 2 months","timestamp":1608413160,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/432373188/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        if (root == null) {\n            return true;\n        }\n        if (root.left != null && root.left.val >= root.val) {\n            return false;\n        }\n        if (root.right != null && root.right.val <= root.val) {\n            return false;\n        }\n        return isValidBST(root.left) && isValidBST(root.right) && isValidBSTLeft(root.left, root.val) && isValidBSTRight(root.right, root.val);\n    }\n    \n    private boolean isValidBSTLeft(TreeNode root, int val) {\n        if (root == null) {\n            return true;\n        }\n        if (root.val >= val) {\n            return false;\n        }\n        return isValidBST(root.left) && isValidBST(root.right);\n    }\n    \n    private boolean isValidBSTRight(TreeNode root, int val) {\n        if (root == null) {\n            return true;\n        }\n        if (root.val <= val) {\n            return false;\n        }\n        return isValidBST(root.left) && isValidBST(root.right);\n    }\n}","compare_result":"11111111110010010011111111111111111111111111111111111100000000000000000000000","title_slug":"validate-binary-search-tree"}