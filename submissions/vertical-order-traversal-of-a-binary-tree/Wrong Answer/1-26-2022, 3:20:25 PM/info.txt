{"id":628563885,"lang":"java","time":"1Â month","timestamp":1643239225,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/628563885/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> verticalTraversal(TreeNode root) {\n        List<List<Integer>> result = new ArrayList<>();\n        if (root == null) return result;\n        int column = 0, minCol = 0, maxCol = 0;\n        Map<Integer, List<Integer>> indexToNodes = new HashMap<>();\n        Queue<Pair<TreeNode, Integer>> queue = new LinkedList<>();\n        queue.offer(new Pair<TreeNode, Integer>(root, 0));\n        \n        while (!queue.isEmpty()) {\n            Pair<TreeNode, Integer> curr = queue.poll();\n            TreeNode currRoot = curr.getKey();\n            Integer currCol = curr.getValue();\n            \n            if (currRoot != null) {\n                if (!indexToNodes.containsKey(currCol)) {\n                    indexToNodes.put(currCol, new ArrayList<>());\n                }\n                if (currRoot != null) {\n                    indexToNodes.get(currCol).add(currRoot.val);\n                }\n                minCol = Math.min(minCol, currCol);\n                maxCol = Math.max(maxCol, currCol);\n                queue.offer(new Pair<>(currRoot.left, currCol - 1));\n                queue.offer(new Pair<>(currRoot.right, currCol + 1));\n            }\n        }\n        \n        for (int i = minCol; i <= maxCol; i++) {\n            result.add(indexToNodes.get(i));\n        }\n        \n        return result;\n    }\n}","compare_result":"11011111111111011010000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree"}