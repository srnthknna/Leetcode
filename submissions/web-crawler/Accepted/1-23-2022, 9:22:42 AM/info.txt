{"id":626158997,"lang":"java","time":"1Â month","timestamp":1642958562,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/626158997/","is_pending":"Not Pending","title":"Web Crawler","memory":"47.1 MB","code":"/**\n * // This is the HtmlParser's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface HtmlParser {\n *     public List<String> getUrls(String url) {}\n * }\n */\n\nclass Solution {\n    public List<String> crawl(String startUrl, HtmlParser htmlParser) {\n        Set<String> visited = new HashSet<>();\n        Queue<String> queue = new LinkedList<>();\n        queue.offer(startUrl);\n        visited.add(startUrl);\n        String hostname = getHostName(startUrl);\n        \n        while (!queue.isEmpty()) {\n            String curr = queue.poll();\n            for (String neigh : htmlParser.getUrls(curr)) {\n                if (neigh.contains(hostname) && !visited.contains(neigh)) {\n                    queue.offer(neigh);\n                    visited.add(neigh);\n                }\n            }\n        }\n        return new ArrayList<String>(visited);\n    }\n    \n    private String getHostName(String url) {\n        return url.split(\"/\")[2];\n    }\n}","compare_result":"11111111111111111111","title_slug":"web-crawler"}