{"id":438092680,"lang":"java","time":"1 year, 1 month","timestamp":1609700081,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/438092680/","is_pending":"Not Pending","title":"Word Search","memory":"40.7 MB","code":"class Solution {\n    boolean[][] visited;\n    public boolean exist(char[][] board, String word) {\n        int row = board.length, col = board[0].length;\n        visited = new boolean[row][col];\n        \n        for (int i = 0; i < row; i++) {\n            for (int j = 0; j < col; j++) {\n                if (board[i][j] == word.charAt(0) && validator(i, j, 0, board, word)) {\n                    return true;\n                }\n            }\n        }\n        \n        return false;\n    }\n    \n    private boolean validator(int i, int j, int index, char[][] board, String word) {\n        if (index == word.length()) return true;\n\n        if (i < 0 || j < 0 || i >= board.length || j >= board[0].length || board[i][j] != word.charAt(index) || visited[i][j]) {\n            return false;\n        }\n        \n        visited[i][j] = true;\n        \n        if (validator(i + 1, j, index + 1, board, word) ||\n           validator(i - 1, j, index + 1, board, word) ||\n           validator(i, j + 1, index + 1, board, word) ||\n           validator(i, j - 1, index +1, board, word)) {\n            return true;\n        }\n        \n        visited[i][j] = false;\n        return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search"}