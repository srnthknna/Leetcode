{"id":608097592,"lang":"java","time":"2Â months","timestamp":1640632506,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/608097592/","is_pending":"Not Pending","title":"Zigzag Iterator","memory":"39.4 MB","code":"public class ZigzagIterator {\n    List<List<Integer>> vectors = new ArrayList<>();\n    LinkedList<Pair<Integer, Integer>> queue = new LinkedList<>();\n\n    public ZigzagIterator(List<Integer> v1, List<Integer> v2) {\n        vectors.add(v1);\n        vectors.add(v2);\n        int index = 0;\n        for (List<Integer> vec : vectors) {\n            if (vec.size() > 0) {\n                queue.add(new Pair<>(index, 0));\n            }\n            index++;\n        }\n    }\n\n    public int next() {\n        Pair<Integer, Integer> pointer = queue.remove();\n        int vecIndex = pointer.getKey();\n        int elemIndex = pointer.getValue();\n        int nextElemIndex = elemIndex + 1;\n        \n        if (nextElemIndex < vectors.get(vecIndex).size()) {\n            queue.add(new Pair<>(vecIndex, nextElemIndex));\n        }\n        return vectors.get(vecIndex).get(elemIndex);\n    }\n\n    public boolean hasNext() {\n        return !queue.isEmpty();\n    }\n}\n\n/**\n * Your ZigzagIterator object will be instantiated and called as such:\n * ZigzagIterator i = new ZigzagIterator(v1, v2);\n * while (i.hasNext()) v[f()] = i.next();\n */","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"zigzag-iterator"}